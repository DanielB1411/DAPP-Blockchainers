{
	"id": "f7bdf9265999879d5af18f4148b29c08",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Marketplace_Simple.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\n\r\ncontract BoredPetsNFT is ERC721URIStorage {\r\n  uint256 private _tokenIds;\r\n  address marketplaceContract;\r\n  event NFTMinted(uint256);\r\n\r\n  constructor(address _marketplaceContract) ERC721(\"Bored Pets Yacht Club\", \"BPYC\") {\r\n    marketplaceContract = _marketplaceContract;\r\n  }\r\n\r\n  function mint(string memory _tokenURI) public {\r\n    _tokenIds++;\r\n    uint256 newTokenId = _tokenIds;\r\n    _safeMint(msg.sender, newTokenId);\r\n    _setTokenURI(newTokenId, _tokenURI);\r\n    setApprovalForAll(marketplaceContract, true);\r\n    emit NFTMinted(newTokenId);\r\n  }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {ERC721} from \"../ERC721.sol\";\r\nimport {Strings} from \"../../../utils/Strings.sol\";\r\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\r\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\r\n\r\n/**\r\n * @dev ERC721 token with storage based token URI management.\r\n */\r\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\r\n    using Strings for uint256;\r\n\r\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\r\n    // defines events and does not include any external function.\r\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\r\n\r\n    // Optional mapping for token URIs\r\n    mapping(uint256 tokenId => string) private _tokenURIs;\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\r\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory _tokenURI = _tokenURIs[tokenId];\r\n        string memory base = _baseURI();\r\n\r\n        // If there is no base URI, return the token URI.\r\n        if (bytes(base).length == 0) {\r\n            return _tokenURI;\r\n        }\r\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\r\n        if (bytes(_tokenURI).length > 0) {\r\n            return string.concat(base, _tokenURI);\r\n        }\r\n\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\r\n     *\r\n     * Emits {MetadataUpdate}.\r\n     */\r\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\r\n        _tokenURIs[tokenId] = _tokenURI;\r\n        emit MetadataUpdate(tokenId);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"./IERC721.sol\";\r\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\r\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\r\nimport {Context} from \"../../utils/Context.sol\";\r\nimport {Strings} from \"../../utils/Strings.sol\";\r\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\r\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    mapping(uint256 tokenId => address) private _owners;\r\n\r\n    mapping(address owner => uint256) private _balances;\r\n\r\n    mapping(uint256 tokenId => address) private _tokenApprovals;\r\n\r\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual returns (uint256) {\r\n        if (owner == address(0)) {\r\n            revert ERC721InvalidOwner(address(0));\r\n        }\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\r\n        return _requireOwned(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual {\r\n        _approve(to, tokenId, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\r\n        _requireOwned(tokenId);\r\n\r\n        return _getApproved(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\r\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\r\n        address previousOwner = _update(to, tokenId, _msgSender());\r\n        if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\r\n        transferFrom(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     *\r\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\r\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\r\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\r\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\r\n        return _owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\r\n     */\r\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\r\n     * particular (ignoring whether it is owned by `owner`).\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            spender != address(0) &&\r\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\r\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\r\n     * the `spender` for the specific `tokenId`.\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\r\n        if (!_isAuthorized(owner, spender, tokenId)) {\r\n            if (owner == address(0)) {\r\n                revert ERC721NonexistentToken(tokenId);\r\n            } else {\r\n                revert ERC721InsufficientApproval(spender, tokenId);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\r\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\r\n     *\r\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\r\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\r\n     * remain consistent with one another.\r\n     */\r\n    function _increaseBalance(address account, uint128 value) internal virtual {\r\n        unchecked {\r\n            _balances[account] += value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\r\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\r\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\r\n        address from = _ownerOf(tokenId);\r\n\r\n        // Perform (optional) operator check\r\n        if (auth != address(0)) {\r\n            _checkAuthorized(from, auth, tokenId);\r\n        }\r\n\r\n        // Execute the update\r\n        if (from != address(0)) {\r\n            // Clear approval. No need to re-authorize or emit the Approval event\r\n            _approve(address(0), tokenId, address(0), false);\r\n\r\n            unchecked {\r\n                _balances[from] -= 1;\r\n            }\r\n        }\r\n\r\n        if (to != address(0)) {\r\n            unchecked {\r\n                _balances[to] += 1;\r\n            }\r\n        }\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        return from;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner != address(0)) {\r\n            revert ERC721InvalidSender(address(0));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _mint(to, tokenId);\r\n        _checkOnERC721Received(address(0), to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal {\r\n        address previousOwner = _update(address(0), tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        } else if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\r\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\r\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\r\n        _safeTransfer(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\r\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth) internal {\r\n        _approve(to, tokenId, auth, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\r\n     * emitted in the context of transfers.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\r\n        // Avoid reading the owner unless necessary\r\n        if (emitEvent || auth != address(0)) {\r\n            address owner = _requireOwned(tokenId);\r\n\r\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\r\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\r\n                revert ERC721InvalidApprover(auth);\r\n            }\r\n\r\n            if (emitEvent) {\r\n                emit Approval(owner, to, tokenId);\r\n            }\r\n        }\r\n\r\n        _tokenApprovals[tokenId] = to;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Requirements:\r\n     * - operator can't be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\r\n        if (operator == address(0)) {\r\n            revert ERC721InvalidOperator(operator);\r\n        }\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\r\n     * Returns the owner.\r\n     *\r\n     * Overrides to ownership logic should be done to {_ownerOf}.\r\n     */\r\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        if (owner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\r\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     */\r\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\r\n        if (to.code.length > 0) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                if (retval != IERC721Receiver.onERC721Received.selector) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                }\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\r\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\nimport {IERC721} from \"./IERC721.sol\";\r\n\r\n/// @title EIP-721 Metadata Update Extension\r\ninterface IERC4906 is IERC165, IERC721 {\r\n    /// @dev This event emits when the metadata of a token is changed.\r\n    /// So that the third-party platforms such as NFT market could\r\n    /// timely update the images and related attributes of the NFT.\r\n    event MetadataUpdate(uint256 _tokenId);\r\n\r\n    /// @dev This event emits when the metadata of a range of tokens is changed.\r\n    /// So that the third-party platforms such as NFT market could\r\n    /// timely update the images and related attributes of the NFTs.\r\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Math} from \"./math/Math.sol\";\r\nimport {SignedMath} from \"./math/SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\r\n    uint8 private constant ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toStringSigned(int256 value) internal pure returns (string memory) {\r\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        uint256 localValue = value;\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\r\n            localValue >>= 4;\r\n        }\r\n        if (localValue != 0) {\r\n            revert StringsInsufficientHexLength(value, length);\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\r\n     * representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"../IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\r\n     * reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Muldiv operation overflow.\r\n     */\r\n    error MathOverflowedMulDiv();\r\n\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            return a / b;\r\n        }\r\n\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            if (denominator <= prod1) {\r\n                revert MathOverflowedMulDiv();\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x4764a3cb550846ec714888e19407f05c8d3cf56181d4a090f451beb8064b1a41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0dfe15ab99b1ec4aec1d0c90dc077b27aab5a1a0d305c6c641698100fc27c64\",\"dweb:/ipfs/QmWWsr2frKgKhNMJwdRXBe7vgRHCzSNTLyGMxbbc6Fuz81\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x7b29b3947e0a86bf596aa408b1395110a9a7fa31213dc928cf5ec927edff2585\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d59b31e9c356988b8eb7bf63a4ea264f583dd0a62b86a163632c40bbe3aa7050\",\"dweb:/ipfs/QmZBiYy7icKr5Lucb8yxujYfg3AMHW2zLD7n4JFYNVSinV\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xdac767d30fc5b3ab8cb3238a18a86a6738f02ec8fad07b1cd74493c7212d3141\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5142e04f3b754c3c24795000e10d90dbd5565499f1b019de9e9f6a847a219a0\",\"dweb:/ipfs/QmS7VJ4LxS4F4okSxSu93ELv6irVCGfQDPDH3ENUz2rGYF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x4764a3cb550846ec714888e19407f05c8d3cf56181d4a090f451beb8064b1a41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0dfe15ab99b1ec4aec1d0c90dc077b27aab5a1a0d305c6c641698100fc27c64\",\"dweb:/ipfs/QmWWsr2frKgKhNMJwdRXBe7vgRHCzSNTLyGMxbbc6Fuz81\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x7b29b3947e0a86bf596aa408b1395110a9a7fa31213dc928cf5ec927edff2585\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d59b31e9c356988b8eb7bf63a4ea264f583dd0a62b86a163632c40bbe3aa7050\",\"dweb:/ipfs/QmZBiYy7icKr5Lucb8yxujYfg3AMHW2zLD7n4JFYNVSinV\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xdac767d30fc5b3ab8cb3238a18a86a6738f02ec8fad07b1cd74493c7212d3141\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5142e04f3b754c3c24795000e10d90dbd5565499f1b019de9e9f6a847a219a0\",\"dweb:/ipfs/QmS7VJ4LxS4F4okSxSu93ELv6irVCGfQDPDH3ENUz2rGYF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xea2ce2276d96ef81067a452a0c27f31bee2d3c47de47041fda9931c10e825523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29793c6d491ee3bf35f86ed717126830efc0309ac9d10f6c3059f4da0355fce7\",\"dweb:/ipfs/QmUZV6nnQEXoiBDCgYSyPhSqLjAFJsrzghX5aqKWCrmxtH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1340,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e6bc004bbf136087562c7d50bf3be6c780373bc29497c0c13ff025ce7d73f12364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e6bc004bbf136087562c7d50bf3be6c780373bc29497c0c13ff025ce7d73f12364736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xBC STOP 0x4B 0xBF SGT PUSH1 0x87 JUMP 0x2C PUSH30 0x50BF3BE6C780373BC29497C0C13FF025CE7D73F12364736F6C6343000816 STOP CALLER ",
							"sourceMap": "262:2929:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e6bc004bbf136087562c7d50bf3be6c780373bc29497c0c13ff025ce7d73f12364736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xBC STOP 0x4B 0xBF SGT PUSH1 0x87 JUMP 0x2C PUSH30 0x50BF3BE6C780373BC29497C0C13FF025CE7D73F12364736F6C6343000816 STOP CALLER ",
							"sourceMap": "262:2929:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6bc004bbf136087562c7d50bf3be6c780373bc29497c0c13ff025ce7d73f12364736f6c63430008160033",
									".code": [
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace_Simple.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203fcaf83cbe0c83c16a6b79352d6f6b68fab0e1b39c3c621f52a3edb095f4c0be64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203fcaf83cbe0c83c16a6b79352d6f6b68fab0e1b39c3c621f52a3edb095f4c0be64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xCA 0xF8 EXTCODECOPY 0xBE 0xC DUP4 0xC1 PUSH11 0x6B79352D6F6B68FAB0E1B3 SWAP13 EXTCODECOPY PUSH3 0x1F52A3 0xED 0xB0 SWAP6 DELEGATECALL 0xC0 0xBE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "211:15320:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203fcaf83cbe0c83c16a6b79352d6f6b68fab0e1b39c3c621f52a3edb095f4c0be64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xCA 0xF8 EXTCODECOPY 0xBE 0xC DUP4 0xC1 PUSH11 0x6B79352D6F6B68FAB0E1B3 SWAP13 EXTCODECOPY PUSH3 0x1F52A3 0xED 0xB0 SWAP6 DELEGATECALL 0xC0 0xBE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "211:15320:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203fcaf83cbe0c83c16a6b79352d6f6b68fab0e1b39c3c621f52a3edb095f4c0be64736f6c63430008160033",
									".code": [
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace_Simple.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0237004ce14901bc17f10e85e1e76fe8ffb88d103087c00d6411ca9b5b0f28864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b0237004ce14901bc17f10e85e1e76fe8ffb88d103087c00d6411ca9b5b0f28864736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x23 PUSH17 0x4CE14901BC17F10E85E1E76FE8FFB88D1 SUB ADDMOD PUSH29 0xD6411CA9B5B0F28864736F6C63430008160033000000000000000000 ",
							"sourceMap": "224:1081:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b0237004ce14901bc17f10e85e1e76fe8ffb88d103087c00d6411ca9b5b0f28864736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x23 PUSH17 0x4CE14901BC17F10E85E1E76FE8FFB88D1 SUB ADDMOD PUSH29 0xD6411CA9B5B0F28864736F6C63430008160033000000000000000000 ",
							"sourceMap": "224:1081:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0237004ce14901bc17f10e85e1e76fe8ffb88d103087c00d6411ca9b5b0f28864736f6c63430008160033",
									".code": [
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace_Simple.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Marketplace_Simple.sol": {
				"BoredPetsNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_marketplaceContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "NFTMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_tokenURI",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Marketplace_Simple.sol\":202:761  contract BoredPetsNFT is ERC721URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Marketplace_Simple.sol\":342:479  constructor(address _marketplaceContract) ERC721(\"Bored Pets Yacht Club\", \"BPYC\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1419:1535  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x15\n  dup2\n  mstore\n  0x20\n  add\n  0x426f726564205065747320596163687420436c75620000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4250594300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1494:1499  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1486:1491  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1486:1499  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1520:1527  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1510:1517  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1510:1527  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1419:1535  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Marketplace_Simple.sol\":453:473  _marketplaceContract */\n  dup1\n    /* \"contracts/Marketplace_Simple.sol\":431:450  marketplaceContract */\n  0x08\n  0x00\n    /* \"contracts/Marketplace_Simple.sol\":431:473  marketplaceContract = _marketplaceContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Marketplace_Simple.sol\":342:479  constructor(address _marketplaceContract) ERC721(\"Bored Pets Yacht Club\", \"BPYC\") {... */\n  pop\n    /* \"contracts/Marketplace_Simple.sol\":202:761  contract BoredPetsNFT is ERC721URIStorage {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_45\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_17:\n    /* \"#utility.yul\":641:665   */\n  tag_47\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_48:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_18:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_50\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_53\n  tag_13\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":932:1051   */\ntag_52:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_54\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_19:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_20:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_21:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_22:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_59:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_61\n  tag_21\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1909:1993   */\ntag_60:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_23:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_24:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_25:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_26:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_66\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_25\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2624:2663   */\n  tag_67\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_25\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_27:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_28:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_29:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_71\n    /* \"#utility.yul\":3013:3047   */\n  tag_72\n    /* \"#utility.yul\":3022:3046   */\n  tag_73\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3013:3047   */\n  tag_28\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2995:3048   */\n  tag_27\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_30:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_31:\n    /* \"#utility.yul\":3251:3290   */\n  tag_76\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_29\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3312:3403   */\n  tag_77\n    /* \"#utility.yul\":3361:3402   */\n  tag_78\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_30\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_26\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_32:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_33:\n    /* \"#utility.yul\":3572:3604   */\n  tag_81\n  tag_32\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3613:3678   */\n  tag_82\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_31\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_34:\n    /* \"#utility.yul\":3750:3870   */\ntag_84:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_87\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_33\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_84)\ntag_86:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_35:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_90\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_23\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4101:4130   */\n  tag_91\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_24\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_92:\n    /* \"#utility.yul\":4328:4408   */\n  tag_93\n    /* \"#utility.yul\":4384:4406   */\n  tag_94\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_24\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_34\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_89:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_36:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_37:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_97\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_36\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_38:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_99\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_37\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_8:\n    /* \"#utility.yul\":5145:5182   */\n  tag_101\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_19\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_103\n  tag_20\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5233:5289   */\ntag_102:\n    /* \"#utility.yul\":5313:5351   */\n  tag_104\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_22\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5398:5465   */\n  tag_105\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_35\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_107\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_108:\n    /* \"#utility.yul\":6339:6406   */\n  tag_109\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_38\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_106)\n    /* \"#utility.yul\":5560:6178   */\ntag_107:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_110\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_23\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_111:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_115\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_37\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_114:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_106:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Marketplace_Simple.sol\":202:761  contract BoredPetsNFT is ERC721URIStorage {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Marketplace_Simple.sol\":202:761  contract BoredPetsNFT is ERC721URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd85d3d27\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":963:1172  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1243:1852  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Marketplace_Simple.sol\":485:758  function mint(string memory _tokenURI) public {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":963:1172  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1065:1069  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":778:788  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":771:789  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1089:1124  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1089:1100  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1089:1124  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1089:1164  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_82\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1128:1164  super.supportsInterface(interfaceId) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1152:1163  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1128:1151  super.supportsInterface */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1128:1164  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1089:1164  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1082:1164  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":963:1172  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2483:2496  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2516:2521  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2509:2521  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3677:3684  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3697:3719  _requireOwned(tokenId) */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3718  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3697:3710  _requireOwned */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3697:3719  _requireOwned(tokenId) */\n      jump\t// in\n    tag_93:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3739:3760  _getApproved(tokenId) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3752:3759  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3739:3751  _getApproved */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3739:3760  _getApproved(tokenId) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3732:3760  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3501:3536  _approve(to, tokenId, _msgSender()) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3510:3512  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3514:3521  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3523:3535  _msgSender() */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3523:3533  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3523:3535  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3501:3509  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3501:3536  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4374:4390  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4374:4376  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4374:4390  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4370:4459  if (to == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4444:4445  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4414:4447  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4370:4459  if (to == address(0)) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4680:4701  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4704:4738  _update(to, tokenId, _msgSender()) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4712:4714  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4716:4723  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4725:4737  _msgSender() */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4725:4735  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4725:4737  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4704:4711  _update */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4704:4738  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4680:4738  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4770:4774  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4753:4774  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4753:4766  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4753:4774  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4749:4860  if (previousOwner != from) {... */\n      tag_108\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4819:4823  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4825:4832  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4834:4847  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4798:4848  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4749:4860  if (previousOwner != from) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4359:4867  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5042:5046  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5048:5050  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5052:5059  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5025:5041  safeTransferFrom */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2314:2321  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2341:2363  _requireOwned(tokenId) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2355:2362  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2341:2354  _requireOwned */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2341:2363  _requireOwned(tokenId) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2334:2363  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2039:2046  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2080:2081  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2063:2082  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2063:2068  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2063:2082  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2059:2148  if (owner == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2133:2134  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2106:2136  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2059:2148  if (owner == address(0)) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2165:2174  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2165:2181  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2175:2180  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2165:2181  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2158:2181  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2645:2658  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2678:2685  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2671:2685  return _symbol */\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_87\n      jump\t// in\n    tag_119:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_87\n      jump\t// in\n    tag_120:\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_122\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_121)\n    tag_122:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_123:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_123\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3926:3978  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3945:3957  _msgSender() */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3945:3955  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3945:3957  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3959:3967  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3969:3977  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3926:3944  _setApprovalForAll */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3926:3978  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5257:5288  transferFrom(from, to, tokenId) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5270:5274  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5276:5278  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5280:5287  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5257:5269  transferFrom */\n      tag_43\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5257:5288  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5299:5346  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5322:5326  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5328:5330  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5332:5339  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5341:5345  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5299:5321  _checkOnERC721Received */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5299:5346  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1243:1852  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1316:1329  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1342:1364  _requireOwned(tokenId) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1356:1363  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1342:1355  _requireOwned */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1342:1364  _requireOwned(tokenId) */\n      jump\t// in\n    tag_133:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1377:1400  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1403:1413  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1403:1422  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1414:1421  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1403:1422  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1377:1422  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_87\n      jump\t// in\n    tag_134:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_87\n      jump\t// in\n    tag_135:\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_137\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_136)\n    tag_137:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_138:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_138\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1433:1451  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1454:1464  _baseURI() */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1454:1462  _baseURI */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1454:1464  _baseURI() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1433:1464  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1562:1563  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1550  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1540:1558  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1540:1563  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1536:1608  if (bytes(base).length == 0) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1587:1596  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1580:1596  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_132)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1536:1608  if (bytes(base).length == 0) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1736  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1724  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1709:1732  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1709:1736  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1705:1802  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1774:1778  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1780:1789  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1760:1790  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_143\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1753:1790  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_132)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1705:1802  if (bytes(_tokenURI).length > 0) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1821:1844  super.tokenURI(tokenId) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1836:1843  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1821:1835  super.tokenURI */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1821:1844  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1814:1844  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1243:1852  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_132:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace_Simple.sol\":485:758  function mint(string memory _tokenURI) public {... */\n    tag_75:\n        /* \"contracts/Marketplace_Simple.sol\":538:547  _tokenIds */\n      0x07\n      0x00\n        /* \"contracts/Marketplace_Simple.sol\":538:549  _tokenIds++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Marketplace_Simple.sol\":556:574  uint256 newTokenId */\n      0x00\n        /* \"contracts/Marketplace_Simple.sol\":577:586  _tokenIds */\n      sload(0x07)\n        /* \"contracts/Marketplace_Simple.sol\":556:586  uint256 newTokenId = _tokenIds */\n      swap1\n      pop\n        /* \"contracts/Marketplace_Simple.sol\":593:626  _safeMint(msg.sender, newTokenId) */\n      tag_150\n        /* \"contracts/Marketplace_Simple.sol\":603:613  msg.sender */\n      caller\n        /* \"contracts/Marketplace_Simple.sol\":615:625  newTokenId */\n      dup3\n        /* \"contracts/Marketplace_Simple.sol\":593:602  _safeMint */\n      tag_151\n        /* \"contracts/Marketplace_Simple.sol\":593:626  _safeMint(msg.sender, newTokenId) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/Marketplace_Simple.sol\":633:668  _setTokenURI(newTokenId, _tokenURI) */\n      tag_152\n        /* \"contracts/Marketplace_Simple.sol\":646:656  newTokenId */\n      dup2\n        /* \"contracts/Marketplace_Simple.sol\":658:667  _tokenURI */\n      dup4\n        /* \"contracts/Marketplace_Simple.sol\":633:645  _setTokenURI */\n      tag_153\n        /* \"contracts/Marketplace_Simple.sol\":633:668  _setTokenURI(newTokenId, _tokenURI) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/Marketplace_Simple.sol\":675:719  setApprovalForAll(marketplaceContract, true) */\n      tag_154\n        /* \"contracts/Marketplace_Simple.sol\":693:712  marketplaceContract */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace_Simple.sol\":714:718  true */\n      0x01\n        /* \"contracts/Marketplace_Simple.sol\":675:692  setApprovalForAll */\n      tag_63\n        /* \"contracts/Marketplace_Simple.sol\":675:719  setApprovalForAll(marketplaceContract, true) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/Marketplace_Simple.sol\":731:752  NFTMinted(newTokenId) */\n      0xd9dc24857f317ed9abbbb42e920ede0104231eb1d3d70236a74887ffaf159868\n        /* \"contracts/Marketplace_Simple.sol\":741:751  newTokenId */\n      dup2\n        /* \"contracts/Marketplace_Simple.sol\":731:752  NFTMinted(newTokenId) */\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Marketplace_Simple.sol\":531:758  {... */\n      pop\n        /* \"contracts/Marketplace_Simple.sol\":485:758  function mint(string memory _tokenURI) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4145:4149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4187  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4194  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4188:4193  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4194  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4204  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4195:4203  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4204  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4162:4204  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1709:1713  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1761:1786  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1786  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1757  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1786  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1851  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_158\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1851  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1803:1851  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1803:1814  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1803:1851  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1851  interfaceId == type(IERC721).interfaceId ||... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1904  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_159\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1868:1904  super.supportsInterface(interfaceId) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1892:1903  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1868:1891  super.supportsInterface */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1868:1904  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1746:1904  interfaceId == type(IERC721).interfaceId ||... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1726:1904  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16585:16832  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16648:16655  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16668:16681  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16684:16701  _ownerOf(tokenId) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16693:16700  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16684:16692  _ownerOf */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16684:16701  _ownerOf(tokenId) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16668:16701  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16733:16734  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16716:16735  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16716:16721  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16716:16735  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16712:16802  if (owner == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16782:16789  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16759:16790  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16712:16802  if (owner == address(0)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16819:16824  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16812:16824  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16585:16832  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6116:6245  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6186:6193  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6213:6228  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6229:6236  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6206:6237  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6116:6245  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":725:732  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":745:762  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14817:14939  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14898:14931  _approve(to, tokenId, auth, true) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14907:14909  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14911:14918  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14920:14924  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14926:14930  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14898:14906  _approve */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14898:14931  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14817:14939  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9078:9902  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9164:9171  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9184:9196  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9199:9216  _ownerOf(tokenId) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9208:9215  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9199:9207  _ownerOf */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9199:9216  _ownerOf(tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9184:9216  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9295:9296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9279:9297  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9279:9283  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9279:9297  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9275:9363  if (auth != address(0)) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9314:9351  _checkAuthorized(from, auth, tokenId) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9331:9335  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9337:9341  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9343:9350  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9314:9330  _checkAuthorized */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9314:9351  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9275:9363  if (auth != address(0)) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9426:9427  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9410:9428  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9410:9414  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9410:9428  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9406:9669  if (from != address(0)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9528:9576  _approve(address(0), tokenId, address(0), false) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9545:9546  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9549:9556  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9566:9567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9570:9575  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9528:9536  _approve */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9528:9576  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9641:9642  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9631  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9637  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9632:9636  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9637  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9642  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9406:9669  if (from != address(0)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9699:9700  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9685:9701  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9685:9687  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9685:9701  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9681:9792  if (to != address(0)) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9764:9765  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9756  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9760  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9757:9759  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9760  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9765  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9681:9792  if (to != address(0)) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9823:9825  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9804:9811  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9804:9820  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9812:9819  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9804:9820  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9804:9825  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9862:9869  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9858:9860  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9843:9870  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9852:9856  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9843:9870  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9890:9894  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9883:9894  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9078:9902  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16024:16342  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16152:16153  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16132:16154  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16132:16140  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16132:16154  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16128:16221  if (operator == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16200:16208  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16178:16209  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16128:16221  if (operator == address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16269:16277  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16249  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16256  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16250:16255  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16256  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16266  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16257:16265  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16266  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16231:16277  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16315:16323  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16308:16313  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16325:16333  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16024:16342  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17382:18181  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17516:17517  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17499:17501  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17499:17513  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17499:17517  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17495:18174  if (to.code.length > 0) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17554:17556  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17538:17574  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17575:17587  _msgSender() */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17575:17585  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17575:17587  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17589:17593  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17595:17602  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17604:17608  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17538:17609  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      0x01\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17534:18163  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_192\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_197\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_196)\n    tag_197:\n      0x60\n      swap2\n      pop\n    tag_196:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17869:17870  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17852:17858  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17852:17865  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17852:17870  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17848:18148  if (reason.length == 0) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17924:17926  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17902:17927  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17848:18148  if (reason.length == 0) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18098:18104  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18092:18105  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18083:18089  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18079:18081  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18075:18090  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":18068:18106  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17534:18163  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17667:17708  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17657:17708  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17657:17663  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17657:17708  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17653:17785  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17762:17764  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17740:17765  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17653:17785  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17610:17800  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17495:18174  if (to.code.length > 0) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17382:18181  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3273:3367  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3324:3337  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3350:3359  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3273:3367  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2828:2841  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2854:2876  _requireOwned(tokenId) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2868:2875  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2854:2867  _requireOwned */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2854:2876  _requireOwned(tokenId) */\n      jump\t// in\n    tag_206:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2889:2910  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2913:2923  _baseURI() */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2913:2921  _baseURI */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2913:2923  _baseURI() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2889:2923  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2965:2966  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2947:2954  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2941:2962  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2941:2966  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2941:3016  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_208\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_209)\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2983:2990  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2992:3010  tokenId.toString() */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2992:2999  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2992:3008  tokenId.toString */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2992:3010  tokenId.toString() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2969:3011  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_212\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2941:3016  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2934:3016  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10936:11038  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11004:11030  _safeMint(to, tokenId, \"\") */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11014:11016  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11018:11025  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11004:11030  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11004:11013  _safeMint */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11004:11030  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10936:11038  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1978:2148  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2092:2101  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2070:2080  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2070:2089  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2081:2088  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2070:2089  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2070:2101  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2117:2140  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2132:2139  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2117:2140  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_219\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1978:2148  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":785:933  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:865  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":900:925  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":885:925  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":885:896  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":885:925  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":878:925  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":785:933  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5878:5995  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5944:5951  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5971:5978  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5979:5986  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5964:5987  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5878:5995  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15127:15805  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15289:15298  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15289:15320  emitEvent || auth != address(0) */\n      dup1\n      tag_223\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15318:15319  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15302:15320  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15302:15306  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15302:15320  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15289:15320  emitEvent || auth != address(0) */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15285:15756  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15337:15350  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15353:15375  _requireOwned(tokenId) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15367:15374  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15353:15366  _requireOwned */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15353:15375  _requireOwned(tokenId) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15337:15375  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15522:15523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15524  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15510  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15524  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15541  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15537:15541  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15528:15541  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15528:15533  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15528:15541  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15541  auth != address(0) && owner != auth */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15575  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15546:15575  isApprovedForAll(owner, auth) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15563:15568  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15570:15574  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15546:15562  isApprovedForAll */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15546:15575  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15545:15575  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15506:15575  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15502:15646  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15625:15629  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15603:15630  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15502:15646  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15666:15675  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15662:15745  if (emitEvent) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15721:15728  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15717:15719  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15701:15729  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15710:15715  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15701:15729  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15662:15745  if (emitEvent) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15322:15756  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15285:15756  if (emitEvent || auth != address(0)) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15795:15797  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15783  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15792  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15784:15791  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15792  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15797  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15127:15805  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7285:7661  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7436  _isAuthorized(owner, spender, tokenId) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7412:7417  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7419:7426  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7428:7435  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7411  _isAuthorized */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7436  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7393:7654  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7474:7475  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7457:7476  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7457:7462  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7457:7476  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7453:7643  if (owner == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7527:7534  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7504:7535  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7453:7643  if (owner == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7610:7617  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7619:7626  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7583:7627  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7393:7654  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7285:7661  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":660:1378  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":716:729  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":767:781  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":804:805  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":784:801  Math.log10(value) */\n      tag_242\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:800  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":784:794  Math.log10 */\n      tag_243\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":784:801  Math.log10(value) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":784:805  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":767:805  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:840  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":854:860  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":843:861  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_244\n      jumpi\n      tag_245\n      tag_246\n      jump\t// in\n    tag_245:\n    tag_244:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_247\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_247:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:861  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":876:887  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1005:1011  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1001:1003  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":997:1012  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":989:995  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":985:1013  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":978:1013  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1049:1053  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1074:1079  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1216:1226  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1211:1213  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1204:1209  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1200:1214  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1195:1227  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1190:1193  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1182:1228  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1274:1276  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1265:1276  value /= 10 */\n      dup6\n      dup2\n      tag_250\n      jumpi\n      tag_251\n      tag_252\n      jump\t// in\n    tag_251:\n    tag_250:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1308:1309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1299:1304  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1299:1309  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n      tag_248\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1295:1316  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1353:1359  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1346:1359  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":660:1378  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11265:11450  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11360:11378  _mint(to, tokenId) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11366:11368  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11370:11377  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11360:11365  _mint */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11360:11378  _mint(to, tokenId) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11389:11442  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11420:11421  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11424:11426  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11428:11435  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11441  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11389:11411  _checkOnERC721Received */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11389:11442  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11265:11450  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6565:6841  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6724:6725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6726  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6712  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6726  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6833  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_259\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6753:6760  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6760  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6749  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6760  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6796  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_260\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6764:6796  isApprovedForAll(owner, spender) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6781:6786  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6788:6795  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6764:6780  isApprovedForAll */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6764:6796  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6796  owner == spender || isApprovedForAll(owner, spender) */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6832  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_262\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6825:6832  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6800:6832  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6800:6821  _getApproved(tokenId) */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6813:6820  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6800:6812  _getApproved */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6800:6821  _getApproved(tokenId) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6800:6832  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6744:6832  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6705:6833  spender != address(0) &&... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6685:6833  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6565:6841  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12534:13482  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12587:12594  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12607:12621  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12624:12625  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12607:12625  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12674:12682  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12665:12670  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12665:12682  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12661:12767  if (value >= 10 ** 64) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12712:12720  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12703:12720  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_266\n      jumpi\n      tag_267\n      tag_252\n      jump\t// in\n    tag_267:\n    tag_266:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12749:12751  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12739:12751  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12661:12767  if (value >= 10 ** 64) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12794:12802  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12785:12790  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12785:12802  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12781:12887  if (value >= 10 ** 32) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12832:12840  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12823:12840  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_269\n      jumpi\n      tag_270\n      tag_252\n      jump\t// in\n    tag_270:\n    tag_269:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12869:12871  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12859:12871  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12781:12887  if (value >= 10 ** 32) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12914:12922  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12905:12910  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12905:12922  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12901:13007  if (value >= 10 ** 16) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12960  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12943:12960  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_272\n      jumpi\n      tag_273\n      tag_252\n      jump\t// in\n    tag_273:\n    tag_272:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12989:12991  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12979:12991  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12901:13007  if (value >= 10 ** 16) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13034:13041  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13030  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13041  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13021:13124  if (value >= 10 ** 8) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13071:13078  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13062:13078  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_275\n      jumpi\n      tag_276\n      tag_252\n      jump\t// in\n    tag_276:\n    tag_275:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13107:13108  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13097:13108  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13021:13124  if (value >= 10 ** 8) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13151:13158  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13142:13147  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13142:13158  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13138:13241  if (value >= 10 ** 4) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13188:13195  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13179:13195  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_278\n      jumpi\n      tag_279\n      tag_252\n      jump\t// in\n    tag_279:\n    tag_278:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13224:13225  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13214:13225  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13138:13241  if (value >= 10 ** 4) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13268:13275  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13259:13264  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13259:13275  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13255:13358  if (value >= 10 ** 2) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13305:13312  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13296:13312  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_281\n      jumpi\n      tag_282\n      tag_252\n      jump\t// in\n    tag_282:\n    tag_281:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13341:13342  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13331:13342  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13255:13358  if (value >= 10 ** 2) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13385:13392  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13376:13381  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13376:13392  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13372:13440  if (value >= 10 ** 1) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13423:13424  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13413:13424  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13372:13440  if (value >= 10 ** 1) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13468:13474  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13461:13474  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12534:13482  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10238:10573  function _mint(address to, uint256 tokenId) internal {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10320:10321  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10306:10322  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10306:10308  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10306:10322  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10302:10391  if (to == address(0)) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10376:10377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10346:10379  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10302:10391  if (to == address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10401:10422  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10425:10457  _update(to, tokenId, address(0)) */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10433:10435  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10437:10444  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10454:10455  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10425:10432  _update */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10425:10457  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10401:10457  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10497:10498  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10472:10499  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10472:10485  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10472:10499  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10468:10566  if (previousOwner != address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10551:10552  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10523:10554  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10468:10566  if (previousOwner != address(0)) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10291:10573  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10238:10573  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_290:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_291:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_292:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_293:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_294:\n        /* \"#utility.yul\":561:584   */\n      tag_354\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_293\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_355:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_295:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_357\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_294\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_360\n      tag_291\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":833:952   */\n    tag_359:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_361\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_295\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_296:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_297:\n        /* \"#utility.yul\":1268:1289   */\n      tag_364\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_296\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_366\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_297\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_298:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_299:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_300:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_370:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_370)\n    tag_372:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_301:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_302:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_375\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_298\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2329:2400   */\n      tag_376\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_299\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_377\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_300\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2499:2528   */\n      tag_378\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_301\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_29:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_380\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_302\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_303:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_304:\n        /* \"#utility.yul\":3016:3040   */\n      tag_383\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_303\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_384:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_305:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_386\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_304\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_32:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_389\n      tag_291\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3292:3411   */\n    tag_388:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_390\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_305\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_306:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_307:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_393\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_306\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_308:\n        /* \"#utility.yul\":3872:3896   */\n      tag_395\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_307\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_35:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_397\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_308\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_309:\n        /* \"#utility.yul\":4210:4234   */\n      tag_399\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_307\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_400:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_310:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_402\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_309\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_38:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_405\n      tag_291\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4503:4622   */\n    tag_404:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_406\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_310\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_407\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_305\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_42:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_410\n      tag_291\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5000:5119   */\n    tag_409:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_411\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_310\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_412\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_310\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_413\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_305\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_53:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_416\n      tag_291\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5591:5710   */\n    tag_415:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_417\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_310\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_311:\n        /* \"#utility.yul\":5937:5961   */\n      tag_419\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_303\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_56:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_421\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_311\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_312:\n        /* \"#utility.yul\":6272:6293   */\n      tag_423\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_296\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_424:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_313:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_426\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_312\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_62:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_429\n      tag_291\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6553:6672   */\n    tag_428:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_430\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_310\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_431\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_313\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_314:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_315:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_246:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_316:\n        /* \"#utility.yul\":7452:7479   */\n      tag_436\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_301\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_438\n      tag_246\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7525:7613   */\n    tag_437:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_317:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_440\n      tag_290\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_441\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_316\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_318:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_444\n      tag_246\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7928:7984   */\n    tag_443:\n        /* \"#utility.yul\":8002:8031   */\n      tag_445\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_301\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_319:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_320:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_448\n        /* \"#utility.yul\":8374:8422   */\n      tag_449\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_318\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8358:8423   */\n      tag_317\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_451\n      tag_315\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8498:8610   */\n    tag_450:\n        /* \"#utility.yul\":8619:8673   */\n      tag_452\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_319\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_321:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_455\n      tag_314\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":8769:8891   */\n    tag_454:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_456\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_320\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_66:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_459\n      tag_291\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9178:9298   */\n    tag_458:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_460\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_310\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_461\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_310\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_462\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_305\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_464\n      tag_292\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9765:9882   */\n    tag_463:\n        /* \"#utility.yul\":9906:9968   */\n      tag_465\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_321\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10299   */\n    tag_322:\n        /* \"#utility.yul\":10053:10057   */\n      0x00\n        /* \"#utility.yul\":10143:10161   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10135:10141   */\n      dup3\n        /* \"#utility.yul\":10132:10162   */\n      gt\n        /* \"#utility.yul\":10129:10185   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":10165:10183   */\n      tag_468\n      tag_246\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10129:10185   */\n    tag_467:\n        /* \"#utility.yul\":10203:10232   */\n      tag_469\n        /* \"#utility.yul\":10225:10231   */\n      dup3\n        /* \"#utility.yul\":10203:10232   */\n      tag_301\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10195:10232   */\n      swap1\n      pop\n        /* \"#utility.yul\":10287:10291   */\n      0x20\n        /* \"#utility.yul\":10281:10285   */\n      dup2\n        /* \"#utility.yul\":10277:10292   */\n      add\n        /* \"#utility.yul\":10269:10292   */\n      swap1\n      pop\n        /* \"#utility.yul\":9991:10299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10305:10730   */\n    tag_323:\n        /* \"#utility.yul\":10383:10388   */\n      0x00\n        /* \"#utility.yul\":10408:10474   */\n      tag_471\n        /* \"#utility.yul\":10424:10473   */\n      tag_472\n        /* \"#utility.yul\":10466:10472   */\n      dup5\n        /* \"#utility.yul\":10424:10473   */\n      tag_322\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10408:10474   */\n      tag_317\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10399:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10497:10503   */\n      dup3\n        /* \"#utility.yul\":10490:10495   */\n      dup2\n        /* \"#utility.yul\":10483:10504   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x20\n        /* \"#utility.yul\":10528:10533   */\n      dup2\n        /* \"#utility.yul\":10524:10540   */\n      add\n        /* \"#utility.yul\":10573:10576   */\n      dup5\n        /* \"#utility.yul\":10564:10570   */\n      dup5\n        /* \"#utility.yul\":10559:10562   */\n      dup5\n        /* \"#utility.yul\":10555:10571   */\n      add\n        /* \"#utility.yul\":10552:10577   */\n      gt\n        /* \"#utility.yul\":10549:10661   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":10580:10659   */\n      tag_474\n      tag_315\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10549:10661   */\n    tag_473:\n        /* \"#utility.yul\":10670:10724   */\n      tag_475\n        /* \"#utility.yul\":10717:10723   */\n      dup5\n        /* \"#utility.yul\":10712:10715   */\n      dup3\n        /* \"#utility.yul\":10707:10710   */\n      dup6\n        /* \"#utility.yul\":10670:10724   */\n      tag_319\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10389:10730   */\n      pop\n        /* \"#utility.yul\":10305:10730   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10750:11090   */\n    tag_324:\n        /* \"#utility.yul\":10806:10811   */\n      0x00\n        /* \"#utility.yul\":10855:10858   */\n      dup3\n        /* \"#utility.yul\":10848:10852   */\n      0x1f\n        /* \"#utility.yul\":10840:10846   */\n      dup4\n        /* \"#utility.yul\":10836:10853   */\n      add\n        /* \"#utility.yul\":10832:10859   */\n      slt\n        /* \"#utility.yul\":10822:10944   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":10863:10942   */\n      tag_478\n      tag_314\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10822:10944   */\n    tag_477:\n        /* \"#utility.yul\":10980:10986   */\n      dup2\n        /* \"#utility.yul\":10967:10987   */\n      calldataload\n        /* \"#utility.yul\":11005:11084   */\n      tag_479\n        /* \"#utility.yul\":11080:11083   */\n      dup5\n        /* \"#utility.yul\":11072:11078   */\n      dup3\n        /* \"#utility.yul\":11065:11069   */\n      0x20\n        /* \"#utility.yul\":11057:11063   */\n      dup7\n        /* \"#utility.yul\":11053:11070   */\n      add\n        /* \"#utility.yul\":11005:11084   */\n      tag_323\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":10996:11084   */\n      swap2\n      pop\n        /* \"#utility.yul\":10812:11090   */\n      pop\n        /* \"#utility.yul\":10750:11090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11096:11605   */\n    tag_74:\n        /* \"#utility.yul\":11165:11171   */\n      0x00\n        /* \"#utility.yul\":11214:11216   */\n      0x20\n        /* \"#utility.yul\":11202:11211   */\n      dup3\n        /* \"#utility.yul\":11193:11200   */\n      dup5\n        /* \"#utility.yul\":11189:11212   */\n      sub\n        /* \"#utility.yul\":11185:11217   */\n      slt\n        /* \"#utility.yul\":11182:11301   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":11220:11299   */\n      tag_482\n      tag_291\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11182:11301   */\n    tag_481:\n        /* \"#utility.yul\":11368:11369   */\n      0x00\n        /* \"#utility.yul\":11357:11366   */\n      dup3\n        /* \"#utility.yul\":11353:11370   */\n      add\n        /* \"#utility.yul\":11340:11371   */\n      calldataload\n        /* \"#utility.yul\":11398:11416   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11390:11396   */\n      dup2\n        /* \"#utility.yul\":11387:11417   */\n      gt\n        /* \"#utility.yul\":11384:11501   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":11420:11499   */\n      tag_484\n      tag_292\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11384:11501   */\n    tag_483:\n        /* \"#utility.yul\":11525:11588   */\n      tag_485\n        /* \"#utility.yul\":11580:11587   */\n      dup5\n        /* \"#utility.yul\":11571:11577   */\n      dup3\n        /* \"#utility.yul\":11560:11569   */\n      dup6\n        /* \"#utility.yul\":11556:11578   */\n      add\n        /* \"#utility.yul\":11525:11588   */\n      tag_324\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":11515:11588   */\n      swap2\n      pop\n        /* \"#utility.yul\":11311:11598   */\n      pop\n        /* \"#utility.yul\":11096:11605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11611:12085   */\n    tag_78:\n        /* \"#utility.yul\":11679:11685   */\n      0x00\n        /* \"#utility.yul\":11687:11693   */\n      dup1\n        /* \"#utility.yul\":11736:11738   */\n      0x40\n        /* \"#utility.yul\":11724:11733   */\n      dup4\n        /* \"#utility.yul\":11715:11722   */\n      dup6\n        /* \"#utility.yul\":11711:11734   */\n      sub\n        /* \"#utility.yul\":11707:11739   */\n      slt\n        /* \"#utility.yul\":11704:11823   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":11742:11821   */\n      tag_488\n      tag_291\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":11704:11823   */\n    tag_487:\n        /* \"#utility.yul\":11862:11863   */\n      0x00\n        /* \"#utility.yul\":11887:11940   */\n      tag_489\n        /* \"#utility.yul\":11932:11939   */\n      dup6\n        /* \"#utility.yul\":11923:11929   */\n      dup3\n        /* \"#utility.yul\":11912:11921   */\n      dup7\n        /* \"#utility.yul\":11908:11930   */\n      add\n        /* \"#utility.yul\":11887:11940   */\n      tag_310\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":11877:11940   */\n      swap3\n      pop\n        /* \"#utility.yul\":11833:11950   */\n      pop\n        /* \"#utility.yul\":11989:11991   */\n      0x20\n        /* \"#utility.yul\":12015:12068   */\n      tag_490\n        /* \"#utility.yul\":12060:12067   */\n      dup6\n        /* \"#utility.yul\":12051:12057   */\n      dup3\n        /* \"#utility.yul\":12040:12049   */\n      dup7\n        /* \"#utility.yul\":12036:12058   */\n      add\n        /* \"#utility.yul\":12015:12068   */\n      tag_310\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12005:12068   */\n      swap2\n      pop\n        /* \"#utility.yul\":11960:12078   */\n      pop\n        /* \"#utility.yul\":11611:12085   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12091:12271   */\n    tag_325:\n        /* \"#utility.yul\":12139:12216   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12136:12137   */\n      0x00\n        /* \"#utility.yul\":12129:12217   */\n      mstore\n        /* \"#utility.yul\":12236:12240   */\n      0x22\n        /* \"#utility.yul\":12233:12234   */\n      0x04\n        /* \"#utility.yul\":12226:12241   */\n      mstore\n        /* \"#utility.yul\":12260:12264   */\n      0x24\n        /* \"#utility.yul\":12257:12258   */\n      0x00\n        /* \"#utility.yul\":12250:12265   */\n      revert\n        /* \"#utility.yul\":12277:12597   */\n    tag_87:\n        /* \"#utility.yul\":12321:12327   */\n      0x00\n        /* \"#utility.yul\":12358:12359   */\n      0x02\n        /* \"#utility.yul\":12352:12356   */\n      dup3\n        /* \"#utility.yul\":12348:12360   */\n      div\n        /* \"#utility.yul\":12338:12360   */\n      swap1\n      pop\n        /* \"#utility.yul\":12405:12406   */\n      0x01\n        /* \"#utility.yul\":12399:12403   */\n      dup3\n        /* \"#utility.yul\":12395:12407   */\n      and\n        /* \"#utility.yul\":12426:12444   */\n      dup1\n        /* \"#utility.yul\":12416:12497   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":12482:12486   */\n      0x7f\n        /* \"#utility.yul\":12474:12480   */\n      dup3\n        /* \"#utility.yul\":12470:12487   */\n      and\n        /* \"#utility.yul\":12460:12487   */\n      swap2\n      pop\n        /* \"#utility.yul\":12416:12497   */\n    tag_493:\n        /* \"#utility.yul\":12544:12546   */\n      0x20\n        /* \"#utility.yul\":12536:12542   */\n      dup3\n        /* \"#utility.yul\":12533:12547   */\n      lt\n        /* \"#utility.yul\":12513:12531   */\n      dup2\n        /* \"#utility.yul\":12510:12548   */\n      sub\n        /* \"#utility.yul\":12507:12591   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":12563:12581   */\n      tag_495\n      tag_325\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":12507:12591   */\n    tag_494:\n        /* \"#utility.yul\":12328:12597   */\n      pop\n        /* \"#utility.yul\":12277:12597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12603:13045   */\n    tag_110:\n        /* \"#utility.yul\":12752:12756   */\n      0x00\n        /* \"#utility.yul\":12790:12792   */\n      0x60\n        /* \"#utility.yul\":12779:12788   */\n      dup3\n        /* \"#utility.yul\":12775:12793   */\n      add\n        /* \"#utility.yul\":12767:12793   */\n      swap1\n      pop\n        /* \"#utility.yul\":12803:12874   */\n      tag_497\n        /* \"#utility.yul\":12871:12872   */\n      0x00\n        /* \"#utility.yul\":12860:12869   */\n      dup4\n        /* \"#utility.yul\":12856:12873   */\n      add\n        /* \"#utility.yul\":12847:12853   */\n      dup7\n        /* \"#utility.yul\":12803:12874   */\n      tag_308\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":12884:12956   */\n      tag_498\n        /* \"#utility.yul\":12952:12954   */\n      0x20\n        /* \"#utility.yul\":12941:12950   */\n      dup4\n        /* \"#utility.yul\":12937:12955   */\n      add\n        /* \"#utility.yul\":12928:12934   */\n      dup6\n        /* \"#utility.yul\":12884:12956   */\n      tag_311\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":12966:13038   */\n      tag_499\n        /* \"#utility.yul\":13034:13036   */\n      0x40\n        /* \"#utility.yul\":13023:13032   */\n      dup4\n        /* \"#utility.yul\":13019:13037   */\n      add\n        /* \"#utility.yul\":13010:13016   */\n      dup5\n        /* \"#utility.yul\":12966:13038   */\n      tag_308\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":12603:13045   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13051:13199   */\n    tag_326:\n        /* \"#utility.yul\":13153:13164   */\n      0x00\n        /* \"#utility.yul\":13190:13193   */\n      dup2\n        /* \"#utility.yul\":13175:13193   */\n      swap1\n      pop\n        /* \"#utility.yul\":13051:13199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13205:13595   */\n    tag_327:\n        /* \"#utility.yul\":13311:13314   */\n      0x00\n        /* \"#utility.yul\":13339:13378   */\n      tag_502\n        /* \"#utility.yul\":13372:13377   */\n      dup3\n        /* \"#utility.yul\":13339:13378   */\n      tag_298\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13394:13483   */\n      tag_503\n        /* \"#utility.yul\":13476:13482   */\n      dup2\n        /* \"#utility.yul\":13471:13474   */\n      dup6\n        /* \"#utility.yul\":13394:13483   */\n      tag_326\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":13387:13483   */\n      swap4\n      pop\n        /* \"#utility.yul\":13492:13557   */\n      tag_504\n        /* \"#utility.yul\":13550:13556   */\n      dup2\n        /* \"#utility.yul\":13545:13548   */\n      dup6\n        /* \"#utility.yul\":13538:13542   */\n      0x20\n        /* \"#utility.yul\":13531:13536   */\n      dup7\n        /* \"#utility.yul\":13527:13543   */\n      add\n        /* \"#utility.yul\":13492:13557   */\n      tag_300\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13582:13588   */\n      dup1\n        /* \"#utility.yul\":13577:13580   */\n      dup5\n        /* \"#utility.yul\":13573:13589   */\n      add\n        /* \"#utility.yul\":13566:13589   */\n      swap2\n      pop\n        /* \"#utility.yul\":13315:13595   */\n      pop\n        /* \"#utility.yul\":13205:13595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13601:14036   */\n    tag_144:\n        /* \"#utility.yul\":13781:13784   */\n      0x00\n        /* \"#utility.yul\":13803:13898   */\n      tag_506\n        /* \"#utility.yul\":13894:13897   */\n      dup3\n        /* \"#utility.yul\":13885:13891   */\n      dup6\n        /* \"#utility.yul\":13803:13898   */\n      tag_327\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13796:13898   */\n      swap2\n      pop\n        /* \"#utility.yul\":13915:14010   */\n      tag_507\n        /* \"#utility.yul\":14006:14009   */\n      dup3\n        /* \"#utility.yul\":13997:14003   */\n      dup5\n        /* \"#utility.yul\":13915:14010   */\n      tag_327\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":13908:14010   */\n      swap2\n      pop\n        /* \"#utility.yul\":14027:14030   */\n      dup2\n        /* \"#utility.yul\":14020:14030   */\n      swap1\n      pop\n        /* \"#utility.yul\":13601:14036   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14042:14222   */\n    tag_328:\n        /* \"#utility.yul\":14090:14167   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14087:14088   */\n      0x00\n        /* \"#utility.yul\":14080:14168   */\n      mstore\n        /* \"#utility.yul\":14187:14191   */\n      0x11\n        /* \"#utility.yul\":14184:14185   */\n      0x04\n        /* \"#utility.yul\":14177:14192   */\n      mstore\n        /* \"#utility.yul\":14211:14215   */\n      0x24\n        /* \"#utility.yul\":14208:14209   */\n      0x00\n        /* \"#utility.yul\":14201:14216   */\n      revert\n        /* \"#utility.yul\":14228:14461   */\n    tag_149:\n        /* \"#utility.yul\":14267:14270   */\n      0x00\n        /* \"#utility.yul\":14290:14314   */\n      tag_510\n        /* \"#utility.yul\":14308:14313   */\n      dup3\n        /* \"#utility.yul\":14290:14314   */\n      tag_303\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":14281:14314   */\n      swap2\n      pop\n        /* \"#utility.yul\":14336:14402   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14329:14334   */\n      dup3\n        /* \"#utility.yul\":14326:14403   */\n      sub\n        /* \"#utility.yul\":14323:14426   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":14406:14424   */\n      tag_512\n      tag_328\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14323:14426   */\n    tag_511:\n        /* \"#utility.yul\":14453:14454   */\n      0x01\n        /* \"#utility.yul\":14446:14451   */\n      dup3\n        /* \"#utility.yul\":14442:14455   */\n      add\n        /* \"#utility.yul\":14435:14455   */\n      swap1\n      pop\n        /* \"#utility.yul\":14228:14461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14467:14565   */\n    tag_329:\n        /* \"#utility.yul\":14518:14524   */\n      0x00\n        /* \"#utility.yul\":14552:14557   */\n      dup2\n        /* \"#utility.yul\":14546:14558   */\n      mload\n        /* \"#utility.yul\":14536:14558   */\n      swap1\n      pop\n        /* \"#utility.yul\":14467:14565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14571:14739   */\n    tag_330:\n        /* \"#utility.yul\":14654:14665   */\n      0x00\n        /* \"#utility.yul\":14688:14694   */\n      dup3\n        /* \"#utility.yul\":14683:14686   */\n      dup3\n        /* \"#utility.yul\":14676:14695   */\n      mstore\n        /* \"#utility.yul\":14728:14732   */\n      0x20\n        /* \"#utility.yul\":14723:14726   */\n      dup3\n        /* \"#utility.yul\":14719:14733   */\n      add\n        /* \"#utility.yul\":14704:14733   */\n      swap1\n      pop\n        /* \"#utility.yul\":14571:14739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14745:15118   */\n    tag_331:\n        /* \"#utility.yul\":14831:14834   */\n      0x00\n        /* \"#utility.yul\":14859:14897   */\n      tag_516\n        /* \"#utility.yul\":14891:14896   */\n      dup3\n        /* \"#utility.yul\":14859:14897   */\n      tag_329\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":14913:14983   */\n      tag_517\n        /* \"#utility.yul\":14976:14982   */\n      dup2\n        /* \"#utility.yul\":14971:14974   */\n      dup6\n        /* \"#utility.yul\":14913:14983   */\n      tag_330\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":14906:14983   */\n      swap4\n      pop\n        /* \"#utility.yul\":14992:15057   */\n      tag_518\n        /* \"#utility.yul\":15050:15056   */\n      dup2\n        /* \"#utility.yul\":15045:15048   */\n      dup6\n        /* \"#utility.yul\":15038:15042   */\n      0x20\n        /* \"#utility.yul\":15031:15036   */\n      dup7\n        /* \"#utility.yul\":15027:15043   */\n      add\n        /* \"#utility.yul\":14992:15057   */\n      tag_300\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":15082:15111   */\n      tag_519\n        /* \"#utility.yul\":15104:15110   */\n      dup2\n        /* \"#utility.yul\":15082:15111   */\n      tag_301\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":15077:15080   */\n      dup5\n        /* \"#utility.yul\":15073:15112   */\n      add\n        /* \"#utility.yul\":15066:15112   */\n      swap2\n      pop\n        /* \"#utility.yul\":14835:15118   */\n      pop\n        /* \"#utility.yul\":14745:15118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15124:15764   */\n    tag_188:\n        /* \"#utility.yul\":15319:15323   */\n      0x00\n        /* \"#utility.yul\":15357:15360   */\n      0x80\n        /* \"#utility.yul\":15346:15355   */\n      dup3\n        /* \"#utility.yul\":15342:15361   */\n      add\n        /* \"#utility.yul\":15334:15361   */\n      swap1\n      pop\n        /* \"#utility.yul\":15371:15442   */\n      tag_521\n        /* \"#utility.yul\":15439:15440   */\n      0x00\n        /* \"#utility.yul\":15428:15437   */\n      dup4\n        /* \"#utility.yul\":15424:15441   */\n      add\n        /* \"#utility.yul\":15415:15421   */\n      dup8\n        /* \"#utility.yul\":15371:15442   */\n      tag_308\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15452:15524   */\n      tag_522\n        /* \"#utility.yul\":15520:15522   */\n      0x20\n        /* \"#utility.yul\":15509:15518   */\n      dup4\n        /* \"#utility.yul\":15505:15523   */\n      add\n        /* \"#utility.yul\":15496:15502   */\n      dup7\n        /* \"#utility.yul\":15452:15524   */\n      tag_308\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":15534:15606   */\n      tag_523\n        /* \"#utility.yul\":15602:15604   */\n      0x40\n        /* \"#utility.yul\":15591:15600   */\n      dup4\n        /* \"#utility.yul\":15587:15605   */\n      add\n        /* \"#utility.yul\":15578:15584   */\n      dup6\n        /* \"#utility.yul\":15534:15606   */\n      tag_311\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15653:15662   */\n      dup2\n        /* \"#utility.yul\":15647:15651   */\n      dup2\n        /* \"#utility.yul\":15643:15663   */\n      sub\n        /* \"#utility.yul\":15638:15640   */\n      0x60\n        /* \"#utility.yul\":15627:15636   */\n      dup4\n        /* \"#utility.yul\":15623:15641   */\n      add\n        /* \"#utility.yul\":15616:15664   */\n      mstore\n        /* \"#utility.yul\":15681:15757   */\n      tag_524\n        /* \"#utility.yul\":15752:15756   */\n      dup2\n        /* \"#utility.yul\":15743:15749   */\n      dup5\n        /* \"#utility.yul\":15681:15757   */\n      tag_331\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":15673:15757   */\n      swap1\n      pop\n        /* \"#utility.yul\":15124:15764   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15770:15911   */\n    tag_332:\n        /* \"#utility.yul\":15826:15831   */\n      0x00\n        /* \"#utility.yul\":15857:15863   */\n      dup2\n        /* \"#utility.yul\":15851:15864   */\n      mload\n        /* \"#utility.yul\":15842:15864   */\n      swap1\n      pop\n        /* \"#utility.yul\":15873:15905   */\n      tag_526\n        /* \"#utility.yul\":15899:15904   */\n      dup2\n        /* \"#utility.yul\":15873:15905   */\n      tag_294\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":15770:15911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15917:16266   */\n    tag_191:\n        /* \"#utility.yul\":15986:15992   */\n      0x00\n        /* \"#utility.yul\":16035:16037   */\n      0x20\n        /* \"#utility.yul\":16023:16032   */\n      dup3\n        /* \"#utility.yul\":16014:16021   */\n      dup5\n        /* \"#utility.yul\":16010:16033   */\n      sub\n        /* \"#utility.yul\":16006:16038   */\n      slt\n        /* \"#utility.yul\":16003:16122   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":16041:16120   */\n      tag_529\n      tag_291\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":16003:16122   */\n    tag_528:\n        /* \"#utility.yul\":16161:16162   */\n      0x00\n        /* \"#utility.yul\":16186:16249   */\n      tag_530\n        /* \"#utility.yul\":16241:16248   */\n      dup5\n        /* \"#utility.yul\":16232:16238   */\n      dup3\n        /* \"#utility.yul\":16221:16230   */\n      dup6\n        /* \"#utility.yul\":16217:16239   */\n      add\n        /* \"#utility.yul\":16186:16249   */\n      tag_332\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16176:16249   */\n      swap2\n      pop\n        /* \"#utility.yul\":16132:16259   */\n      pop\n        /* \"#utility.yul\":15917:16266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16272:16413   */\n    tag_333:\n        /* \"#utility.yul\":16321:16325   */\n      0x00\n        /* \"#utility.yul\":16344:16347   */\n      dup2\n        /* \"#utility.yul\":16336:16347   */\n      swap1\n      pop\n        /* \"#utility.yul\":16367:16370   */\n      dup2\n        /* \"#utility.yul\":16364:16365   */\n      0x00\n        /* \"#utility.yul\":16357:16371   */\n      mstore\n        /* \"#utility.yul\":16401:16405   */\n      0x20\n        /* \"#utility.yul\":16398:16399   */\n      0x00\n        /* \"#utility.yul\":16388:16406   */\n      keccak256\n        /* \"#utility.yul\":16380:16406   */\n      swap1\n      pop\n        /* \"#utility.yul\":16272:16413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16419:16512   */\n    tag_334:\n        /* \"#utility.yul\":16456:16462   */\n      0x00\n        /* \"#utility.yul\":16503:16505   */\n      0x20\n        /* \"#utility.yul\":16498:16500   */\n      0x1f\n        /* \"#utility.yul\":16491:16496   */\n      dup4\n        /* \"#utility.yul\":16487:16501   */\n      add\n        /* \"#utility.yul\":16483:16506   */\n      div\n        /* \"#utility.yul\":16473:16506   */\n      swap1\n      pop\n        /* \"#utility.yul\":16419:16512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16518:16625   */\n    tag_335:\n        /* \"#utility.yul\":16562:16570   */\n      0x00\n        /* \"#utility.yul\":16612:16617   */\n      dup3\n        /* \"#utility.yul\":16606:16610   */\n      dup3\n        /* \"#utility.yul\":16602:16618   */\n      shl\n        /* \"#utility.yul\":16581:16618   */\n      swap1\n      pop\n        /* \"#utility.yul\":16518:16625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16631:17024   */\n    tag_336:\n        /* \"#utility.yul\":16700:16706   */\n      0x00\n        /* \"#utility.yul\":16750:16751   */\n      0x08\n        /* \"#utility.yul\":16738:16748   */\n      dup4\n        /* \"#utility.yul\":16734:16752   */\n      mul\n        /* \"#utility.yul\":16773:16870   */\n      tag_535\n        /* \"#utility.yul\":16803:16869   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16792:16801   */\n      dup3\n        /* \"#utility.yul\":16773:16870   */\n      tag_335\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16891:16930   */\n      tag_536\n        /* \"#utility.yul\":16921:16929   */\n      dup7\n        /* \"#utility.yul\":16910:16919   */\n      dup4\n        /* \"#utility.yul\":16891:16930   */\n      tag_335\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":16879:16930   */\n      swap6\n      pop\n        /* \"#utility.yul\":16963:16967   */\n      dup1\n        /* \"#utility.yul\":16959:16968   */\n      not\n        /* \"#utility.yul\":16952:16957   */\n      dup5\n        /* \"#utility.yul\":16948:16969   */\n      and\n        /* \"#utility.yul\":16939:16969   */\n      swap4\n      pop\n        /* \"#utility.yul\":17012:17016   */\n      dup1\n        /* \"#utility.yul\":17002:17010   */\n      dup7\n        /* \"#utility.yul\":16998:17017   */\n      and\n        /* \"#utility.yul\":16991:16996   */\n      dup5\n        /* \"#utility.yul\":16988:17018   */\n      or\n        /* \"#utility.yul\":16978:17018   */\n      swap3\n      pop\n        /* \"#utility.yul\":16707:17024   */\n      pop\n      pop\n        /* \"#utility.yul\":16631:17024   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17030:17090   */\n    tag_337:\n        /* \"#utility.yul\":17058:17061   */\n      0x00\n        /* \"#utility.yul\":17079:17084   */\n      dup2\n        /* \"#utility.yul\":17072:17084   */\n      swap1\n      pop\n        /* \"#utility.yul\":17030:17090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17096:17238   */\n    tag_338:\n        /* \"#utility.yul\":17146:17155   */\n      0x00\n        /* \"#utility.yul\":17179:17232   */\n      tag_539\n        /* \"#utility.yul\":17197:17231   */\n      tag_540\n        /* \"#utility.yul\":17206:17230   */\n      tag_541\n        /* \"#utility.yul\":17224:17229   */\n      dup5\n        /* \"#utility.yul\":17206:17230   */\n      tag_303\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":17197:17231   */\n      tag_337\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":17179:17232   */\n      tag_303\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":17166:17232   */\n      swap1\n      pop\n        /* \"#utility.yul\":17096:17238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17244:17319   */\n    tag_339:\n        /* \"#utility.yul\":17287:17290   */\n      0x00\n        /* \"#utility.yul\":17308:17313   */\n      dup2\n        /* \"#utility.yul\":17301:17313   */\n      swap1\n      pop\n        /* \"#utility.yul\":17244:17319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17325:17594   */\n    tag_340:\n        /* \"#utility.yul\":17435:17474   */\n      tag_544\n        /* \"#utility.yul\":17466:17473   */\n      dup4\n        /* \"#utility.yul\":17435:17474   */\n      tag_338\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":17496:17587   */\n      tag_545\n        /* \"#utility.yul\":17545:17586   */\n      tag_546\n        /* \"#utility.yul\":17569:17585   */\n      dup3\n        /* \"#utility.yul\":17545:17586   */\n      tag_339\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":17537:17543   */\n      dup5\n        /* \"#utility.yul\":17530:17534   */\n      dup5\n        /* \"#utility.yul\":17524:17535   */\n      sload\n        /* \"#utility.yul\":17496:17587   */\n      tag_336\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":17490:17494   */\n      dup3\n        /* \"#utility.yul\":17483:17588   */\n      sstore\n        /* \"#utility.yul\":17401:17594   */\n      pop\n        /* \"#utility.yul\":17325:17594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17600:17673   */\n    tag_341:\n        /* \"#utility.yul\":17645:17648   */\n      0x00\n        /* \"#utility.yul\":17600:17673   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17679:17868   */\n    tag_342:\n        /* \"#utility.yul\":17756:17788   */\n      tag_549\n      tag_341\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":17797:17862   */\n      tag_550\n        /* \"#utility.yul\":17855:17861   */\n      dup2\n        /* \"#utility.yul\":17847:17853   */\n      dup5\n        /* \"#utility.yul\":17841:17845   */\n      dup5\n        /* \"#utility.yul\":17797:17862   */\n      tag_340\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":17732:17868   */\n      pop\n        /* \"#utility.yul\":17679:17868   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17874:18060   */\n    tag_343:\n        /* \"#utility.yul\":17934:18054   */\n    tag_552:\n        /* \"#utility.yul\":17951:17954   */\n      dup2\n        /* \"#utility.yul\":17944:17949   */\n      dup2\n        /* \"#utility.yul\":17941:17955   */\n      lt\n        /* \"#utility.yul\":17934:18054   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":18005:18044   */\n      tag_555\n        /* \"#utility.yul\":18042:18043   */\n      0x00\n        /* \"#utility.yul\":18035:18040   */\n      dup3\n        /* \"#utility.yul\":18005:18044   */\n      tag_342\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":17978:17979   */\n      0x01\n        /* \"#utility.yul\":17971:17976   */\n      dup2\n        /* \"#utility.yul\":17967:17980   */\n      add\n        /* \"#utility.yul\":17958:17980   */\n      swap1\n      pop\n        /* \"#utility.yul\":17934:18054   */\n      jump(tag_552)\n    tag_554:\n        /* \"#utility.yul\":17874:18060   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18066:18609   */\n    tag_344:\n        /* \"#utility.yul\":18167:18169   */\n      0x1f\n        /* \"#utility.yul\":18162:18165   */\n      dup3\n        /* \"#utility.yul\":18159:18170   */\n      gt\n        /* \"#utility.yul\":18156:18602   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":18201:18239   */\n      tag_558\n        /* \"#utility.yul\":18233:18238   */\n      dup2\n        /* \"#utility.yul\":18201:18239   */\n      tag_333\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":18285:18314   */\n      tag_559\n        /* \"#utility.yul\":18303:18313   */\n      dup5\n        /* \"#utility.yul\":18285:18314   */\n      tag_334\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":18275:18283   */\n      dup2\n        /* \"#utility.yul\":18271:18315   */\n      add\n        /* \"#utility.yul\":18468:18470   */\n      0x20\n        /* \"#utility.yul\":18456:18466   */\n      dup6\n        /* \"#utility.yul\":18453:18471   */\n      lt\n        /* \"#utility.yul\":18450:18499   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":18489:18497   */\n      dup2\n        /* \"#utility.yul\":18474:18497   */\n      swap1\n      pop\n        /* \"#utility.yul\":18450:18499   */\n    tag_560:\n        /* \"#utility.yul\":18512:18592   */\n      tag_561\n        /* \"#utility.yul\":18568:18590   */\n      tag_562\n        /* \"#utility.yul\":18586:18589   */\n      dup6\n        /* \"#utility.yul\":18568:18590   */\n      tag_334\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":18558:18566   */\n      dup4\n        /* \"#utility.yul\":18554:18591   */\n      add\n        /* \"#utility.yul\":18541:18552   */\n      dup3\n        /* \"#utility.yul\":18512:18592   */\n      tag_343\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":18171:18602   */\n      pop\n      pop\n        /* \"#utility.yul\":18156:18602   */\n    tag_557:\n        /* \"#utility.yul\":18066:18609   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18615:18732   */\n    tag_345:\n        /* \"#utility.yul\":18669:18677   */\n      0x00\n        /* \"#utility.yul\":18719:18724   */\n      dup3\n        /* \"#utility.yul\":18713:18717   */\n      dup3\n        /* \"#utility.yul\":18709:18725   */\n      shr\n        /* \"#utility.yul\":18688:18725   */\n      swap1\n      pop\n        /* \"#utility.yul\":18615:18732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18738:18907   */\n    tag_346:\n        /* \"#utility.yul\":18782:18788   */\n      0x00\n        /* \"#utility.yul\":18815:18866   */\n      tag_565\n        /* \"#utility.yul\":18863:18864   */\n      0x00\n        /* \"#utility.yul\":18859:18865   */\n      not\n        /* \"#utility.yul\":18851:18856   */\n      dup5\n        /* \"#utility.yul\":18848:18849   */\n      0x08\n        /* \"#utility.yul\":18844:18857   */\n      mul\n        /* \"#utility.yul\":18815:18866   */\n      tag_345\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":18811:18867   */\n      not\n        /* \"#utility.yul\":18896:18900   */\n      dup1\n        /* \"#utility.yul\":18890:18894   */\n      dup4\n        /* \"#utility.yul\":18886:18901   */\n      and\n        /* \"#utility.yul\":18876:18901   */\n      swap2\n      pop\n        /* \"#utility.yul\":18789:18907   */\n      pop\n        /* \"#utility.yul\":18738:18907   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18912:19207   */\n    tag_347:\n        /* \"#utility.yul\":18988:18992   */\n      0x00\n        /* \"#utility.yul\":19134:19163   */\n      tag_567\n        /* \"#utility.yul\":19159:19162   */\n      dup4\n        /* \"#utility.yul\":19153:19157   */\n      dup4\n        /* \"#utility.yul\":19134:19163   */\n      tag_346\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":19126:19163   */\n      swap2\n      pop\n        /* \"#utility.yul\":19196:19199   */\n      dup3\n        /* \"#utility.yul\":19193:19194   */\n      0x02\n        /* \"#utility.yul\":19189:19200   */\n      mul\n        /* \"#utility.yul\":19183:19187   */\n      dup3\n        /* \"#utility.yul\":19180:19201   */\n      or\n        /* \"#utility.yul\":19172:19201   */\n      swap1\n      pop\n        /* \"#utility.yul\":18912:19207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19212:20607   */\n    tag_218:\n        /* \"#utility.yul\":19329:19366   */\n      tag_569\n        /* \"#utility.yul\":19362:19365   */\n      dup3\n        /* \"#utility.yul\":19329:19366   */\n      tag_298\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":19431:19449   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19423:19429   */\n      dup2\n        /* \"#utility.yul\":19420:19450   */\n      gt\n        /* \"#utility.yul\":19417:19473   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":19453:19471   */\n      tag_571\n      tag_246\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":19417:19473   */\n    tag_570:\n        /* \"#utility.yul\":19497:19535   */\n      tag_572\n        /* \"#utility.yul\":19529:19533   */\n      dup3\n        /* \"#utility.yul\":19523:19534   */\n      sload\n        /* \"#utility.yul\":19497:19535   */\n      tag_87\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":19582:19649   */\n      tag_573\n        /* \"#utility.yul\":19642:19648   */\n      dup3\n        /* \"#utility.yul\":19634:19640   */\n      dup3\n        /* \"#utility.yul\":19628:19632   */\n      dup6\n        /* \"#utility.yul\":19582:19649   */\n      tag_344\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19676:19677   */\n      0x00\n        /* \"#utility.yul\":19700:19704   */\n      0x20\n        /* \"#utility.yul\":19687:19704   */\n      swap1\n      pop\n        /* \"#utility.yul\":19732:19734   */\n      0x1f\n        /* \"#utility.yul\":19724:19730   */\n      dup4\n        /* \"#utility.yul\":19721:19735   */\n      gt\n        /* \"#utility.yul\":19749:19750   */\n      0x01\n        /* \"#utility.yul\":19744:20362   */\n      dup2\n      eq\n      tag_575\n      jumpi\n        /* \"#utility.yul\":20406:20407   */\n      0x00\n        /* \"#utility.yul\":20423:20429   */\n      dup5\n        /* \"#utility.yul\":20420:20497   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":20472:20481   */\n      dup3\n        /* \"#utility.yul\":20467:20470   */\n      dup8\n        /* \"#utility.yul\":20463:20482   */\n      add\n        /* \"#utility.yul\":20457:20483   */\n      mload\n        /* \"#utility.yul\":20448:20483   */\n      swap1\n      pop\n        /* \"#utility.yul\":20420:20497   */\n    tag_576:\n        /* \"#utility.yul\":20523:20590   */\n      tag_577\n        /* \"#utility.yul\":20583:20589   */\n      dup6\n        /* \"#utility.yul\":20576:20581   */\n      dup3\n        /* \"#utility.yul\":20523:20590   */\n      tag_347\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":20517:20521   */\n      dup7\n        /* \"#utility.yul\":20510:20591   */\n      sstore\n        /* \"#utility.yul\":20379:20601   */\n      pop\n        /* \"#utility.yul\":19714:20601   */\n      jump(tag_574)\n        /* \"#utility.yul\":19744:20362   */\n    tag_575:\n        /* \"#utility.yul\":19796:19800   */\n      0x1f\n        /* \"#utility.yul\":19792:19801   */\n      not\n        /* \"#utility.yul\":19784:19790   */\n      dup5\n        /* \"#utility.yul\":19780:19802   */\n      and\n        /* \"#utility.yul\":19830:19867   */\n      tag_578\n        /* \"#utility.yul\":19862:19866   */\n      dup7\n        /* \"#utility.yul\":19830:19867   */\n      tag_333\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":19889:19890   */\n      0x00\n        /* \"#utility.yul\":19903:20111   */\n    tag_579:\n        /* \"#utility.yul\":19917:19924   */\n      dup3\n        /* \"#utility.yul\":19914:19915   */\n      dup2\n        /* \"#utility.yul\":19911:19925   */\n      lt\n        /* \"#utility.yul\":19903:20111   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":19996:20005   */\n      dup5\n        /* \"#utility.yul\":19991:19994   */\n      dup10\n        /* \"#utility.yul\":19987:20006   */\n      add\n        /* \"#utility.yul\":19981:20007   */\n      mload\n        /* \"#utility.yul\":19973:19979   */\n      dup3\n        /* \"#utility.yul\":19966:20008   */\n      sstore\n        /* \"#utility.yul\":20047:20048   */\n      0x01\n        /* \"#utility.yul\":20039:20045   */\n      dup3\n        /* \"#utility.yul\":20035:20049   */\n      add\n        /* \"#utility.yul\":20025:20049   */\n      swap2\n      pop\n        /* \"#utility.yul\":20094:20096   */\n      0x20\n        /* \"#utility.yul\":20083:20092   */\n      dup6\n        /* \"#utility.yul\":20079:20097   */\n      add\n        /* \"#utility.yul\":20066:20097   */\n      swap5\n      pop\n        /* \"#utility.yul\":19940:19944   */\n      0x20\n        /* \"#utility.yul\":19937:19938   */\n      dup2\n        /* \"#utility.yul\":19933:19945   */\n      add\n        /* \"#utility.yul\":19928:19945   */\n      swap1\n      pop\n        /* \"#utility.yul\":19903:20111   */\n      jump(tag_579)\n    tag_581:\n        /* \"#utility.yul\":20139:20145   */\n      dup7\n        /* \"#utility.yul\":20130:20137   */\n      dup4\n        /* \"#utility.yul\":20127:20146   */\n      lt\n        /* \"#utility.yul\":20124:20303   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":20197:20206   */\n      dup5\n        /* \"#utility.yul\":20192:20195   */\n      dup10\n        /* \"#utility.yul\":20188:20207   */\n      add\n        /* \"#utility.yul\":20182:20208   */\n      mload\n        /* \"#utility.yul\":20240:20288   */\n      tag_583\n        /* \"#utility.yul\":20282:20286   */\n      0x1f\n        /* \"#utility.yul\":20274:20280   */\n      dup10\n        /* \"#utility.yul\":20270:20287   */\n      and\n        /* \"#utility.yul\":20259:20268   */\n      dup3\n        /* \"#utility.yul\":20240:20288   */\n      tag_346\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":20232:20238   */\n      dup4\n        /* \"#utility.yul\":20225:20289   */\n      sstore\n        /* \"#utility.yul\":20147:20303   */\n      pop\n        /* \"#utility.yul\":20124:20303   */\n    tag_582:\n        /* \"#utility.yul\":20349:20350   */\n      0x01\n        /* \"#utility.yul\":20345:20346   */\n      0x02\n        /* \"#utility.yul\":20337:20343   */\n      dup9\n        /* \"#utility.yul\":20333:20347   */\n      mul\n        /* \"#utility.yul\":20329:20351   */\n      add\n        /* \"#utility.yul\":20323:20327   */\n      dup9\n        /* \"#utility.yul\":20316:20352   */\n      sstore\n        /* \"#utility.yul\":19751:20362   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19714:20601   */\n    tag_574:\n      pop\n        /* \"#utility.yul\":19304:20607   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19212:20607   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20613:20945   */\n    tag_240:\n        /* \"#utility.yul\":20734:20738   */\n      0x00\n        /* \"#utility.yul\":20772:20774   */\n      0x40\n        /* \"#utility.yul\":20761:20770   */\n      dup3\n        /* \"#utility.yul\":20757:20775   */\n      add\n        /* \"#utility.yul\":20749:20775   */\n      swap1\n      pop\n        /* \"#utility.yul\":20785:20856   */\n      tag_585\n        /* \"#utility.yul\":20853:20854   */\n      0x00\n        /* \"#utility.yul\":20842:20851   */\n      dup4\n        /* \"#utility.yul\":20838:20855   */\n      add\n        /* \"#utility.yul\":20829:20835   */\n      dup6\n        /* \"#utility.yul\":20785:20856   */\n      tag_308\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":20866:20938   */\n      tag_586\n        /* \"#utility.yul\":20934:20936   */\n      0x20\n        /* \"#utility.yul\":20923:20932   */\n      dup4\n        /* \"#utility.yul\":20919:20937   */\n      add\n        /* \"#utility.yul\":20910:20916   */\n      dup5\n        /* \"#utility.yul\":20866:20938   */\n      tag_311\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":20613:20945   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20951:21131   */\n    tag_252:\n        /* \"#utility.yul\":20999:21076   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20996:20997   */\n      0x00\n        /* \"#utility.yul\":20989:21077   */\n      mstore\n        /* \"#utility.yul\":21096:21100   */\n      0x12\n        /* \"#utility.yul\":21093:21094   */\n      0x04\n        /* \"#utility.yul\":21086:21101   */\n      mstore\n        /* \"#utility.yul\":21120:21124   */\n      0x24\n        /* \"#utility.yul\":21117:21118   */\n      0x00\n        /* \"#utility.yul\":21110:21125   */\n      revert\n\n    auxdata: 0xa2646970667358221220d2e6ffb43e1858a6ddfa48ae867cf9cbb7e49452b5022155f4eb02b7c827b7fe64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_238": {
									"entryPoint": null,
									"id": 238,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2966": {
									"entryPoint": null,
									"id": 2966,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6426:16",
										"nodeType": "YulBlock",
										"src": "0:6426:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "379:81:16",
													"nodeType": "YulBlock",
													"src": "379:81:16",
													"statements": [
														{
															"nativeSrc": "389:65:16",
															"nodeType": "YulAssignment",
															"src": "389:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:16",
																		"nodeType": "YulLiteral",
																		"src": "411:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:16"
																},
																"nativeSrc": "400:54:16",
																"nodeType": "YulFunctionCall",
																"src": "400:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:16",
														"nodeType": "YulTypedName",
														"src": "361:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:16",
														"nodeType": "YulTypedName",
														"src": "371:7:16",
														"type": ""
													}
												],
												"src": "334:126:16"
											},
											{
												"body": {
													"nativeSrc": "511:51:16",
													"nodeType": "YulBlock",
													"src": "511:51:16",
													"statements": [
														{
															"nativeSrc": "521:35:16",
															"nodeType": "YulAssignment",
															"src": "521:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:16"
																},
																"nativeSrc": "532:24:16",
																"nodeType": "YulFunctionCall",
																"src": "532:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:16",
														"nodeType": "YulTypedName",
														"src": "493:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:16",
														"nodeType": "YulTypedName",
														"src": "503:7:16",
														"type": ""
													}
												],
												"src": "466:96:16"
											},
											{
												"body": {
													"nativeSrc": "611:79:16",
													"nodeType": "YulBlock",
													"src": "611:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:16",
																"nodeType": "YulBlock",
																"src": "668:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:16",
																					"nodeType": "YulLiteral",
																					"src": "677:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:16",
																					"nodeType": "YulLiteral",
																					"src": "680:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:16"
																			},
																			"nativeSrc": "670:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:16"
																		},
																		"nativeSrc": "670:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:16"
																				},
																				"nativeSrc": "641:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:16"
																		},
																		"nativeSrc": "631:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:16"
																},
																"nativeSrc": "624:43:16",
																"nodeType": "YulFunctionCall",
																"src": "624:43:16"
															},
															"nativeSrc": "621:63:16",
															"nodeType": "YulIf",
															"src": "621:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:16",
														"nodeType": "YulTypedName",
														"src": "604:5:16",
														"type": ""
													}
												],
												"src": "568:122:16"
											},
											{
												"body": {
													"nativeSrc": "759:80:16",
													"nodeType": "YulBlock",
													"src": "759:80:16",
													"statements": [
														{
															"nativeSrc": "769:22:16",
															"nodeType": "YulAssignment",
															"src": "769:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:16"
																},
																"nativeSrc": "778:13:16",
																"nodeType": "YulFunctionCall",
																"src": "778:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:16"
																},
																"nativeSrc": "800:33:16",
																"nodeType": "YulFunctionCall",
																"src": "800:33:16"
															},
															"nativeSrc": "800:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:16"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:16",
														"nodeType": "YulTypedName",
														"src": "737:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:16",
														"nodeType": "YulTypedName",
														"src": "745:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:16",
														"nodeType": "YulTypedName",
														"src": "753:5:16",
														"type": ""
													}
												],
												"src": "696:143:16"
											},
											{
												"body": {
													"nativeSrc": "922:274:16",
													"nodeType": "YulBlock",
													"src": "922:274:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:16",
																"nodeType": "YulBlock",
																"src": "968:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:16"
																			},
																			"nativeSrc": "970:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:16"
																		},
																		"nativeSrc": "970:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:16"
																		},
																		"nativeSrc": "939:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:16",
																		"nodeType": "YulLiteral",
																		"src": "964:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:16"
																},
																"nativeSrc": "935:32:16",
																"nodeType": "YulFunctionCall",
																"src": "935:32:16"
															},
															"nativeSrc": "932:119:16",
															"nodeType": "YulIf",
															"src": "932:119:16"
														},
														{
															"nativeSrc": "1061:128:16",
															"nodeType": "YulBlock",
															"src": "1061:128:16",
															"statements": [
																{
																	"nativeSrc": "1076:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:16",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:16",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:16"
																				},
																				"nativeSrc": "1147:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:16",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:16"
																		},
																		"nativeSrc": "1115:64:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:16",
														"nodeType": "YulTypedName",
														"src": "892:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:16",
														"nodeType": "YulTypedName",
														"src": "903:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:16",
														"nodeType": "YulTypedName",
														"src": "915:6:16",
														"type": ""
													}
												],
												"src": "845:351:16"
											},
											{
												"body": {
													"nativeSrc": "1261:40:16",
													"nodeType": "YulBlock",
													"src": "1261:40:16",
													"statements": [
														{
															"nativeSrc": "1272:22:16",
															"nodeType": "YulAssignment",
															"src": "1272:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:16"
																},
																"nativeSrc": "1282:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:16",
														"nodeType": "YulTypedName",
														"src": "1244:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:16",
														"nodeType": "YulTypedName",
														"src": "1254:6:16",
														"type": ""
													}
												],
												"src": "1202:99:16"
											},
											{
												"body": {
													"nativeSrc": "1335:152:16",
													"nodeType": "YulBlock",
													"src": "1335:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:16",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:16"
																},
																"nativeSrc": "1345:88:16",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:16"
															},
															"nativeSrc": "1345:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:16"
																},
																"nativeSrc": "1442:15:16",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:16"
															},
															"nativeSrc": "1442:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:16"
																},
																"nativeSrc": "1466:15:16",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:16"
															},
															"nativeSrc": "1466:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:16"
											},
											{
												"body": {
													"nativeSrc": "1521:152:16",
													"nodeType": "YulBlock",
													"src": "1521:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:16",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:16"
																},
																"nativeSrc": "1531:88:16",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:16"
															},
															"nativeSrc": "1531:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:16"
																},
																"nativeSrc": "1628:15:16",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:16"
															},
															"nativeSrc": "1628:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:16"
																},
																"nativeSrc": "1652:15:16",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:16"
															},
															"nativeSrc": "1652:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:16"
											},
											{
												"body": {
													"nativeSrc": "1730:269:16",
													"nodeType": "YulBlock",
													"src": "1730:269:16",
													"statements": [
														{
															"nativeSrc": "1740:22:16",
															"nodeType": "YulAssignment",
															"src": "1740:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:16"
																},
																"nativeSrc": "1750:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:16"
																}
															]
														},
														{
															"nativeSrc": "1771:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:16"
																},
																"nativeSrc": "1797:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:16",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:16",
																"nodeType": "YulBlock",
																"src": "1848:51:16",
																"statements": [
																	{
																		"nativeSrc": "1862:27:16",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:16",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:16"
																			},
																			"nativeSrc": "1872:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:16"
																},
																"nativeSrc": "1821:26:16",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:16"
															},
															"nativeSrc": "1818:81:16",
															"nodeType": "YulIf",
															"src": "1818:81:16"
														},
														{
															"body": {
																"nativeSrc": "1951:42:16",
																"nodeType": "YulBlock",
																"src": "1951:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:16"
																			},
																			"nativeSrc": "1965:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:16"
																		},
																		"nativeSrc": "1965:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:16"
																		},
																		"nativeSrc": "1935:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:16"
																},
																"nativeSrc": "1912:38:16",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:16"
															},
															"nativeSrc": "1909:84:16",
															"nodeType": "YulIf",
															"src": "1909:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:16",
														"nodeType": "YulTypedName",
														"src": "1714:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:16",
														"nodeType": "YulTypedName",
														"src": "1723:6:16",
														"type": ""
													}
												],
												"src": "1679:320:16"
											},
											{
												"body": {
													"nativeSrc": "2059:87:16",
													"nodeType": "YulBlock",
													"src": "2059:87:16",
													"statements": [
														{
															"nativeSrc": "2069:11:16",
															"nodeType": "YulAssignment",
															"src": "2069:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:16",
																"nodeType": "YulIdentifier",
																"src": "2077:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:16"
																},
																"nativeSrc": "2090:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:16"
															},
															"nativeSrc": "2090:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:16"
														},
														{
															"nativeSrc": "2113:26:16",
															"nodeType": "YulAssignment",
															"src": "2113:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:16"
																},
																"nativeSrc": "2121:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:16",
														"nodeType": "YulTypedName",
														"src": "2046:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:16",
														"nodeType": "YulTypedName",
														"src": "2054:4:16",
														"type": ""
													}
												],
												"src": "2005:141:16"
											},
											{
												"body": {
													"nativeSrc": "2196:49:16",
													"nodeType": "YulBlock",
													"src": "2196:49:16",
													"statements": [
														{
															"nativeSrc": "2206:33:16",
															"nodeType": "YulAssignment",
															"src": "2206:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:16"
																		},
																		"nativeSrc": "2220:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:16"
																},
																"nativeSrc": "2216:23:16",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:16",
														"nodeType": "YulTypedName",
														"src": "2179:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:16",
														"nodeType": "YulTypedName",
														"src": "2189:6:16",
														"type": ""
													}
												],
												"src": "2152:93:16"
											},
											{
												"body": {
													"nativeSrc": "2304:54:16",
													"nodeType": "YulBlock",
													"src": "2304:54:16",
													"statements": [
														{
															"nativeSrc": "2314:37:16",
															"nodeType": "YulAssignment",
															"src": "2314:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:16"
																},
																"nativeSrc": "2335:16:16",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:16",
														"nodeType": "YulTypedName",
														"src": "2279:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:16",
														"nodeType": "YulTypedName",
														"src": "2285:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:16",
														"nodeType": "YulTypedName",
														"src": "2295:8:16",
														"type": ""
													}
												],
												"src": "2251:107:16"
											},
											{
												"body": {
													"nativeSrc": "2440:317:16",
													"nodeType": "YulBlock",
													"src": "2440:317:16",
													"statements": [
														{
															"nativeSrc": "2450:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:16"
																},
																"nativeSrc": "2467:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:16",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:16",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:16"
																},
																"nativeSrc": "2506:97:16",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:16",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:16",
															"nodeType": "YulAssignment",
															"src": "2612:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:16"
																},
																"nativeSrc": "2624:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:16"
																}
															]
														},
														{
															"nativeSrc": "2672:30:16",
															"nodeType": "YulAssignment",
															"src": "2672:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:16"
																		},
																		"nativeSrc": "2692:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:16"
																},
																"nativeSrc": "2681:21:16",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:16"
																}
															]
														},
														{
															"nativeSrc": "2711:40:16",
															"nodeType": "YulAssignment",
															"src": "2711:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:16"
																		},
																		"nativeSrc": "2731:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:16"
																},
																"nativeSrc": "2721:30:16",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:16",
														"nodeType": "YulTypedName",
														"src": "2401:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:16",
														"nodeType": "YulTypedName",
														"src": "2408:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:16",
														"nodeType": "YulTypedName",
														"src": "2420:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:16",
														"nodeType": "YulTypedName",
														"src": "2433:6:16",
														"type": ""
													}
												],
												"src": "2364:393:16"
											},
											{
												"body": {
													"nativeSrc": "2808:32:16",
													"nodeType": "YulBlock",
													"src": "2808:32:16",
													"statements": [
														{
															"nativeSrc": "2818:16:16",
															"nodeType": "YulAssignment",
															"src": "2818:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:16",
																"nodeType": "YulIdentifier",
																"src": "2829:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:16",
														"nodeType": "YulTypedName",
														"src": "2790:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:16",
														"nodeType": "YulTypedName",
														"src": "2800:7:16",
														"type": ""
													}
												],
												"src": "2763:77:16"
											},
											{
												"body": {
													"nativeSrc": "2878:28:16",
													"nodeType": "YulBlock",
													"src": "2878:28:16",
													"statements": [
														{
															"nativeSrc": "2888:12:16",
															"nodeType": "YulAssignment",
															"src": "2888:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:16",
																"nodeType": "YulIdentifier",
																"src": "2895:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:16",
														"nodeType": "YulTypedName",
														"src": "2864:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:16",
														"nodeType": "YulTypedName",
														"src": "2874:3:16",
														"type": ""
													}
												],
												"src": "2846:60:16"
											},
											{
												"body": {
													"nativeSrc": "2972:82:16",
													"nodeType": "YulBlock",
													"src": "2972:82:16",
													"statements": [
														{
															"nativeSrc": "2982:66:16",
															"nodeType": "YulAssignment",
															"src": "2982:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:16"
																				},
																				"nativeSrc": "3022:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:16"
																		},
																		"nativeSrc": "3013:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:16"
																},
																"nativeSrc": "2995:53:16",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:16",
														"nodeType": "YulTypedName",
														"src": "2952:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:16",
														"nodeType": "YulTypedName",
														"src": "2962:9:16",
														"type": ""
													}
												],
												"src": "2912:142:16"
											},
											{
												"body": {
													"nativeSrc": "3107:28:16",
													"nodeType": "YulBlock",
													"src": "3107:28:16",
													"statements": [
														{
															"nativeSrc": "3117:12:16",
															"nodeType": "YulAssignment",
															"src": "3117:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:16",
																"nodeType": "YulIdentifier",
																"src": "3124:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:16",
														"nodeType": "YulTypedName",
														"src": "3093:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:16",
														"nodeType": "YulTypedName",
														"src": "3103:3:16",
														"type": ""
													}
												],
												"src": "3060:75:16"
											},
											{
												"body": {
													"nativeSrc": "3217:193:16",
													"nodeType": "YulBlock",
													"src": "3217:193:16",
													"statements": [
														{
															"nativeSrc": "3227:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:16"
																},
																"nativeSrc": "3251:39:16",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:16",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:16"
																				},
																				"nativeSrc": "3340:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:16"
																				},
																				"nativeSrc": "3361:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:16"
																		},
																		"nativeSrc": "3312:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:16"
																},
																"nativeSrc": "3299:105:16",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:16"
															},
															"nativeSrc": "3299:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:16",
														"nodeType": "YulTypedName",
														"src": "3194:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:16",
														"nodeType": "YulTypedName",
														"src": "3200:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:16",
														"nodeType": "YulTypedName",
														"src": "3208:7:16",
														"type": ""
													}
												],
												"src": "3141:269:16"
											},
											{
												"body": {
													"nativeSrc": "3465:24:16",
													"nodeType": "YulBlock",
													"src": "3465:24:16",
													"statements": [
														{
															"nativeSrc": "3475:8:16",
															"nodeType": "YulAssignment",
															"src": "3475:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:16",
																"nodeType": "YulLiteral",
																"src": "3482:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:16",
														"nodeType": "YulTypedName",
														"src": "3461:3:16",
														"type": ""
													}
												],
												"src": "3416:73:16"
											},
											{
												"body": {
													"nativeSrc": "3548:136:16",
													"nodeType": "YulBlock",
													"src": "3548:136:16",
													"statements": [
														{
															"nativeSrc": "3558:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:16"
																},
																"nativeSrc": "3572:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:16"
																},
																"nativeSrc": "3613:65:16",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:16"
															},
															"nativeSrc": "3613:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:16",
														"nodeType": "YulTypedName",
														"src": "3534:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:16",
														"nodeType": "YulTypedName",
														"src": "3540:6:16",
														"type": ""
													}
												],
												"src": "3495:189:16"
											},
											{
												"body": {
													"nativeSrc": "3740:136:16",
													"nodeType": "YulBlock",
													"src": "3740:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:16",
																"nodeType": "YulBlock",
																"src": "3807:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:16"
																			},
																			"nativeSrc": "3821:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:16"
																		},
																		"nativeSrc": "3821:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:16"
																},
																"nativeSrc": "3757:14:16",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:16"
															},
															"nativeSrc": "3750:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:16",
																"nodeType": "YulBlock",
																"src": "3772:26:16",
																"statements": [
																	{
																		"nativeSrc": "3774:22:16",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:16"
																			},
																			"nativeSrc": "3783:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:16",
																"nodeType": "YulBlock",
																"src": "3754:2:16",
																"statements": []
															},
															"src": "3750:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:16",
														"nodeType": "YulTypedName",
														"src": "3728:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:16",
														"nodeType": "YulTypedName",
														"src": "3735:3:16",
														"type": ""
													}
												],
												"src": "3690:186:16"
											},
											{
												"body": {
													"nativeSrc": "3961:464:16",
													"nodeType": "YulBlock",
													"src": "3961:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:16",
																"nodeType": "YulBlock",
																"src": "3987:431:16",
																"statements": [
																	{
																		"nativeSrc": "4001:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:16"
																			},
																			"nativeSrc": "4017:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:16",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:16"
																					},
																					"nativeSrc": "4101:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:16"
																			},
																			"nativeSrc": "4087:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:16",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:16",
																			"nodeType": "YulBlock",
																			"src": "4288:27:16",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:16",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:16",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:16"
																			},
																			"nativeSrc": "4269:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:16"
																		},
																		"nativeSrc": "4266:49:16",
																		"nodeType": "YulIf",
																		"src": "4266:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:16"
																							},
																							"nativeSrc": "4384:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:16"
																					},
																					"nativeSrc": "4370:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:16"
																			},
																			"nativeSrc": "4328:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:16"
																		},
																		"nativeSrc": "4328:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:16"
																},
																"nativeSrc": "3975:11:16",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:16"
															},
															"nativeSrc": "3972:446:16",
															"nodeType": "YulIf",
															"src": "3972:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:16",
														"nodeType": "YulTypedName",
														"src": "3937:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:16",
														"nodeType": "YulTypedName",
														"src": "3944:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:16",
														"nodeType": "YulTypedName",
														"src": "3949:10:16",
														"type": ""
													}
												],
												"src": "3882:543:16"
											},
											{
												"body": {
													"nativeSrc": "4494:54:16",
													"nodeType": "YulBlock",
													"src": "4494:54:16",
													"statements": [
														{
															"nativeSrc": "4504:37:16",
															"nodeType": "YulAssignment",
															"src": "4504:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:16"
																},
																"nativeSrc": "4525:16:16",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:16",
														"nodeType": "YulTypedName",
														"src": "4469:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:16",
														"nodeType": "YulTypedName",
														"src": "4475:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:16",
														"nodeType": "YulTypedName",
														"src": "4485:8:16",
														"type": ""
													}
												],
												"src": "4431:117:16"
											},
											{
												"body": {
													"nativeSrc": "4605:118:16",
													"nodeType": "YulBlock",
													"src": "4605:118:16",
													"statements": [
														{
															"nativeSrc": "4615:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:16"
																				},
																				"nativeSrc": "4660:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:16"
																				},
																				"nativeSrc": "4675:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:16"
																		},
																		"nativeSrc": "4631:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:16"
																},
																"nativeSrc": "4627:56:16",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:16",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:16",
															"nodeType": "YulAssignment",
															"src": "4692:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:16"
																},
																"nativeSrc": "4702:15:16",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:16",
														"nodeType": "YulTypedName",
														"src": "4582:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:16",
														"nodeType": "YulTypedName",
														"src": "4588:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:16",
														"nodeType": "YulTypedName",
														"src": "4598:6:16",
														"type": ""
													}
												],
												"src": "4554:169:16"
											},
											{
												"body": {
													"nativeSrc": "4809:214:16",
													"nodeType": "YulBlock",
													"src": "4809:214:16",
													"statements": [
														{
															"nativeSrc": "4942:37:16",
															"nodeType": "YulAssignment",
															"src": "4942:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:16"
																},
																"nativeSrc": "4950:29:16",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:16"
																}
															]
														},
														{
															"nativeSrc": "4988:29:16",
															"nodeType": "YulAssignment",
															"src": "4988:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:16",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:16"
																		},
																		"nativeSrc": "5005:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:16"
																},
																"nativeSrc": "4996:21:16",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:16",
														"nodeType": "YulTypedName",
														"src": "4790:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:16",
														"nodeType": "YulTypedName",
														"src": "4796:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:16",
														"nodeType": "YulTypedName",
														"src": "4804:4:16",
														"type": ""
													}
												],
												"src": "4728:295:16"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:16",
													"nodeType": "YulBlock",
													"src": "5120:1303:16",
													"statements": [
														{
															"nativeSrc": "5131:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:16"
																},
																"nativeSrc": "5145:37:16",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:16",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:16",
																"nodeType": "YulBlock",
																"src": "5267:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:16"
																			},
																			"nativeSrc": "5269:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:16"
																		},
																		"nativeSrc": "5269:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:16",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:16"
																},
																"nativeSrc": "5236:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:16"
															},
															"nativeSrc": "5233:56:16",
															"nodeType": "YulIf",
															"src": "5233:56:16"
														},
														{
															"nativeSrc": "5299:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:16"
																		},
																		"nativeSrc": "5339:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:16"
																},
																"nativeSrc": "5313:38:16",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:16",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:16"
																},
																"nativeSrc": "5398:67:16",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:16"
															},
															"nativeSrc": "5398:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:16"
														},
														{
															"nativeSrc": "5475:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:16",
																"nodeType": "YulLiteral",
																"src": "5492:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:16",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:16",
															"nodeType": "YulAssignment",
															"src": "5503:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:16",
																"nodeType": "YulLiteral",
																"src": "5516:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:16",
																		"nodeType": "YulBlock",
																		"src": "5567:611:16",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:16",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:16"
																							},
																							"nativeSrc": "5608:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:16"
																					},
																					"nativeSrc": "5596:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:16",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:16"
																					},
																					"nativeSrc": "5646:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:16",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:16",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:16",
																					"nodeType": "YulBlock",
																					"src": "5764:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:16"
																												},
																												"nativeSrc": "5803:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:16"
																										},
																										"nativeSrc": "5797:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:16"
																								},
																								"nativeSrc": "5782:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:16"
																							},
																							"nativeSrc": "5782:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:16"
																						},
																						{
																							"nativeSrc": "5841:24:16",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:16",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:16"
																								},
																								"nativeSrc": "5851:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:16",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:16",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:16"
																								},
																								"nativeSrc": "5895:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:16"
																					},
																					"nativeSrc": "5727:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:16"
																				},
																				"nativeSrc": "5719:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:16",
																					"nodeType": "YulBlock",
																					"src": "5742:21:16",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:16",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:16",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:16"
																								},
																								"nativeSrc": "5749:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:16",
																					"nodeType": "YulBlock",
																					"src": "5723:3:16",
																					"statements": []
																				},
																				"src": "5719:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:16",
																					"nodeType": "YulBlock",
																					"src": "5963:156:16",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:16"
																										},
																										"nativeSrc": "6004:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:16"
																								},
																								"nativeSrc": "5998:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:16",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:16",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:16"
																												},
																												"nativeSrc": "6086:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:16"
																										},
																										"nativeSrc": "6056:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:16"
																								},
																								"nativeSrc": "6041:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:16"
																							},
																							"nativeSrc": "6041:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:16"
																					},
																					"nativeSrc": "5943:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:16"
																				},
																				"nativeSrc": "5940:179:16",
																				"nodeType": "YulIf",
																				"src": "5940:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:16",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:16"
																									},
																									"nativeSrc": "6149:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:16",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:16"
																							},
																							"nativeSrc": "6145:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:16"
																					},
																					"nativeSrc": "6132:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:16"
																				},
																				"nativeSrc": "6132:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:16"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:16",
																	"nodeType": "YulCase",
																	"src": "5560:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:16",
																		"nodeType": "YulBlock",
																		"src": "6195:222:16",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:16",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:16",
																					"nodeType": "YulBlock",
																					"src": "6246:67:16",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:16",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:16"
																										},
																										"nativeSrc": "6279:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:16"
																								},
																								"nativeSrc": "6273:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:16"
																				},
																				"nativeSrc": "6236:77:16",
																				"nodeType": "YulIf",
																				"src": "6236:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:16"
																							},
																							"nativeSrc": "6339:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:16"
																					},
																					"nativeSrc": "6326:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:16"
																				},
																				"nativeSrc": "6326:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:16"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:16",
																	"nodeType": "YulCase",
																	"src": "6187:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:16"
																},
																"nativeSrc": "5537:14:16",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:16"
															},
															"nativeSrc": "5530:887:16",
															"nodeType": "YulSwitch",
															"src": "5530:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:16",
														"nodeType": "YulTypedName",
														"src": "5109:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:16",
														"nodeType": "YulTypedName",
														"src": "5115:3:16",
														"type": ""
													}
												],
												"src": "5028:1395:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200285b3803806200285b833981810160405281019062000036919062000173565b6040518060400160405280601581526020017f426f726564205065747320596163687420436c756200000000000000000000008152506040518060400160405280600481526020017f4250594300000000000000000000000000000000000000000000000000000000815250815f9081620000b2919062000407565b508060019081620000c4919062000407565b5050508060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620004eb565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200013d8262000112565b9050919050565b6200014f8162000131565b81146200015a575f80fd5b50565b5f815190506200016d8162000144565b92915050565b5f602082840312156200018b576200018a6200010e565b5b5f6200019a848285016200015d565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200021f57607f821691505b602082108103620002355762000234620001da565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200025c565b620002a586836200025c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620002ef620002e9620002e384620002bd565b620002c6565b620002bd565b9050919050565b5f819050919050565b6200030a83620002cf565b620003226200031982620002f6565b84845462000268565b825550505050565b5f90565b620003386200032a565b62000345818484620002ff565b505050565b5b818110156200036c57620003605f826200032e565b6001810190506200034b565b5050565b601f821115620003bb5762000385816200023b565b62000390846200024d565b81016020851015620003a0578190505b620003b8620003af856200024d565b8301826200034a565b50505b505050565b5f82821c905092915050565b5f620003dd5f1984600802620003c0565b1980831691505092915050565b5f620003f78383620003cc565b9150826002028217905092915050565b6200041282620001a3565b67ffffffffffffffff8111156200042e576200042d620001ad565b5b6200043a825462000207565b6200044782828562000370565b5f60209050601f8311600181146200047d575f841562000468578287015190505b620004748582620003ea565b865550620004e3565b601f1984166200048d866200023b565b5f5b82811015620004b6578489015182556001820191506020850194506020810190506200048f565b86831015620004d65784890151620004d2601f891682620003cc565b8355505b6001600288020188555050505b505050505050565b61236280620004f95f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c806370a082311161008a578063b88d4fde11610064578063b88d4fde14610258578063c87b56dd14610274578063d85d3d27146102a4578063e985e9c5146102c0576100e8565b806370a08231146101ee57806395d89b411461021e578063a22cb4651461023c576100e8565b8063095ea7b3116100c6578063095ea7b31461016a57806323b872dd1461018657806342842e0e146101a25780636352211e146101be576100e8565b806301ffc9a7146100ec57806306fdde031461011c578063081812fc1461013a575b5f80fd5b6101066004803603810190610101919061182e565b6102f0565b6040516101139190611873565b60405180910390f35b610124610350565b6040516101319190611916565b60405180910390f35b610154600480360381019061014f9190611969565b6103df565b60405161016191906119d3565b60405180910390f35b610184600480360381019061017f9190611a16565b6103fa565b005b6101a0600480360381019061019b9190611a54565b610410565b005b6101bc60048036038101906101b79190611a54565b61050f565b005b6101d860048036038101906101d39190611969565b61052e565b6040516101e591906119d3565b60405180910390f35b61020860048036038101906102039190611aa4565b61053f565b6040516102159190611ade565b60405180910390f35b6102266105f5565b6040516102339190611916565b60405180910390f35b61025660048036038101906102519190611b21565b610685565b005b610272600480360381019061026d9190611c8b565b61069b565b005b61028e60048036038101906102899190611969565b6106b8565b60405161029b9190611916565b60405180910390f35b6102be60048036038101906102b99190611da9565b6107c3565b005b6102da60048036038101906102d59190611df0565b61085b565b6040516102e79190611873565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103495750610348826108e9565b5b9050919050565b60605f805461035e90611e5b565b80601f016020809104026020016040519081016040528092919081815260200182805461038a90611e5b565b80156103d55780601f106103ac576101008083540402835291602001916103d5565b820191905f5260205f20905b8154815290600101906020018083116103b857829003601f168201915b5050505050905090565b5f6103e9826109ca565b506103f382610a50565b9050919050565b61040c8282610407610a89565b610a90565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610480575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161047791906119d3565b60405180910390fd5b5f610493838361048e610a89565b610aa2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610509578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161050093929190611e8b565b60405180910390fd5b50505050565b61052983838360405180602001604052805f81525061069b565b505050565b5f610538826109ca565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105b0575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105a791906119d3565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461060490611e5b565b80601f016020809104026020016040519081016040528092919081815260200182805461063090611e5b565b801561067b5780601f106106525761010080835404028352916020019161067b565b820191905f5260205f20905b81548152906001019060200180831161065e57829003601f168201915b5050505050905090565b610697610690610a89565b8383610cad565b5050565b6106a6848484610410565b6106b284848484610e16565b50505050565b60606106c3826109ca565b505f60065f8481526020019081526020015f2080546106e190611e5b565b80601f016020809104026020016040519081016040528092919081815260200182805461070d90611e5b565b80156107585780601f1061072f57610100808354040283529160200191610758565b820191905f5260205f20905b81548152906001019060200180831161073b57829003601f168201915b505050505090505f610768610fc8565b90505f81510361077c5781925050506107be565b5f825111156107b0578082604051602001610798929190611efa565b604051602081830303815290604052925050506107be565b6107b984610fde565b925050505b919050565b60075f8154809291906107d590611f4a565b91905055505f60075490506107ea3382611044565b6107f48183611061565b61082060085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001610685565b7fd9dc24857f317ed9abbbb42e920ede0104231eb1d3d70236a74887ffaf1598688160405161084f9190611ade565b60405180910390a15050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109b357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806109c357506109c2826110bb565b5b9050919050565b5f806109d583611124565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a4757826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a3e9190611ade565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610a9d838383600161115d565b505050565b5f80610aad84611124565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610aee57610aed81848661131c565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b7957610b2d5f855f8061115d565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610bf857600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d1d57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d1491906119d3565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e099190611873565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610fc2578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610e59610a89565b8685856040518563ffffffff1660e01b8152600401610e7b9493929190611fe3565b6020604051808303815f875af1925050508015610eb657506040513d601f19601f82011682018060405250810190610eb39190612041565b60015b610f37573d805f8114610ee4576040519150601f19603f3d011682016040523d82523d5f602084013e610ee9565b606091505b505f815103610f2f57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f2691906119d3565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610fc057836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fb791906119d3565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b6060610fe9826109ca565b505f610ff3610fc8565b90505f8151116110115760405180602001604052805f81525061103c565b8061101b846113df565b60405160200161102c929190611efa565b6040516020818303038152906040525b915050919050565b61105d828260405180602001604052805f8152506114a9565b5050565b8060065f8481526020019081526020015f20908161107f9190612209565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516110af9190611ade565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061119557505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156112c7575f6111a4846109ca565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561120e57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611221575061121f818461085b565b155b1561126357826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161125a91906119d3565b60405180910390fd5b81156112c557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6113278383836114c4565b6113da575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361139b57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016113929190611ade565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016113d19291906122d8565b60405180910390fd5b505050565b60605f60016113ed84611584565b0190505f8167ffffffffffffffff81111561140b5761140a611b67565b5b6040519080825280601f01601f19166020018201604052801561143d5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561149e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611493576114926122ff565b5b0494505f850361144a575b819350505050919050565b6114b383836116d5565b6114bf5f848484610e16565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561157b57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061153c575061153b848461085b565b5b8061157a57508273ffffffffffffffffffffffffffffffffffffffff1661156283610a50565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106115e0577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816115d6576115d56122ff565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061161d576d04ee2d6d415b85acef81000000008381611613576116126122ff565b5b0492506020810190505b662386f26fc10000831061164c57662386f26fc100008381611642576116416122ff565b5b0492506010810190505b6305f5e1008310611675576305f5e100838161166b5761166a6122ff565b5b0492506008810190505b612710831061169a5761271083816116905761168f6122ff565b5b0492506004810190505b606483106116bd57606483816116b3576116b26122ff565b5b0492506002810190505b600a83106116cc576001810190505b80915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611745575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161173c91906119d3565b60405180910390fd5b5f61175183835f610aa2565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117c3575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016117ba91906119d3565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61180d816117d9565b8114611817575f80fd5b50565b5f8135905061182881611804565b92915050565b5f60208284031215611843576118426117d1565b5b5f6118508482850161181a565b91505092915050565b5f8115159050919050565b61186d81611859565b82525050565b5f6020820190506118865f830184611864565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156118c35780820151818401526020810190506118a8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6118e88261188c565b6118f28185611896565b93506119028185602086016118a6565b61190b816118ce565b840191505092915050565b5f6020820190508181035f83015261192e81846118de565b905092915050565b5f819050919050565b61194881611936565b8114611952575f80fd5b50565b5f813590506119638161193f565b92915050565b5f6020828403121561197e5761197d6117d1565b5b5f61198b84828501611955565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119bd82611994565b9050919050565b6119cd816119b3565b82525050565b5f6020820190506119e65f8301846119c4565b92915050565b6119f5816119b3565b81146119ff575f80fd5b50565b5f81359050611a10816119ec565b92915050565b5f8060408385031215611a2c57611a2b6117d1565b5b5f611a3985828601611a02565b9250506020611a4a85828601611955565b9150509250929050565b5f805f60608486031215611a6b57611a6a6117d1565b5b5f611a7886828701611a02565b9350506020611a8986828701611a02565b9250506040611a9a86828701611955565b9150509250925092565b5f60208284031215611ab957611ab86117d1565b5b5f611ac684828501611a02565b91505092915050565b611ad881611936565b82525050565b5f602082019050611af15f830184611acf565b92915050565b611b0081611859565b8114611b0a575f80fd5b50565b5f81359050611b1b81611af7565b92915050565b5f8060408385031215611b3757611b366117d1565b5b5f611b4485828601611a02565b9250506020611b5585828601611b0d565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b9d826118ce565b810181811067ffffffffffffffff82111715611bbc57611bbb611b67565b5b80604052505050565b5f611bce6117c8565b9050611bda8282611b94565b919050565b5f67ffffffffffffffff821115611bf957611bf8611b67565b5b611c02826118ce565b9050602081019050919050565b828183375f83830152505050565b5f611c2f611c2a84611bdf565b611bc5565b905082815260208101848484011115611c4b57611c4a611b63565b5b611c56848285611c0f565b509392505050565b5f82601f830112611c7257611c71611b5f565b5b8135611c82848260208601611c1d565b91505092915050565b5f805f8060808587031215611ca357611ca26117d1565b5b5f611cb087828801611a02565b9450506020611cc187828801611a02565b9350506040611cd287828801611955565b925050606085013567ffffffffffffffff811115611cf357611cf26117d5565b5b611cff87828801611c5e565b91505092959194509250565b5f67ffffffffffffffff821115611d2557611d24611b67565b5b611d2e826118ce565b9050602081019050919050565b5f611d4d611d4884611d0b565b611bc5565b905082815260208101848484011115611d6957611d68611b63565b5b611d74848285611c0f565b509392505050565b5f82601f830112611d9057611d8f611b5f565b5b8135611da0848260208601611d3b565b91505092915050565b5f60208284031215611dbe57611dbd6117d1565b5b5f82013567ffffffffffffffff811115611ddb57611dda6117d5565b5b611de784828501611d7c565b91505092915050565b5f8060408385031215611e0657611e056117d1565b5b5f611e1385828601611a02565b9250506020611e2485828601611a02565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e7257607f821691505b602082108103611e8557611e84611e2e565b5b50919050565b5f606082019050611e9e5f8301866119c4565b611eab6020830185611acf565b611eb860408301846119c4565b949350505050565b5f81905092915050565b5f611ed48261188c565b611ede8185611ec0565b9350611eee8185602086016118a6565b80840191505092915050565b5f611f058285611eca565b9150611f118284611eca565b91508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f5482611936565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f8657611f85611f1d565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f611fb582611f91565b611fbf8185611f9b565b9350611fcf8185602086016118a6565b611fd8816118ce565b840191505092915050565b5f608082019050611ff65f8301876119c4565b61200360208301866119c4565b6120106040830185611acf565b81810360608301526120228184611fab565b905095945050505050565b5f8151905061203b81611804565b92915050565b5f60208284031215612056576120556117d1565b5b5f6120638482850161202d565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120c87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261208d565b6120d2868361208d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61210d61210861210384611936565b6120ea565b611936565b9050919050565b5f819050919050565b612126836120f3565b61213a61213282612114565b848454612099565b825550505050565b5f90565b61214e612142565b61215981848461211d565b505050565b5b8181101561217c576121715f82612146565b60018101905061215f565b5050565b601f8211156121c1576121928161206c565b61219b8461207e565b810160208510156121aa578190505b6121be6121b68561207e565b83018261215e565b50505b505050565b5f82821c905092915050565b5f6121e15f19846008026121c6565b1980831691505092915050565b5f6121f983836121d2565b9150826002028217905092915050565b6122128261188c565b67ffffffffffffffff81111561222b5761222a611b67565b5b6122358254611e5b565b612240828285612180565b5f60209050601f831160018114612271575f841561225f578287015190505b61226985826121ee565b8655506122d0565b601f19841661227f8661206c565b5f5b828110156122a657848901518255600182019150602085019450602081019050612281565b868310156122c357848901516122bf601f8916826121d2565b8355505b6001600288020188555050505b505050505050565b5f6040820190506122eb5f8301856119c4565b6122f86020830184611acf565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220d2e6ffb43e1858a6ddfa48ae867cf9cbb7e49452b5022155f4eb02b7c827b7fe64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x285B CODESIZE SUB DUP1 PUSH3 0x285B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426F726564205065747320596163687420436C75620000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4250594300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0xB2 SWAP2 SWAP1 PUSH3 0x407 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC4 SWAP2 SWAP1 PUSH3 0x407 JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x4EB JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x13D DUP3 PUSH3 0x112 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x14F DUP2 PUSH3 0x131 JUMP JUMPDEST DUP2 EQ PUSH3 0x15A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x16D DUP2 PUSH3 0x144 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x18B JUMPI PUSH3 0x18A PUSH3 0x10E JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x19A DUP5 DUP3 DUP6 ADD PUSH3 0x15D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x21F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x235 JUMPI PUSH3 0x234 PUSH3 0x1DA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x299 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x25C JUMP JUMPDEST PUSH3 0x2A5 DUP7 DUP4 PUSH3 0x25C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2EF PUSH3 0x2E9 PUSH3 0x2E3 DUP5 PUSH3 0x2BD JUMP JUMPDEST PUSH3 0x2C6 JUMP JUMPDEST PUSH3 0x2BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x30A DUP4 PUSH3 0x2CF JUMP JUMPDEST PUSH3 0x322 PUSH3 0x319 DUP3 PUSH3 0x2F6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x268 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x338 PUSH3 0x32A JUMP JUMPDEST PUSH3 0x345 DUP2 DUP5 DUP5 PUSH3 0x2FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x36C JUMPI PUSH3 0x360 PUSH0 DUP3 PUSH3 0x32E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x34B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3BB JUMPI PUSH3 0x385 DUP2 PUSH3 0x23B JUMP JUMPDEST PUSH3 0x390 DUP5 PUSH3 0x24D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3A0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x3B8 PUSH3 0x3AF DUP6 PUSH3 0x24D JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x34A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3DD PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x3C0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3F7 DUP4 DUP4 PUSH3 0x3CC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x412 DUP3 PUSH3 0x1A3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x42E JUMPI PUSH3 0x42D PUSH3 0x1AD JUMP JUMPDEST JUMPDEST PUSH3 0x43A DUP3 SLOAD PUSH3 0x207 JUMP JUMPDEST PUSH3 0x447 DUP3 DUP3 DUP6 PUSH3 0x370 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x47D JUMPI PUSH0 DUP5 ISZERO PUSH3 0x468 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x474 DUP6 DUP3 PUSH3 0x3EA JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4E3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x48D DUP7 PUSH3 0x23B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4B6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x48F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4D6 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4D2 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x3CC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2362 DUP1 PUSH3 0x4F9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C0 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1BE JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x349 JUMPI POP PUSH2 0x348 DUP3 PUSH2 0x8E9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x35E SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3E9 DUP3 PUSH2 0x9CA JUMP JUMPDEST POP PUSH2 0x3F3 DUP3 PUSH2 0xA50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40C DUP3 DUP3 PUSH2 0x407 PUSH2 0xA89 JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x480 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x493 DUP4 DUP4 PUSH2 0x48E PUSH2 0xA89 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x509 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x529 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x69B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x538 DUP3 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x604 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x630 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x652 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x65E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x697 PUSH2 0x690 PUSH2 0xA89 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xCAD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6A6 DUP5 DUP5 DUP5 PUSH2 0x410 JUMP JUMPDEST PUSH2 0x6B2 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE16 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6C3 DUP3 PUSH2 0x9CA JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x6E1 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x70D SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x758 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x72F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x758 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x73B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x768 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x77C JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x7B0 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x798 SWAP3 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x7B9 DUP5 PUSH2 0xFDE JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7D5 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x7EA CALLER DUP3 PUSH2 0x1044 JUMP JUMPDEST PUSH2 0x7F4 DUP2 DUP4 PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x820 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH2 0x685 JUMP JUMPDEST PUSH32 0xD9DC24857F317ED9ABBBB42E920EDE0104231EB1D3D70236A74887FFAF159868 DUP2 PUSH1 0x40 MLOAD PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9B3 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x9C3 JUMPI POP PUSH2 0x9C2 DUP3 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9D5 DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA47 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA9D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x115D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAAD DUP5 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAEE JUMPI PUSH2 0xAED DUP2 DUP5 DUP7 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB79 JUMPI PUSH2 0xB2D PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF8 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xFC2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xE59 PUSH2 0xA89 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEB6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB3 SWAP2 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF37 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xF2F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xFC0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFE9 DUP3 PUSH2 0x9CA JUMP JUMPDEST POP PUSH0 PUSH2 0xFF3 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1011 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x103C JUMP JUMPDEST DUP1 PUSH2 0x101B DUP5 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x102C SWAP3 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x14A9 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x2209 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1195 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x12C7 JUMPI PUSH0 PUSH2 0x11A4 DUP5 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x120E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1221 JUMPI POP PUSH2 0x121F DUP2 DUP5 PUSH2 0x85B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1263 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125A SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x12C5 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1327 DUP4 DUP4 DUP4 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x13DA JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x139B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1392 SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D1 SWAP3 SWAP2 SWAP1 PUSH2 0x22D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x13ED DUP5 PUSH2 0x1584 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x140B JUMPI PUSH2 0x140A PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x143D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x149E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1493 JUMPI PUSH2 0x1492 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x144A JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B3 DUP4 DUP4 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x14BF PUSH0 DUP5 DUP5 DUP5 PUSH2 0xE16 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x157B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x153C JUMPI POP PUSH2 0x153B DUP5 DUP5 PUSH2 0x85B JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x157A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1562 DUP4 PUSH2 0xA50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x15E0 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x15D6 JUMPI PUSH2 0x15D5 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x161D JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1613 JUMPI PUSH2 0x1612 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x164C JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1642 JUMPI PUSH2 0x1641 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1675 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x166B JUMPI PUSH2 0x166A PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x169A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1690 JUMPI PUSH2 0x168F PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x16BD JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x16B3 JUMPI PUSH2 0x16B2 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x16CC JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1745 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173C SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1751 DUP4 DUP4 PUSH0 PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17C3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17BA SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180D DUP2 PUSH2 0x17D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1817 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1828 DUP2 PUSH2 0x1804 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1843 JUMPI PUSH2 0x1842 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1850 DUP5 DUP3 DUP6 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186D DUP2 PUSH2 0x1859 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1886 PUSH0 DUP4 ADD DUP5 PUSH2 0x1864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18C3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18A8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18E8 DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH2 0x18F2 DUP2 DUP6 PUSH2 0x1896 JUMP JUMPDEST SWAP4 POP PUSH2 0x1902 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x190B DUP2 PUSH2 0x18CE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x192E DUP2 DUP5 PUSH2 0x18DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1948 DUP2 PUSH2 0x1936 JUMP JUMPDEST DUP2 EQ PUSH2 0x1952 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1963 DUP2 PUSH2 0x193F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197E JUMPI PUSH2 0x197D PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198B DUP5 DUP3 DUP6 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19BD DUP3 PUSH2 0x1994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19F5 DUP2 PUSH2 0x19B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x19FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A10 DUP2 PUSH2 0x19EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2C JUMPI PUSH2 0x1A2B PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A39 DUP6 DUP3 DUP7 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A4A DUP6 DUP3 DUP7 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A6B JUMPI PUSH2 0x1A6A PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A78 DUP7 DUP3 DUP8 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A89 DUP7 DUP3 DUP8 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A9A DUP7 DUP3 DUP8 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB8 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC6 DUP5 DUP3 DUP6 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD8 DUP2 PUSH2 0x1936 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ACF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B00 DUP2 PUSH2 0x1859 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B1B DUP2 PUSH2 0x1AF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B37 JUMPI PUSH2 0x1B36 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B44 DUP6 DUP3 DUP7 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B55 DUP6 DUP3 DUP7 ADD PUSH2 0x1B0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B9D DUP3 PUSH2 0x18CE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BBC JUMPI PUSH2 0x1BBB PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCE PUSH2 0x17C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BDA DUP3 DUP3 PUSH2 0x1B94 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH2 0x1C02 DUP3 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2F PUSH2 0x1C2A DUP5 PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C4B JUMPI PUSH2 0x1C4A PUSH2 0x1B63 JUMP JUMPDEST JUMPDEST PUSH2 0x1C56 DUP5 DUP3 DUP6 PUSH2 0x1C0F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C72 JUMPI PUSH2 0x1C71 PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C82 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA2 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB0 DUP8 DUP3 DUP9 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1CC1 DUP8 DUP3 DUP9 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1CD2 DUP8 DUP3 DUP9 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF3 JUMPI PUSH2 0x1CF2 PUSH2 0x17D5 JUMP JUMPDEST JUMPDEST PUSH2 0x1CFF DUP8 DUP3 DUP9 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D25 JUMPI PUSH2 0x1D24 PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH2 0x1D2E DUP3 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4D PUSH2 0x1D48 DUP5 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D69 JUMPI PUSH2 0x1D68 PUSH2 0x1B63 JUMP JUMPDEST JUMPDEST PUSH2 0x1D74 DUP5 DUP3 DUP6 PUSH2 0x1C0F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D90 JUMPI PUSH2 0x1D8F PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DA0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DBE JUMPI PUSH2 0x1DBD PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDB JUMPI PUSH2 0x1DDA PUSH2 0x17D5 JUMP JUMPDEST JUMPDEST PUSH2 0x1DE7 DUP5 DUP3 DUP6 ADD PUSH2 0x1D7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E06 JUMPI PUSH2 0x1E05 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E13 DUP6 DUP3 DUP7 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E24 DUP6 DUP3 DUP7 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E72 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E85 JUMPI PUSH2 0x1E84 PUSH2 0x1E2E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E9E PUSH0 DUP4 ADD DUP7 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1EAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0x1EB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED4 DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH2 0x1EDE DUP2 DUP6 PUSH2 0x1EC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EEE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F05 DUP3 DUP6 PUSH2 0x1ECA JUMP JUMPDEST SWAP2 POP PUSH2 0x1F11 DUP3 DUP5 PUSH2 0x1ECA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F54 DUP3 PUSH2 0x1936 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1F86 JUMPI PUSH2 0x1F85 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB5 DUP3 PUSH2 0x1F91 JUMP JUMPDEST PUSH2 0x1FBF DUP2 DUP6 PUSH2 0x1F9B JUMP JUMPDEST SWAP4 POP PUSH2 0x1FCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x1FD8 DUP2 PUSH2 0x18CE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FF6 PUSH0 DUP4 ADD DUP8 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x2003 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x2010 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1ACF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2022 DUP2 DUP5 PUSH2 0x1FAB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x203B DUP2 PUSH2 0x1804 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2056 JUMPI PUSH2 0x2055 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2063 DUP5 DUP3 DUP6 ADD PUSH2 0x202D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x20C8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x208D JUMP JUMPDEST PUSH2 0x20D2 DUP7 DUP4 PUSH2 0x208D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x210D PUSH2 0x2108 PUSH2 0x2103 DUP5 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x1936 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2126 DUP4 PUSH2 0x20F3 JUMP JUMPDEST PUSH2 0x213A PUSH2 0x2132 DUP3 PUSH2 0x2114 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2099 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x214E PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x2159 DUP2 DUP5 DUP5 PUSH2 0x211D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x217C JUMPI PUSH2 0x2171 PUSH0 DUP3 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x215F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x21C1 JUMPI PUSH2 0x2192 DUP2 PUSH2 0x206C JUMP JUMPDEST PUSH2 0x219B DUP5 PUSH2 0x207E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x21AA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x21BE PUSH2 0x21B6 DUP6 PUSH2 0x207E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x215E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21E1 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x21C6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21F9 DUP4 DUP4 PUSH2 0x21D2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2212 DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x222B JUMPI PUSH2 0x222A PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH2 0x2235 DUP3 SLOAD PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x2240 DUP3 DUP3 DUP6 PUSH2 0x2180 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2271 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x225F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2269 DUP6 DUP3 PUSH2 0x21EE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x227F DUP7 PUSH2 0x206C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22A6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2281 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x22C3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x22BF PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x21D2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22EB PUSH0 DUP4 ADD DUP6 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x22F8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ACF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xE6 SELFDESTRUCT 0xB4 RETURNDATACOPY XOR PC 0xA6 0xDD STATICCALL BASEFEE 0xAE DUP7 PUSH29 0xF9CBB7E49452B5022155F4EB02B7C827B7FE64736F6C63430008160033 ",
							"sourceMap": "202:559:15:-:0;;;342:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1419:116:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:5;1486;:13;;;;;;:::i;:::-;;1520:7;1510;:17;;;;;;:::i;:::-;;1419:116;;453:20:15::1;431:19;;:42;;;;;;;;;;;;;;;;;;342:137:::0;202:559;;88:117:16;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;202:559:15:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1046": {
									"entryPoint": 4445,
									"id": 1046,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_980": {
									"entryPoint": 2704,
									"id": 980,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_373": {
									"entryPoint": 4040,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_628": {
									"entryPoint": 4892,
									"id": 628,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1176": {
									"entryPoint": 3606,
									"id": 1176,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_555": {
									"entryPoint": 2640,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_591": {
									"entryPoint": 5316,
									"id": 591,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_784": {
									"entryPoint": 5845,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1478": {
									"entryPoint": 2697,
									"id": 1478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_542": {
									"entryPoint": 4388,
									"id": 542,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1112": {
									"entryPoint": 2506,
									"id": 1112,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_799": {
									"entryPoint": 4164,
									"id": 799,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_825": {
									"entryPoint": 5289,
									"id": 825,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1083": {
									"entryPoint": 3245,
									"id": 1083,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1437": {
									"entryPoint": 4193,
									"id": 1437,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_734": {
									"entryPoint": 2722,
									"id": 734,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_389": {
									"entryPoint": 1018,
									"id": 389,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_297": {
									"entryPoint": 1343,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_406": {
									"entryPoint": 991,
									"id": 406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_439": {
									"entryPoint": 2139,
									"id": 439,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2653": {
									"entryPoint": 5508,
									"id": 2653,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_2999": {
									"entryPoint": 1987,
									"id": 2999,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_319": {
									"entryPoint": 848,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_310": {
									"entryPoint": 1326,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_503": {
									"entryPoint": 1295,
									"id": 503,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_529": {
									"entryPoint": 1691,
									"id": 529,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_422": {
									"entryPoint": 1669,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1361": {
									"entryPoint": 752,
									"id": 1361,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1766": {
									"entryPoint": 4283,
									"id": 1766,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_269": {
									"entryPoint": 2281,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_328": {
									"entryPoint": 1525,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1556": {
									"entryPoint": 5087,
									"id": 1556,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1418": {
									"entryPoint": 1720,
									"id": 1418,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_364": {
									"entryPoint": 4062,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_485": {
									"entryPoint": 1040,
									"id": 485,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7483,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 7593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7930,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8163,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8920,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8576,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7183,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6310,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7965,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7007,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7011,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6101,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8345,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8477,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21134:16",
										"nodeType": "YulBlock",
										"src": "0:21134:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "378:105:16",
													"nodeType": "YulBlock",
													"src": "378:105:16",
													"statements": [
														{
															"nativeSrc": "388:89:16",
															"nodeType": "YulAssignment",
															"src": "388:89:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:16",
																		"nodeType": "YulLiteral",
																		"src": "410:66:16",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:16"
																},
																"nativeSrc": "399:78:16",
																"nodeType": "YulFunctionCall",
																"src": "399:78:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:16",
														"nodeType": "YulTypedName",
														"src": "360:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:16",
														"nodeType": "YulTypedName",
														"src": "370:7:16",
														"type": ""
													}
												],
												"src": "334:149:16"
											},
											{
												"body": {
													"nativeSrc": "531:78:16",
													"nodeType": "YulBlock",
													"src": "531:78:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:16",
																"nodeType": "YulBlock",
																"src": "587:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:16",
																					"nodeType": "YulLiteral",
																					"src": "596:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:16",
																					"nodeType": "YulLiteral",
																					"src": "599:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:16"
																			},
																			"nativeSrc": "589:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:16"
																		},
																		"nativeSrc": "589:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:16",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:16"
																				},
																				"nativeSrc": "561:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:16"
																		},
																		"nativeSrc": "551:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:16"
																},
																"nativeSrc": "544:42:16",
																"nodeType": "YulFunctionCall",
																"src": "544:42:16"
															},
															"nativeSrc": "541:62:16",
															"nodeType": "YulIf",
															"src": "541:62:16"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:16",
														"nodeType": "YulTypedName",
														"src": "524:5:16",
														"type": ""
													}
												],
												"src": "489:120:16"
											},
											{
												"body": {
													"nativeSrc": "666:86:16",
													"nodeType": "YulBlock",
													"src": "666:86:16",
													"statements": [
														{
															"nativeSrc": "676:29:16",
															"nodeType": "YulAssignment",
															"src": "676:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:16"
																},
																"nativeSrc": "685:20:16",
																"nodeType": "YulFunctionCall",
																"src": "685:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:16"
																},
																"nativeSrc": "714:32:16",
																"nodeType": "YulFunctionCall",
																"src": "714:32:16"
															},
															"nativeSrc": "714:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:16",
														"nodeType": "YulTypedName",
														"src": "644:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:16",
														"nodeType": "YulTypedName",
														"src": "652:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:16",
														"nodeType": "YulTypedName",
														"src": "660:5:16",
														"type": ""
													}
												],
												"src": "615:137:16"
											},
											{
												"body": {
													"nativeSrc": "823:262:16",
													"nodeType": "YulBlock",
													"src": "823:262:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:16",
																"nodeType": "YulBlock",
																"src": "869:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:16"
																			},
																			"nativeSrc": "871:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:16"
																		},
																		"nativeSrc": "871:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:16"
																		},
																		"nativeSrc": "840:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:16",
																		"nodeType": "YulLiteral",
																		"src": "865:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:16"
																},
																"nativeSrc": "836:32:16",
																"nodeType": "YulFunctionCall",
																"src": "836:32:16"
															},
															"nativeSrc": "833:119:16",
															"nodeType": "YulIf",
															"src": "833:119:16"
														},
														{
															"nativeSrc": "962:116:16",
															"nodeType": "YulBlock",
															"src": "962:116:16",
															"statements": [
																{
																	"nativeSrc": "977:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:16",
																		"nodeType": "YulLiteral",
																		"src": "991:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:16",
																			"nodeType": "YulTypedName",
																			"src": "981:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:16",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:16"
																				},
																				"nativeSrc": "1036:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:16",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:16"
																		},
																		"nativeSrc": "1016:52:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:16",
														"nodeType": "YulTypedName",
														"src": "793:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:16",
														"nodeType": "YulTypedName",
														"src": "804:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:16",
														"nodeType": "YulTypedName",
														"src": "816:6:16",
														"type": ""
													}
												],
												"src": "758:327:16"
											},
											{
												"body": {
													"nativeSrc": "1133:48:16",
													"nodeType": "YulBlock",
													"src": "1133:48:16",
													"statements": [
														{
															"nativeSrc": "1143:32:16",
															"nodeType": "YulAssignment",
															"src": "1143:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:16"
																		},
																		"nativeSrc": "1161:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:16"
																},
																"nativeSrc": "1154:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:16",
														"nodeType": "YulTypedName",
														"src": "1115:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:16",
														"nodeType": "YulTypedName",
														"src": "1125:7:16",
														"type": ""
													}
												],
												"src": "1091:90:16"
											},
											{
												"body": {
													"nativeSrc": "1246:50:16",
													"nodeType": "YulBlock",
													"src": "1246:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:16"
																		},
																		"nativeSrc": "1268:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:16"
																},
																"nativeSrc": "1256:34:16",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:16"
															},
															"nativeSrc": "1256:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:16",
														"nodeType": "YulTypedName",
														"src": "1234:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:16",
														"nodeType": "YulTypedName",
														"src": "1241:3:16",
														"type": ""
													}
												],
												"src": "1187:109:16"
											},
											{
												"body": {
													"nativeSrc": "1394:118:16",
													"nodeType": "YulBlock",
													"src": "1394:118:16",
													"statements": [
														{
															"nativeSrc": "1404:26:16",
															"nodeType": "YulAssignment",
															"src": "1404:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:16"
																},
																"nativeSrc": "1412:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:16"
																		},
																		"nativeSrc": "1487:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:16"
																},
																"nativeSrc": "1440:65:16",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:16"
															},
															"nativeSrc": "1440:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:16",
														"nodeType": "YulTypedName",
														"src": "1366:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:16",
														"nodeType": "YulTypedName",
														"src": "1378:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:16",
														"nodeType": "YulTypedName",
														"src": "1389:4:16",
														"type": ""
													}
												],
												"src": "1302:210:16"
											},
											{
												"body": {
													"nativeSrc": "1577:40:16",
													"nodeType": "YulBlock",
													"src": "1577:40:16",
													"statements": [
														{
															"nativeSrc": "1588:22:16",
															"nodeType": "YulAssignment",
															"src": "1588:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:16"
																},
																"nativeSrc": "1598:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:16",
														"nodeType": "YulTypedName",
														"src": "1560:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:16",
														"nodeType": "YulTypedName",
														"src": "1570:6:16",
														"type": ""
													}
												],
												"src": "1518:99:16"
											},
											{
												"body": {
													"nativeSrc": "1719:73:16",
													"nodeType": "YulBlock",
													"src": "1719:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:16"
																},
																"nativeSrc": "1729:19:16",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:16"
															},
															"nativeSrc": "1729:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:16"
														},
														{
															"nativeSrc": "1757:29:16",
															"nodeType": "YulAssignment",
															"src": "1757:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:16"
																},
																"nativeSrc": "1772:14:16",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:16",
														"nodeType": "YulTypedName",
														"src": "1691:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:16",
														"nodeType": "YulTypedName",
														"src": "1696:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:16",
														"nodeType": "YulTypedName",
														"src": "1707:11:16",
														"type": ""
													}
												],
												"src": "1623:169:16"
											},
											{
												"body": {
													"nativeSrc": "1860:184:16",
													"nodeType": "YulBlock",
													"src": "1860:184:16",
													"statements": [
														{
															"nativeSrc": "1870:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:16",
																"nodeType": "YulLiteral",
																"src": "1879:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:16",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:16",
																"nodeType": "YulBlock",
																"src": "1939:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:16"
																					},
																					"nativeSrc": "1960:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:16"
																							},
																							"nativeSrc": "1979:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:16"
																					},
																					"nativeSrc": "1973:18:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:16"
																			},
																			"nativeSrc": "1953:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:16"
																		},
																		"nativeSrc": "1953:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:16"
																},
																"nativeSrc": "1897:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:16"
															},
															"nativeSrc": "1889:113:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:16",
																"nodeType": "YulBlock",
																"src": "1911:19:16",
																"statements": [
																	{
																		"nativeSrc": "1913:15:16",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:16",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:16"
																			},
																			"nativeSrc": "1918:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:16",
																"nodeType": "YulBlock",
																"src": "1893:3:16",
																"statements": []
															},
															"src": "1889:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:16"
																		},
																		"nativeSrc": "2018:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:16"
																},
																"nativeSrc": "2011:27:16",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:16"
															},
															"nativeSrc": "2011:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:16",
														"nodeType": "YulTypedName",
														"src": "1842:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:16",
														"nodeType": "YulTypedName",
														"src": "1847:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:16",
														"nodeType": "YulTypedName",
														"src": "1852:6:16",
														"type": ""
													}
												],
												"src": "1798:246:16"
											},
											{
												"body": {
													"nativeSrc": "2098:54:16",
													"nodeType": "YulBlock",
													"src": "2098:54:16",
													"statements": [
														{
															"nativeSrc": "2108:38:16",
															"nodeType": "YulAssignment",
															"src": "2108:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:16"
																		},
																		"nativeSrc": "2122:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:16"
																		},
																		"nativeSrc": "2138:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:16"
																},
																"nativeSrc": "2118:28:16",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:16",
														"nodeType": "YulTypedName",
														"src": "2081:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:16",
														"nodeType": "YulTypedName",
														"src": "2091:6:16",
														"type": ""
													}
												],
												"src": "2050:102:16"
											},
											{
												"body": {
													"nativeSrc": "2250:285:16",
													"nodeType": "YulBlock",
													"src": "2250:285:16",
													"statements": [
														{
															"nativeSrc": "2260:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:16"
																},
																"nativeSrc": "2274:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:16",
															"nodeType": "YulAssignment",
															"src": "2322:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:16"
																},
																"nativeSrc": "2329:71:16",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:16",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:16"
																		},
																		"nativeSrc": "2444:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:16"
																},
																"nativeSrc": "2409:65:16",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:16"
															},
															"nativeSrc": "2409:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:16"
														},
														{
															"nativeSrc": "2483:46:16",
															"nodeType": "YulAssignment",
															"src": "2483:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:16"
																		},
																		"nativeSrc": "2499:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:16"
																},
																"nativeSrc": "2490:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:16",
														"nodeType": "YulTypedName",
														"src": "2231:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:16",
														"nodeType": "YulTypedName",
														"src": "2238:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:16",
														"nodeType": "YulTypedName",
														"src": "2246:3:16",
														"type": ""
													}
												],
												"src": "2158:377:16"
											},
											{
												"body": {
													"nativeSrc": "2659:195:16",
													"nodeType": "YulBlock",
													"src": "2659:195:16",
													"statements": [
														{
															"nativeSrc": "2669:26:16",
															"nodeType": "YulAssignment",
															"src": "2669:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:16"
																},
																"nativeSrc": "2677:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:16"
																		},
																		"nativeSrc": "2712:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:16"
																		},
																		"nativeSrc": "2731:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:16"
																},
																"nativeSrc": "2705:47:16",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:16"
															},
															"nativeSrc": "2705:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:16"
														},
														{
															"nativeSrc": "2761:86:16",
															"nodeType": "YulAssignment",
															"src": "2761:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:16"
																},
																"nativeSrc": "2769:78:16",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:16",
														"nodeType": "YulTypedName",
														"src": "2631:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:16",
														"nodeType": "YulTypedName",
														"src": "2643:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:16",
														"nodeType": "YulTypedName",
														"src": "2654:4:16",
														"type": ""
													}
												],
												"src": "2541:313:16"
											},
											{
												"body": {
													"nativeSrc": "2905:32:16",
													"nodeType": "YulBlock",
													"src": "2905:32:16",
													"statements": [
														{
															"nativeSrc": "2915:16:16",
															"nodeType": "YulAssignment",
															"src": "2915:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:16",
																"nodeType": "YulIdentifier",
																"src": "2926:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:16",
														"nodeType": "YulTypedName",
														"src": "2887:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:16",
														"nodeType": "YulTypedName",
														"src": "2897:7:16",
														"type": ""
													}
												],
												"src": "2860:77:16"
											},
											{
												"body": {
													"nativeSrc": "2986:79:16",
													"nodeType": "YulBlock",
													"src": "2986:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:16",
																"nodeType": "YulBlock",
																"src": "3043:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:16"
																			},
																			"nativeSrc": "3045:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:16"
																		},
																		"nativeSrc": "3045:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:16"
																				},
																				"nativeSrc": "3016:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:16"
																		},
																		"nativeSrc": "3006:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:16"
																},
																"nativeSrc": "2999:43:16",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:16"
															},
															"nativeSrc": "2996:63:16",
															"nodeType": "YulIf",
															"src": "2996:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:16",
														"nodeType": "YulTypedName",
														"src": "2979:5:16",
														"type": ""
													}
												],
												"src": "2943:122:16"
											},
											{
												"body": {
													"nativeSrc": "3123:87:16",
													"nodeType": "YulBlock",
													"src": "3123:87:16",
													"statements": [
														{
															"nativeSrc": "3133:29:16",
															"nodeType": "YulAssignment",
															"src": "3133:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:16"
																},
																"nativeSrc": "3142:20:16",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:16"
																},
																"nativeSrc": "3171:33:16",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:16"
															},
															"nativeSrc": "3171:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:16",
														"nodeType": "YulTypedName",
														"src": "3101:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:16",
														"nodeType": "YulTypedName",
														"src": "3109:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:16",
														"nodeType": "YulTypedName",
														"src": "3117:5:16",
														"type": ""
													}
												],
												"src": "3071:139:16"
											},
											{
												"body": {
													"nativeSrc": "3282:263:16",
													"nodeType": "YulBlock",
													"src": "3282:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:16",
																"nodeType": "YulBlock",
																"src": "3328:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:16"
																			},
																			"nativeSrc": "3330:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:16"
																		},
																		"nativeSrc": "3330:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:16"
																		},
																		"nativeSrc": "3299:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:16"
																},
																"nativeSrc": "3295:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:16"
															},
															"nativeSrc": "3292:119:16",
															"nodeType": "YulIf",
															"src": "3292:119:16"
														},
														{
															"nativeSrc": "3421:117:16",
															"nodeType": "YulBlock",
															"src": "3421:117:16",
															"statements": [
																{
																	"nativeSrc": "3436:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:16"
																				},
																				"nativeSrc": "3496:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:16"
																		},
																		"nativeSrc": "3475:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:16",
														"nodeType": "YulTypedName",
														"src": "3252:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:16",
														"nodeType": "YulTypedName",
														"src": "3263:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:16",
														"nodeType": "YulTypedName",
														"src": "3275:6:16",
														"type": ""
													}
												],
												"src": "3216:329:16"
											},
											{
												"body": {
													"nativeSrc": "3596:81:16",
													"nodeType": "YulBlock",
													"src": "3596:81:16",
													"statements": [
														{
															"nativeSrc": "3606:65:16",
															"nodeType": "YulAssignment",
															"src": "3606:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:16",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:16"
																},
																"nativeSrc": "3617:54:16",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:16",
														"nodeType": "YulTypedName",
														"src": "3578:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:16",
														"nodeType": "YulTypedName",
														"src": "3588:7:16",
														"type": ""
													}
												],
												"src": "3551:126:16"
											},
											{
												"body": {
													"nativeSrc": "3728:51:16",
													"nodeType": "YulBlock",
													"src": "3728:51:16",
													"statements": [
														{
															"nativeSrc": "3738:35:16",
															"nodeType": "YulAssignment",
															"src": "3738:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:16"
																},
																"nativeSrc": "3749:24:16",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:16",
														"nodeType": "YulTypedName",
														"src": "3710:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:16",
														"nodeType": "YulTypedName",
														"src": "3720:7:16",
														"type": ""
													}
												],
												"src": "3683:96:16"
											},
											{
												"body": {
													"nativeSrc": "3850:53:16",
													"nodeType": "YulBlock",
													"src": "3850:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:16"
																		},
																		"nativeSrc": "3872:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:16"
																},
																"nativeSrc": "3860:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:16"
															},
															"nativeSrc": "3860:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:16",
														"nodeType": "YulTypedName",
														"src": "3838:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:16",
														"nodeType": "YulTypedName",
														"src": "3845:3:16",
														"type": ""
													}
												],
												"src": "3785:118:16"
											},
											{
												"body": {
													"nativeSrc": "4007:124:16",
													"nodeType": "YulBlock",
													"src": "4007:124:16",
													"statements": [
														{
															"nativeSrc": "4017:26:16",
															"nodeType": "YulAssignment",
															"src": "4017:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:16"
																},
																"nativeSrc": "4025:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:16"
																		},
																		"nativeSrc": "4106:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:16"
																},
																"nativeSrc": "4053:71:16",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:16"
															},
															"nativeSrc": "4053:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:16",
														"nodeType": "YulTypedName",
														"src": "3979:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:16",
														"nodeType": "YulTypedName",
														"src": "3991:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:16",
														"nodeType": "YulTypedName",
														"src": "4002:4:16",
														"type": ""
													}
												],
												"src": "3909:222:16"
											},
											{
												"body": {
													"nativeSrc": "4180:79:16",
													"nodeType": "YulBlock",
													"src": "4180:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:16",
																"nodeType": "YulBlock",
																"src": "4237:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:16"
																			},
																			"nativeSrc": "4239:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:16"
																		},
																		"nativeSrc": "4239:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:16"
																				},
																				"nativeSrc": "4210:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:16"
																		},
																		"nativeSrc": "4200:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:16"
																},
																"nativeSrc": "4193:43:16",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:16"
															},
															"nativeSrc": "4190:63:16",
															"nodeType": "YulIf",
															"src": "4190:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:16",
														"nodeType": "YulTypedName",
														"src": "4173:5:16",
														"type": ""
													}
												],
												"src": "4137:122:16"
											},
											{
												"body": {
													"nativeSrc": "4317:87:16",
													"nodeType": "YulBlock",
													"src": "4317:87:16",
													"statements": [
														{
															"nativeSrc": "4327:29:16",
															"nodeType": "YulAssignment",
															"src": "4327:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:16"
																},
																"nativeSrc": "4336:20:16",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:16"
																},
																"nativeSrc": "4365:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:16"
															},
															"nativeSrc": "4365:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:16",
														"nodeType": "YulTypedName",
														"src": "4295:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:16",
														"nodeType": "YulTypedName",
														"src": "4303:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:16",
														"nodeType": "YulTypedName",
														"src": "4311:5:16",
														"type": ""
													}
												],
												"src": "4265:139:16"
											},
											{
												"body": {
													"nativeSrc": "4493:391:16",
													"nodeType": "YulBlock",
													"src": "4493:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:16",
																"nodeType": "YulBlock",
																"src": "4539:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:16"
																			},
																			"nativeSrc": "4541:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:16"
																		},
																		"nativeSrc": "4541:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:16"
																		},
																		"nativeSrc": "4510:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:16"
																},
																"nativeSrc": "4506:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:16"
															},
															"nativeSrc": "4503:119:16",
															"nodeType": "YulIf",
															"src": "4503:119:16"
														},
														{
															"nativeSrc": "4632:117:16",
															"nodeType": "YulBlock",
															"src": "4632:117:16",
															"statements": [
																{
																	"nativeSrc": "4647:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:16"
																				},
																				"nativeSrc": "4707:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:16"
																		},
																		"nativeSrc": "4686:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:16",
															"nodeType": "YulBlock",
															"src": "4759:118:16",
															"statements": [
																{
																	"nativeSrc": "4774:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:16"
																				},
																				"nativeSrc": "4835:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:16"
																		},
																		"nativeSrc": "4814:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:16",
														"nodeType": "YulTypedName",
														"src": "4455:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:16",
														"nodeType": "YulTypedName",
														"src": "4466:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:16",
														"nodeType": "YulTypedName",
														"src": "4478:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:16",
														"nodeType": "YulTypedName",
														"src": "4486:6:16",
														"type": ""
													}
												],
												"src": "4410:474:16"
											},
											{
												"body": {
													"nativeSrc": "4990:519:16",
													"nodeType": "YulBlock",
													"src": "4990:519:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:16",
																"nodeType": "YulBlock",
																"src": "5036:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:16"
																			},
																			"nativeSrc": "5038:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:16"
																		},
																		"nativeSrc": "5038:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:16"
																		},
																		"nativeSrc": "5007:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:16"
																},
																"nativeSrc": "5003:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:16"
															},
															"nativeSrc": "5000:119:16",
															"nodeType": "YulIf",
															"src": "5000:119:16"
														},
														{
															"nativeSrc": "5129:117:16",
															"nodeType": "YulBlock",
															"src": "5129:117:16",
															"statements": [
																{
																	"nativeSrc": "5144:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:16"
																				},
																				"nativeSrc": "5204:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:16"
																		},
																		"nativeSrc": "5183:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:16",
															"nodeType": "YulBlock",
															"src": "5256:118:16",
															"statements": [
																{
																	"nativeSrc": "5271:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:16"
																				},
																				"nativeSrc": "5332:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:16"
																		},
																		"nativeSrc": "5311:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:16",
															"nodeType": "YulBlock",
															"src": "5384:118:16",
															"statements": [
																{
																	"nativeSrc": "5399:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:16"
																				},
																				"nativeSrc": "5460:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:16"
																		},
																		"nativeSrc": "5439:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:16",
														"nodeType": "YulTypedName",
														"src": "4944:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:16",
														"nodeType": "YulTypedName",
														"src": "4955:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:16",
														"nodeType": "YulTypedName",
														"src": "4967:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:16",
														"nodeType": "YulTypedName",
														"src": "4975:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:16",
														"nodeType": "YulTypedName",
														"src": "4983:6:16",
														"type": ""
													}
												],
												"src": "4890:619:16"
											},
											{
												"body": {
													"nativeSrc": "5581:263:16",
													"nodeType": "YulBlock",
													"src": "5581:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:83:16",
																"nodeType": "YulBlock",
																"src": "5627:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5629:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:16"
																			},
																			"nativeSrc": "5629:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:16"
																		},
																		"nativeSrc": "5629:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5602:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5598:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:16"
																		},
																		"nativeSrc": "5598:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5594:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:16"
																},
																"nativeSrc": "5594:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5594:32:16"
															},
															"nativeSrc": "5591:119:16",
															"nodeType": "YulIf",
															"src": "5591:119:16"
														},
														{
															"nativeSrc": "5720:117:16",
															"nodeType": "YulBlock",
															"src": "5720:117:16",
															"statements": [
																{
																	"nativeSrc": "5735:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:16"
																				},
																				"nativeSrc": "5795:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5774:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:16"
																		},
																		"nativeSrc": "5774:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5764:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5515:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:16",
														"nodeType": "YulTypedName",
														"src": "5551:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:16",
														"nodeType": "YulTypedName",
														"src": "5562:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:16",
														"nodeType": "YulTypedName",
														"src": "5574:6:16",
														"type": ""
													}
												],
												"src": "5515:329:16"
											},
											{
												"body": {
													"nativeSrc": "5915:53:16",
													"nodeType": "YulBlock",
													"src": "5915:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:16"
																		},
																		"nativeSrc": "5937:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:16"
																},
																"nativeSrc": "5925:37:16",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:16"
															},
															"nativeSrc": "5925:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:16",
														"nodeType": "YulTypedName",
														"src": "5903:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:16",
														"nodeType": "YulTypedName",
														"src": "5910:3:16",
														"type": ""
													}
												],
												"src": "5850:118:16"
											},
											{
												"body": {
													"nativeSrc": "6072:124:16",
													"nodeType": "YulBlock",
													"src": "6072:124:16",
													"statements": [
														{
															"nativeSrc": "6082:26:16",
															"nodeType": "YulAssignment",
															"src": "6082:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:16"
																},
																"nativeSrc": "6090:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:16"
																		},
																		"nativeSrc": "6171:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:16"
																},
																"nativeSrc": "6118:71:16",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:16"
															},
															"nativeSrc": "6118:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:16",
														"nodeType": "YulTypedName",
														"src": "6044:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:16",
														"nodeType": "YulTypedName",
														"src": "6056:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:16",
														"nodeType": "YulTypedName",
														"src": "6067:4:16",
														"type": ""
													}
												],
												"src": "5974:222:16"
											},
											{
												"body": {
													"nativeSrc": "6242:76:16",
													"nodeType": "YulBlock",
													"src": "6242:76:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6296:16:16",
																"nodeType": "YulBlock",
																"src": "6296:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6305:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6298:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:16"
																			},
																			"nativeSrc": "6298:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:16"
																		},
																		"nativeSrc": "6298:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6265:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6287:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6272:14:16",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:16"
																				},
																				"nativeSrc": "6272:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6262:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:16"
																		},
																		"nativeSrc": "6262:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6255:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:16"
																},
																"nativeSrc": "6255:40:16",
																"nodeType": "YulFunctionCall",
																"src": "6255:40:16"
															},
															"nativeSrc": "6252:60:16",
															"nodeType": "YulIf",
															"src": "6252:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6202:116:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:16",
														"nodeType": "YulTypedName",
														"src": "6235:5:16",
														"type": ""
													}
												],
												"src": "6202:116:16"
											},
											{
												"body": {
													"nativeSrc": "6373:84:16",
													"nodeType": "YulBlock",
													"src": "6373:84:16",
													"statements": [
														{
															"nativeSrc": "6383:29:16",
															"nodeType": "YulAssignment",
															"src": "6383:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6405:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6392:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:16"
																},
																"nativeSrc": "6392:20:16",
																"nodeType": "YulFunctionCall",
																"src": "6392:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6383:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6445:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6421:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:16"
																},
																"nativeSrc": "6421:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6421:30:16"
															},
															"nativeSrc": "6421:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6324:133:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6351:6:16",
														"nodeType": "YulTypedName",
														"src": "6351:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6359:3:16",
														"nodeType": "YulTypedName",
														"src": "6359:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6367:5:16",
														"nodeType": "YulTypedName",
														"src": "6367:5:16",
														"type": ""
													}
												],
												"src": "6324:133:16"
											},
											{
												"body": {
													"nativeSrc": "6543:388:16",
													"nodeType": "YulBlock",
													"src": "6543:388:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:16",
																"nodeType": "YulBlock",
																"src": "6589:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:16"
																			},
																			"nativeSrc": "6591:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:16"
																		},
																		"nativeSrc": "6591:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:16"
																		},
																		"nativeSrc": "6560:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:16"
																},
																"nativeSrc": "6556:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:16"
															},
															"nativeSrc": "6553:119:16",
															"nodeType": "YulIf",
															"src": "6553:119:16"
														},
														{
															"nativeSrc": "6682:117:16",
															"nodeType": "YulBlock",
															"src": "6682:117:16",
															"statements": [
																{
																	"nativeSrc": "6697:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:16",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:16"
																				},
																				"nativeSrc": "6757:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:16"
																		},
																		"nativeSrc": "6736:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6809:115:16",
															"nodeType": "YulBlock",
															"src": "6809:115:16",
															"statements": [
																{
																	"nativeSrc": "6824:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:60:16",
																	"nodeType": "YulAssignment",
																	"src": "6854:60:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6886:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6897:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6882:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:16"
																				},
																				"nativeSrc": "6882:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6906:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6864:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:16"
																		},
																		"nativeSrc": "6864:50:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6854:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6463:468:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6505:9:16",
														"nodeType": "YulTypedName",
														"src": "6505:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6516:7:16",
														"nodeType": "YulTypedName",
														"src": "6516:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6528:6:16",
														"nodeType": "YulTypedName",
														"src": "6528:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6536:6:16",
														"nodeType": "YulTypedName",
														"src": "6536:6:16",
														"type": ""
													}
												],
												"src": "6463:468:16"
											},
											{
												"body": {
													"nativeSrc": "7026:28:16",
													"nodeType": "YulBlock",
													"src": "7026:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7043:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7036:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:16"
																},
																"nativeSrc": "7036:12:16",
																"nodeType": "YulFunctionCall",
																"src": "7036:12:16"
															},
															"nativeSrc": "7036:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6937:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:16"
											},
											{
												"body": {
													"nativeSrc": "7149:28:16",
													"nodeType": "YulBlock",
													"src": "7149:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7166:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7159:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:16"
																},
																"nativeSrc": "7159:12:16",
																"nodeType": "YulFunctionCall",
																"src": "7159:12:16"
															},
															"nativeSrc": "7159:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:16"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7060:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:16"
											},
											{
												"body": {
													"nativeSrc": "7211:152:16",
													"nodeType": "YulBlock",
													"src": "7211:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7228:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:77:16",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7221:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:16"
																},
																"nativeSrc": "7221:88:16",
																"nodeType": "YulFunctionCall",
																"src": "7221:88:16"
															},
															"nativeSrc": "7221:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7325:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:16"
																},
																"nativeSrc": "7318:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7318:15:16"
															},
															"nativeSrc": "7318:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7349:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7342:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:16"
																},
																"nativeSrc": "7342:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:16"
															},
															"nativeSrc": "7342:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7183:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:16"
											},
											{
												"body": {
													"nativeSrc": "7412:238:16",
													"nodeType": "YulBlock",
													"src": "7412:238:16",
													"statements": [
														{
															"nativeSrc": "7422:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7444:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7474:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7452:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:16"
																		},
																		"nativeSrc": "7452:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7440:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:16"
																},
																"nativeSrc": "7440:40:16",
																"nodeType": "YulFunctionCall",
																"src": "7440:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7426:10:16",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7591:22:16",
																"nodeType": "YulBlock",
																"src": "7591:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7593:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:16"
																			},
																			"nativeSrc": "7593:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:16"
																		},
																		"nativeSrc": "7593:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7534:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7546:18:16",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7531:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:16"
																		},
																		"nativeSrc": "7531:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7570:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7582:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7567:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:16"
																		},
																		"nativeSrc": "7567:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7528:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:16"
																},
																"nativeSrc": "7528:62:16",
																"nodeType": "YulFunctionCall",
																"src": "7528:62:16"
															},
															"nativeSrc": "7525:88:16",
															"nodeType": "YulIf",
															"src": "7525:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7629:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7633:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7622:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:16"
																},
																"nativeSrc": "7622:22:16",
																"nodeType": "YulFunctionCall",
																"src": "7622:22:16"
															},
															"nativeSrc": "7622:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7369:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7398:6:16",
														"nodeType": "YulTypedName",
														"src": "7398:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7406:4:16",
														"nodeType": "YulTypedName",
														"src": "7406:4:16",
														"type": ""
													}
												],
												"src": "7369:281:16"
											},
											{
												"body": {
													"nativeSrc": "7697:88:16",
													"nodeType": "YulBlock",
													"src": "7697:88:16",
													"statements": [
														{
															"nativeSrc": "7707:30:16",
															"nodeType": "YulAssignment",
															"src": "7707:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7717:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:16"
																},
																"nativeSrc": "7717:20:16",
																"nodeType": "YulFunctionCall",
																"src": "7717:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7707:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7766:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7774:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7746:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:16"
																},
																"nativeSrc": "7746:33:16",
																"nodeType": "YulFunctionCall",
																"src": "7746:33:16"
															},
															"nativeSrc": "7746:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7656:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7681:4:16",
														"nodeType": "YulTypedName",
														"src": "7681:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7690:6:16",
														"nodeType": "YulTypedName",
														"src": "7690:6:16",
														"type": ""
													}
												],
												"src": "7656:129:16"
											},
											{
												"body": {
													"nativeSrc": "7857:241:16",
													"nodeType": "YulBlock",
													"src": "7857:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7962:22:16",
																"nodeType": "YulBlock",
																"src": "7962:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7964:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:16"
																			},
																			"nativeSrc": "7964:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:16"
																		},
																		"nativeSrc": "7964:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:18:16",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7931:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:16"
																},
																"nativeSrc": "7931:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7931:30:16"
															},
															"nativeSrc": "7928:56:16",
															"nodeType": "YulIf",
															"src": "7928:56:16"
														},
														{
															"nativeSrc": "7994:37:16",
															"nodeType": "YulAssignment",
															"src": "7994:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8024:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8002:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:16"
																},
																"nativeSrc": "8002:29:16",
																"nodeType": "YulFunctionCall",
																"src": "8002:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7994:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:16"
																}
															]
														},
														{
															"nativeSrc": "8068:23:16",
															"nodeType": "YulAssignment",
															"src": "8068:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8080:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:16"
																},
																"nativeSrc": "8076:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8076:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8068:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7791:307:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7841:6:16",
														"nodeType": "YulTypedName",
														"src": "7841:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7852:4:16",
														"nodeType": "YulTypedName",
														"src": "7852:4:16",
														"type": ""
													}
												],
												"src": "7791:307:16"
											},
											{
												"body": {
													"nativeSrc": "8168:82:16",
													"nodeType": "YulBlock",
													"src": "8168:82:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8191:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8196:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8201:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8178:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:16"
																},
																"nativeSrc": "8178:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8178:30:16"
															},
															"nativeSrc": "8178:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8228:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8233:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:16"
																		},
																		"nativeSrc": "8224:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:16"
																},
																"nativeSrc": "8217:27:16",
																"nodeType": "YulFunctionCall",
																"src": "8217:27:16"
															},
															"nativeSrc": "8217:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:16"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8104:146:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8150:3:16",
														"nodeType": "YulTypedName",
														"src": "8150:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8155:3:16",
														"nodeType": "YulTypedName",
														"src": "8155:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8160:6:16",
														"nodeType": "YulTypedName",
														"src": "8160:6:16",
														"type": ""
													}
												],
												"src": "8104:146:16"
											},
											{
												"body": {
													"nativeSrc": "8339:340:16",
													"nodeType": "YulBlock",
													"src": "8339:340:16",
													"statements": [
														{
															"nativeSrc": "8349:74:16",
															"nodeType": "YulAssignment",
															"src": "8349:74:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8415:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8374:40:16",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:16"
																		},
																		"nativeSrc": "8374:48:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8358:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:16"
																},
																"nativeSrc": "8358:65:16",
																"nodeType": "YulFunctionCall",
																"src": "8358:65:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8349:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8439:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8446:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:16"
																},
																"nativeSrc": "8432:21:16",
																"nodeType": "YulFunctionCall",
																"src": "8432:21:16"
															},
															"nativeSrc": "8432:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:16"
														},
														{
															"nativeSrc": "8462:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8477:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:16"
																},
																"nativeSrc": "8473:16:16",
																"nodeType": "YulFunctionCall",
																"src": "8473:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8466:3:16",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8527:83:16",
																"nodeType": "YulBlock",
																"src": "8527:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8529:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:16"
																			},
																			"nativeSrc": "8529:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:16"
																		},
																		"nativeSrc": "8529:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8508:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8513:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8504:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:16"
																		},
																		"nativeSrc": "8504:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8522:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8501:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:16"
																},
																"nativeSrc": "8501:25:16",
																"nodeType": "YulFunctionCall",
																"src": "8501:25:16"
															},
															"nativeSrc": "8498:112:16",
															"nodeType": "YulIf",
															"src": "8498:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8656:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8661:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8666:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8619:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:16"
																},
																"nativeSrc": "8619:54:16",
																"nodeType": "YulFunctionCall",
																"src": "8619:54:16"
															},
															"nativeSrc": "8619:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8256:423:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8312:3:16",
														"nodeType": "YulTypedName",
														"src": "8312:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8317:6:16",
														"nodeType": "YulTypedName",
														"src": "8317:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8325:3:16",
														"nodeType": "YulTypedName",
														"src": "8325:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8333:5:16",
														"nodeType": "YulTypedName",
														"src": "8333:5:16",
														"type": ""
													}
												],
												"src": "8256:423:16"
											},
											{
												"body": {
													"nativeSrc": "8759:277:16",
													"nodeType": "YulBlock",
													"src": "8759:277:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8808:83:16",
																"nodeType": "YulBlock",
																"src": "8808:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8810:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:16"
																			},
																			"nativeSrc": "8810:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:16"
																		},
																		"nativeSrc": "8810:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8787:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8795:4:16",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8783:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:16"
																				},
																				"nativeSrc": "8783:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8802:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8779:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:16"
																		},
																		"nativeSrc": "8779:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8772:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:16"
																},
																"nativeSrc": "8772:35:16",
																"nodeType": "YulFunctionCall",
																"src": "8772:35:16"
															},
															"nativeSrc": "8769:122:16",
															"nodeType": "YulIf",
															"src": "8769:122:16"
														},
														{
															"nativeSrc": "8900:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8927:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8914:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:16"
																},
																"nativeSrc": "8914:20:16",
																"nodeType": "YulFunctionCall",
																"src": "8914:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8904:6:16",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8943:87:16",
															"nodeType": "YulAssignment",
															"src": "8943:87:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9003:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:4:16",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:16"
																		},
																		"nativeSrc": "8999:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9018:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9026:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8952:46:16",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:16"
																},
																"nativeSrc": "8952:78:16",
																"nodeType": "YulFunctionCall",
																"src": "8952:78:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8943:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8698:338:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8737:6:16",
														"nodeType": "YulTypedName",
														"src": "8737:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8745:3:16",
														"nodeType": "YulTypedName",
														"src": "8745:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8753:5:16",
														"nodeType": "YulTypedName",
														"src": "8753:5:16",
														"type": ""
													}
												],
												"src": "8698:338:16"
											},
											{
												"body": {
													"nativeSrc": "9168:817:16",
													"nodeType": "YulBlock",
													"src": "9168:817:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:16",
																"nodeType": "YulBlock",
																"src": "9215:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:16"
																			},
																			"nativeSrc": "9217:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:16"
																		},
																		"nativeSrc": "9217:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9198:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9185:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:16"
																		},
																		"nativeSrc": "9185:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:3:16",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9181:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:16"
																},
																"nativeSrc": "9181:33:16",
																"nodeType": "YulFunctionCall",
																"src": "9181:33:16"
															},
															"nativeSrc": "9178:120:16",
															"nodeType": "YulIf",
															"src": "9178:120:16"
														},
														{
															"nativeSrc": "9308:117:16",
															"nodeType": "YulBlock",
															"src": "9308:117:16",
															"statements": [
																{
																	"nativeSrc": "9323:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:16"
																				},
																				"nativeSrc": "9383:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:16"
																		},
																		"nativeSrc": "9362:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:118:16",
															"nodeType": "YulBlock",
															"src": "9435:118:16",
															"statements": [
																{
																	"nativeSrc": "9450:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9480:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9515:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9526:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9511:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:16"
																				},
																				"nativeSrc": "9511:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9535:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9490:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:16"
																		},
																		"nativeSrc": "9490:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9563:118:16",
															"nodeType": "YulBlock",
															"src": "9563:118:16",
															"statements": [
																{
																	"nativeSrc": "9578:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9592:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9582:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9608:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9608:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9643:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9654:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9639:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:16"
																				},
																				"nativeSrc": "9639:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9663:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9618:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:16"
																		},
																		"nativeSrc": "9618:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9608:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9691:287:16",
															"nodeType": "YulBlock",
															"src": "9691:287:16",
															"statements": [
																{
																	"nativeSrc": "9706:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9737:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9748:2:16",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:16",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9733:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:16"
																				},
																				"nativeSrc": "9733:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9720:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:16"
																		},
																		"nativeSrc": "9720:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9710:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9799:83:16",
																		"nodeType": "YulBlock",
																		"src": "9799:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9801:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:16"
																					},
																					"nativeSrc": "9801:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:16"
																				},
																				"nativeSrc": "9801:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9771:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9779:18:16",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9768:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:16"
																		},
																		"nativeSrc": "9768:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:16"
																	},
																	"nativeSrc": "9765:117:16",
																	"nodeType": "YulIf",
																	"src": "9765:117:16"
																},
																{
																	"nativeSrc": "9896:72:16",
																	"nodeType": "YulAssignment",
																	"src": "9896:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9940:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9951:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9936:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:16"
																				},
																				"nativeSrc": "9936:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9960:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9906:29:16",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:16"
																		},
																		"nativeSrc": "9906:62:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9896:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9042:943:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9114:9:16",
														"nodeType": "YulTypedName",
														"src": "9114:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9125:7:16",
														"nodeType": "YulTypedName",
														"src": "9125:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9137:6:16",
														"nodeType": "YulTypedName",
														"src": "9137:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9145:6:16",
														"nodeType": "YulTypedName",
														"src": "9145:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9153:6:16",
														"nodeType": "YulTypedName",
														"src": "9153:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9161:6:16",
														"nodeType": "YulTypedName",
														"src": "9161:6:16",
														"type": ""
													}
												],
												"src": "9042:943:16"
											},
											{
												"body": {
													"nativeSrc": "10058:241:16",
													"nodeType": "YulBlock",
													"src": "10058:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "10163:22:16",
																"nodeType": "YulBlock",
																"src": "10163:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10165:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10165:16:16"
																			},
																			"nativeSrc": "10165:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10165:18:16"
																		},
																		"nativeSrc": "10165:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10135:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10135:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10143:18:16",
																		"nodeType": "YulLiteral",
																		"src": "10143:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10132:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10132:2:16"
																},
																"nativeSrc": "10132:30:16",
																"nodeType": "YulFunctionCall",
																"src": "10132:30:16"
															},
															"nativeSrc": "10129:56:16",
															"nodeType": "YulIf",
															"src": "10129:56:16"
														},
														{
															"nativeSrc": "10195:37:16",
															"nodeType": "YulAssignment",
															"src": "10195:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10225:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10225:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10203:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "10203:21:16"
																},
																"nativeSrc": "10203:29:16",
																"nodeType": "YulFunctionCall",
																"src": "10203:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10195:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10195:4:16"
																}
															]
														},
														{
															"nativeSrc": "10269:23:16",
															"nodeType": "YulAssignment",
															"src": "10269:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10281:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "10281:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10287:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10287:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10277:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10277:3:16"
																},
																"nativeSrc": "10277:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10277:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10269:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10269:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "9991:308:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10042:6:16",
														"nodeType": "YulTypedName",
														"src": "10042:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10053:4:16",
														"nodeType": "YulTypedName",
														"src": "10053:4:16",
														"type": ""
													}
												],
												"src": "9991:308:16"
											},
											{
												"body": {
													"nativeSrc": "10389:341:16",
													"nodeType": "YulBlock",
													"src": "10389:341:16",
													"statements": [
														{
															"nativeSrc": "10399:75:16",
															"nodeType": "YulAssignment",
															"src": "10399:75:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10466:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10466:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "10424:41:16",
																			"nodeType": "YulIdentifier",
																			"src": "10424:41:16"
																		},
																		"nativeSrc": "10424:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10424:49:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10408:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "10408:15:16"
																},
																"nativeSrc": "10408:66:16",
																"nodeType": "YulFunctionCall",
																"src": "10408:66:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10399:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "10399:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10490:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10490:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10497:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10483:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10483:6:16"
																},
																"nativeSrc": "10483:21:16",
																"nodeType": "YulFunctionCall",
																"src": "10483:21:16"
															},
															"nativeSrc": "10483:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "10483:21:16"
														},
														{
															"nativeSrc": "10513:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "10513:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10528:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10528:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10524:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10524:3:16"
																},
																"nativeSrc": "10524:16:16",
																"nodeType": "YulFunctionCall",
																"src": "10524:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10517:3:16",
																	"nodeType": "YulTypedName",
																	"src": "10517:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10578:83:16",
																"nodeType": "YulBlock",
																"src": "10578:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10580:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "10580:77:16"
																			},
																			"nativeSrc": "10580:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10580:79:16"
																		},
																		"nativeSrc": "10580:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10580:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10559:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "10559:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10564:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10564:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10555:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10555:3:16"
																		},
																		"nativeSrc": "10555:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10555:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10573:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10573:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10552:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10552:2:16"
																},
																"nativeSrc": "10552:25:16",
																"nodeType": "YulFunctionCall",
																"src": "10552:25:16"
															},
															"nativeSrc": "10549:112:16",
															"nodeType": "YulIf",
															"src": "10549:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10707:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10707:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10712:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10712:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10717:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10717:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10670:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "10670:36:16"
																},
																"nativeSrc": "10670:54:16",
																"nodeType": "YulFunctionCall",
																"src": "10670:54:16"
															},
															"nativeSrc": "10670:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "10670:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "10305:425:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10362:3:16",
														"nodeType": "YulTypedName",
														"src": "10362:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10367:6:16",
														"nodeType": "YulTypedName",
														"src": "10367:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10375:3:16",
														"nodeType": "YulTypedName",
														"src": "10375:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10383:5:16",
														"nodeType": "YulTypedName",
														"src": "10383:5:16",
														"type": ""
													}
												],
												"src": "10305:425:16"
											},
											{
												"body": {
													"nativeSrc": "10812:278:16",
													"nodeType": "YulBlock",
													"src": "10812:278:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "10861:83:16",
																"nodeType": "YulBlock",
																"src": "10861:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10863:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "10863:77:16"
																			},
																			"nativeSrc": "10863:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10863:79:16"
																		},
																		"nativeSrc": "10863:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10863:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10840:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10840:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10848:4:16",
																						"nodeType": "YulLiteral",
																						"src": "10848:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10836:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10836:3:16"
																				},
																				"nativeSrc": "10836:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10836:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10855:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "10855:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10832:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10832:3:16"
																		},
																		"nativeSrc": "10832:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10832:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10825:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10825:6:16"
																},
																"nativeSrc": "10825:35:16",
																"nodeType": "YulFunctionCall",
																"src": "10825:35:16"
															},
															"nativeSrc": "10822:122:16",
															"nodeType": "YulIf",
															"src": "10822:122:16"
														},
														{
															"nativeSrc": "10953:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "10953:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10980:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10980:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10967:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "10967:12:16"
																},
																"nativeSrc": "10967:20:16",
																"nodeType": "YulFunctionCall",
																"src": "10967:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10957:6:16",
																	"nodeType": "YulTypedName",
																	"src": "10957:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10996:88:16",
															"nodeType": "YulAssignment",
															"src": "10996:88:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11057:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11057:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11065:4:16",
																				"nodeType": "YulLiteral",
																				"src": "11065:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11053:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11053:3:16"
																		},
																		"nativeSrc": "11053:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11053:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11072:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11072:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11080:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11080:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "11005:47:16",
																	"nodeType": "YulIdentifier",
																	"src": "11005:47:16"
																},
																"nativeSrc": "11005:79:16",
																"nodeType": "YulFunctionCall",
																"src": "11005:79:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10996:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "10996:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "10750:340:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10790:6:16",
														"nodeType": "YulTypedName",
														"src": "10790:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10798:3:16",
														"nodeType": "YulTypedName",
														"src": "10798:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10806:5:16",
														"nodeType": "YulTypedName",
														"src": "10806:5:16",
														"type": ""
													}
												],
												"src": "10750:340:16"
											},
											{
												"body": {
													"nativeSrc": "11172:433:16",
													"nodeType": "YulBlock",
													"src": "11172:433:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11218:83:16",
																"nodeType": "YulBlock",
																"src": "11218:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11220:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11220:77:16"
																			},
																			"nativeSrc": "11220:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11220:79:16"
																		},
																		"nativeSrc": "11220:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11220:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11193:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11193:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11202:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11202:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11189:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11189:3:16"
																		},
																		"nativeSrc": "11189:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11189:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11214:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11214:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11185:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11185:3:16"
																},
																"nativeSrc": "11185:32:16",
																"nodeType": "YulFunctionCall",
																"src": "11185:32:16"
															},
															"nativeSrc": "11182:119:16",
															"nodeType": "YulIf",
															"src": "11182:119:16"
														},
														{
															"nativeSrc": "11311:287:16",
															"nodeType": "YulBlock",
															"src": "11311:287:16",
															"statements": [
																{
																	"nativeSrc": "11326:45:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11326:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11357:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11357:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11368:1:16",
																						"nodeType": "YulLiteral",
																						"src": "11368:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11353:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11353:3:16"
																				},
																				"nativeSrc": "11353:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11353:17:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11340:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "11340:12:16"
																		},
																		"nativeSrc": "11340:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11340:31:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11330:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11330:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11418:83:16",
																		"nodeType": "YulBlock",
																		"src": "11418:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11420:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "11420:77:16"
																					},
																					"nativeSrc": "11420:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "11420:79:16"
																				},
																				"nativeSrc": "11420:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "11420:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11390:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11390:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11398:18:16",
																				"nodeType": "YulLiteral",
																				"src": "11398:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11387:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "11387:2:16"
																		},
																		"nativeSrc": "11387:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11387:30:16"
																	},
																	"nativeSrc": "11384:117:16",
																	"nodeType": "YulIf",
																	"src": "11384:117:16"
																},
																{
																	"nativeSrc": "11515:73:16",
																	"nodeType": "YulAssignment",
																	"src": "11515:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11560:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11560:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11571:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11571:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11556:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11556:3:16"
																				},
																				"nativeSrc": "11556:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11556:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11580:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11580:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "11525:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "11525:30:16"
																		},
																		"nativeSrc": "11525:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11525:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11515:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11515:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "11096:509:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11142:9:16",
														"nodeType": "YulTypedName",
														"src": "11142:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11153:7:16",
														"nodeType": "YulTypedName",
														"src": "11153:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11165:6:16",
														"nodeType": "YulTypedName",
														"src": "11165:6:16",
														"type": ""
													}
												],
												"src": "11096:509:16"
											},
											{
												"body": {
													"nativeSrc": "11694:391:16",
													"nodeType": "YulBlock",
													"src": "11694:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11740:83:16",
																"nodeType": "YulBlock",
																"src": "11740:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11742:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11742:77:16"
																			},
																			"nativeSrc": "11742:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11742:79:16"
																		},
																		"nativeSrc": "11742:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11742:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11715:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11715:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11724:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11724:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11711:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11711:3:16"
																		},
																		"nativeSrc": "11711:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11711:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11736:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11736:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11707:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:16"
																},
																"nativeSrc": "11707:32:16",
																"nodeType": "YulFunctionCall",
																"src": "11707:32:16"
															},
															"nativeSrc": "11704:119:16",
															"nodeType": "YulIf",
															"src": "11704:119:16"
														},
														{
															"nativeSrc": "11833:117:16",
															"nodeType": "YulBlock",
															"src": "11833:117:16",
															"statements": [
																{
																	"nativeSrc": "11848:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11848:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11862:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11862:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11852:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11852:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11877:63:16",
																	"nodeType": "YulAssignment",
																	"src": "11877:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11912:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11912:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11923:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11923:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11908:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11908:3:16"
																				},
																				"nativeSrc": "11908:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11908:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11932:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11932:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11887:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "11887:20:16"
																		},
																		"nativeSrc": "11887:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11887:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11877:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11877:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11960:118:16",
															"nodeType": "YulBlock",
															"src": "11960:118:16",
															"statements": [
																{
																	"nativeSrc": "11975:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11975:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11989:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11989:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11979:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11979:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12005:63:16",
																	"nodeType": "YulAssignment",
																	"src": "12005:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12040:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12040:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12051:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12051:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12036:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12036:3:16"
																				},
																				"nativeSrc": "12036:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12036:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12060:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12060:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12015:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12015:20:16"
																		},
																		"nativeSrc": "12015:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12015:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12005:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12005:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11611:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11656:9:16",
														"nodeType": "YulTypedName",
														"src": "11656:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11667:7:16",
														"nodeType": "YulTypedName",
														"src": "11667:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11679:6:16",
														"nodeType": "YulTypedName",
														"src": "11679:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11687:6:16",
														"nodeType": "YulTypedName",
														"src": "11687:6:16",
														"type": ""
													}
												],
												"src": "11611:474:16"
											},
											{
												"body": {
													"nativeSrc": "12119:152:16",
													"nodeType": "YulBlock",
													"src": "12119:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12136:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12136:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12139:77:16",
																		"nodeType": "YulLiteral",
																		"src": "12139:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12129:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12129:6:16"
																},
																"nativeSrc": "12129:88:16",
																"nodeType": "YulFunctionCall",
																"src": "12129:88:16"
															},
															"nativeSrc": "12129:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "12129:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12233:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12233:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12236:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12236:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12226:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12226:6:16"
																},
																"nativeSrc": "12226:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12226:15:16"
															},
															"nativeSrc": "12226:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12226:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12257:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12257:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12260:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12260:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12250:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12250:6:16"
																},
																"nativeSrc": "12250:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12250:15:16"
															},
															"nativeSrc": "12250:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12250:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12091:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "12091:180:16"
											},
											{
												"body": {
													"nativeSrc": "12328:269:16",
													"nodeType": "YulBlock",
													"src": "12328:269:16",
													"statements": [
														{
															"nativeSrc": "12338:22:16",
															"nodeType": "YulAssignment",
															"src": "12338:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12352:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "12352:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12358:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12358:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12348:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12348:3:16"
																},
																"nativeSrc": "12348:12:16",
																"nodeType": "YulFunctionCall",
																"src": "12348:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12338:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12338:6:16"
																}
															]
														},
														{
															"nativeSrc": "12369:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12369:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12399:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "12399:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12405:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12405:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12395:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12395:3:16"
																},
																"nativeSrc": "12395:12:16",
																"nodeType": "YulFunctionCall",
																"src": "12395:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12373:18:16",
																	"nodeType": "YulTypedName",
																	"src": "12373:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12446:51:16",
																"nodeType": "YulBlock",
																"src": "12446:51:16",
																"statements": [
																	{
																		"nativeSrc": "12460:27:16",
																		"nodeType": "YulAssignment",
																		"src": "12460:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12474:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "12474:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12482:4:16",
																					"nodeType": "YulLiteral",
																					"src": "12482:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12470:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "12470:3:16"
																			},
																			"nativeSrc": "12470:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12470:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12460:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12460:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12426:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "12426:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12419:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12419:6:16"
																},
																"nativeSrc": "12419:26:16",
																"nodeType": "YulFunctionCall",
																"src": "12419:26:16"
															},
															"nativeSrc": "12416:81:16",
															"nodeType": "YulIf",
															"src": "12416:81:16"
														},
														{
															"body": {
																"nativeSrc": "12549:42:16",
																"nodeType": "YulBlock",
																"src": "12549:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12563:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "12563:16:16"
																			},
																			"nativeSrc": "12563:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12563:18:16"
																		},
																		"nativeSrc": "12563:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "12563:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12513:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "12513:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12536:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12536:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12544:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12544:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12533:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "12533:2:16"
																		},
																		"nativeSrc": "12533:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12533:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12510:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "12510:2:16"
																},
																"nativeSrc": "12510:38:16",
																"nodeType": "YulFunctionCall",
																"src": "12510:38:16"
															},
															"nativeSrc": "12507:84:16",
															"nodeType": "YulIf",
															"src": "12507:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12277:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12312:4:16",
														"nodeType": "YulTypedName",
														"src": "12312:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12321:6:16",
														"nodeType": "YulTypedName",
														"src": "12321:6:16",
														"type": ""
													}
												],
												"src": "12277:320:16"
											},
											{
												"body": {
													"nativeSrc": "12757:288:16",
													"nodeType": "YulBlock",
													"src": "12757:288:16",
													"statements": [
														{
															"nativeSrc": "12767:26:16",
															"nodeType": "YulAssignment",
															"src": "12767:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12779:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12779:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12790:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12790:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12775:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12775:3:16"
																},
																"nativeSrc": "12775:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12775:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12767:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12767:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12847:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12847:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12860:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12871:1:16",
																				"nodeType": "YulLiteral",
																				"src": "12871:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12856:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:16"
																		},
																		"nativeSrc": "12856:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12856:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12803:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12803:43:16"
																},
																"nativeSrc": "12803:71:16",
																"nodeType": "YulFunctionCall",
																"src": "12803:71:16"
															},
															"nativeSrc": "12803:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "12803:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12928:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12928:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12941:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12941:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12952:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12952:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12937:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12937:3:16"
																		},
																		"nativeSrc": "12937:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12937:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12884:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12884:43:16"
																},
																"nativeSrc": "12884:72:16",
																"nodeType": "YulFunctionCall",
																"src": "12884:72:16"
															},
															"nativeSrc": "12884:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "12884:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13010:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13010:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13023:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13023:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13034:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13034:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13019:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13019:3:16"
																		},
																		"nativeSrc": "13019:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13019:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12966:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12966:43:16"
																},
																"nativeSrc": "12966:72:16",
																"nodeType": "YulFunctionCall",
																"src": "12966:72:16"
															},
															"nativeSrc": "12966:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "12966:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "12603:442:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12713:9:16",
														"nodeType": "YulTypedName",
														"src": "12713:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12725:6:16",
														"nodeType": "YulTypedName",
														"src": "12725:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12733:6:16",
														"nodeType": "YulTypedName",
														"src": "12733:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12741:6:16",
														"nodeType": "YulTypedName",
														"src": "12741:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12752:4:16",
														"nodeType": "YulTypedName",
														"src": "12752:4:16",
														"type": ""
													}
												],
												"src": "12603:442:16"
											},
											{
												"body": {
													"nativeSrc": "13165:34:16",
													"nodeType": "YulBlock",
													"src": "13165:34:16",
													"statements": [
														{
															"nativeSrc": "13175:18:16",
															"nodeType": "YulAssignment",
															"src": "13175:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "13190:3:16",
																"nodeType": "YulIdentifier",
																"src": "13190:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13175:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "13175:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13051:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13137:3:16",
														"nodeType": "YulTypedName",
														"src": "13137:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13142:6:16",
														"nodeType": "YulTypedName",
														"src": "13142:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13153:11:16",
														"nodeType": "YulTypedName",
														"src": "13153:11:16",
														"type": ""
													}
												],
												"src": "13051:148:16"
											},
											{
												"body": {
													"nativeSrc": "13315:280:16",
													"nodeType": "YulBlock",
													"src": "13315:280:16",
													"statements": [
														{
															"nativeSrc": "13325:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "13325:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13372:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "13372:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "13339:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "13339:32:16"
																},
																"nativeSrc": "13339:39:16",
																"nodeType": "YulFunctionCall",
																"src": "13339:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13329:6:16",
																	"nodeType": "YulTypedName",
																	"src": "13329:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13387:96:16",
															"nodeType": "YulAssignment",
															"src": "13387:96:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13471:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13471:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13476:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13476:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13394:76:16",
																	"nodeType": "YulIdentifier",
																	"src": "13394:76:16"
																},
																"nativeSrc": "13394:89:16",
																"nodeType": "YulFunctionCall",
																"src": "13394:89:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13387:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13387:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13531:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "13531:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13538:4:16",
																				"nodeType": "YulLiteral",
																				"src": "13538:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13527:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13527:3:16"
																		},
																		"nativeSrc": "13527:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13527:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13545:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13545:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13550:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13550:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13492:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "13492:34:16"
																},
																"nativeSrc": "13492:65:16",
																"nodeType": "YulFunctionCall",
																"src": "13492:65:16"
															},
															"nativeSrc": "13492:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "13492:65:16"
														},
														{
															"nativeSrc": "13566:23:16",
															"nodeType": "YulAssignment",
															"src": "13566:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13577:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13577:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13582:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13582:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13573:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13573:3:16"
																},
																"nativeSrc": "13573:16:16",
																"nodeType": "YulFunctionCall",
																"src": "13573:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13566:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13566:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13205:390:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13296:5:16",
														"nodeType": "YulTypedName",
														"src": "13296:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13303:3:16",
														"nodeType": "YulTypedName",
														"src": "13303:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13311:3:16",
														"nodeType": "YulTypedName",
														"src": "13311:3:16",
														"type": ""
													}
												],
												"src": "13205:390:16"
											},
											{
												"body": {
													"nativeSrc": "13785:251:16",
													"nodeType": "YulBlock",
													"src": "13785:251:16",
													"statements": [
														{
															"nativeSrc": "13796:102:16",
															"nodeType": "YulAssignment",
															"src": "13796:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13885:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13885:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13894:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13894:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13803:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "13803:81:16"
																},
																"nativeSrc": "13803:95:16",
																"nodeType": "YulFunctionCall",
																"src": "13803:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13796:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13796:3:16"
																}
															]
														},
														{
															"nativeSrc": "13908:102:16",
															"nodeType": "YulAssignment",
															"src": "13908:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13997:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13997:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14006:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14006:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13915:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "13915:81:16"
																},
																"nativeSrc": "13915:95:16",
																"nodeType": "YulFunctionCall",
																"src": "13915:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13908:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13908:3:16"
																}
															]
														},
														{
															"nativeSrc": "14020:10:16",
															"nodeType": "YulAssignment",
															"src": "14020:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "14027:3:16",
																"nodeType": "YulIdentifier",
																"src": "14027:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14020:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14020:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13601:435:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13756:3:16",
														"nodeType": "YulTypedName",
														"src": "13756:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13762:6:16",
														"nodeType": "YulTypedName",
														"src": "13762:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13770:6:16",
														"nodeType": "YulTypedName",
														"src": "13770:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13781:3:16",
														"nodeType": "YulTypedName",
														"src": "13781:3:16",
														"type": ""
													}
												],
												"src": "13601:435:16"
											},
											{
												"body": {
													"nativeSrc": "14070:152:16",
													"nodeType": "YulBlock",
													"src": "14070:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14087:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14087:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14090:77:16",
																		"nodeType": "YulLiteral",
																		"src": "14090:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14080:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14080:6:16"
																},
																"nativeSrc": "14080:88:16",
																"nodeType": "YulFunctionCall",
																"src": "14080:88:16"
															},
															"nativeSrc": "14080:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "14080:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14184:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14184:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14187:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14187:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14177:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14177:6:16"
																},
																"nativeSrc": "14177:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14177:15:16"
															},
															"nativeSrc": "14177:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14177:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14208:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14208:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14211:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14211:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14201:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14201:6:16"
																},
																"nativeSrc": "14201:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14201:15:16"
															},
															"nativeSrc": "14201:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14201:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14042:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "14042:180:16"
											},
											{
												"body": {
													"nativeSrc": "14271:190:16",
													"nodeType": "YulBlock",
													"src": "14271:190:16",
													"statements": [
														{
															"nativeSrc": "14281:33:16",
															"nodeType": "YulAssignment",
															"src": "14281:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14308:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14308:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14290:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "14290:17:16"
																},
																"nativeSrc": "14290:24:16",
																"nodeType": "YulFunctionCall",
																"src": "14290:24:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14281:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "14281:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14404:22:16",
																"nodeType": "YulBlock",
																"src": "14404:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14406:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "14406:16:16"
																			},
																			"nativeSrc": "14406:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "14406:18:16"
																		},
																		"nativeSrc": "14406:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "14406:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14329:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14329:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14336:66:16",
																		"nodeType": "YulLiteral",
																		"src": "14336:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14326:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "14326:2:16"
																},
																"nativeSrc": "14326:77:16",
																"nodeType": "YulFunctionCall",
																"src": "14326:77:16"
															},
															"nativeSrc": "14323:103:16",
															"nodeType": "YulIf",
															"src": "14323:103:16"
														},
														{
															"nativeSrc": "14435:20:16",
															"nodeType": "YulAssignment",
															"src": "14435:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14446:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14446:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14453:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14453:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14442:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14442:3:16"
																},
																"nativeSrc": "14442:13:16",
																"nodeType": "YulFunctionCall",
																"src": "14442:13:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14435:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14435:3:16"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "14228:233:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14257:5:16",
														"nodeType": "YulTypedName",
														"src": "14257:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14267:3:16",
														"nodeType": "YulTypedName",
														"src": "14267:3:16",
														"type": ""
													}
												],
												"src": "14228:233:16"
											},
											{
												"body": {
													"nativeSrc": "14525:40:16",
													"nodeType": "YulBlock",
													"src": "14525:40:16",
													"statements": [
														{
															"nativeSrc": "14536:22:16",
															"nodeType": "YulAssignment",
															"src": "14536:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14552:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14552:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14546:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "14546:5:16"
																},
																"nativeSrc": "14546:12:16",
																"nodeType": "YulFunctionCall",
																"src": "14546:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14536:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14536:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "14467:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14508:5:16",
														"nodeType": "YulTypedName",
														"src": "14508:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14518:6:16",
														"nodeType": "YulTypedName",
														"src": "14518:6:16",
														"type": ""
													}
												],
												"src": "14467:98:16"
											},
											{
												"body": {
													"nativeSrc": "14666:73:16",
													"nodeType": "YulBlock",
													"src": "14666:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14683:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14683:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14688:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14688:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14676:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14676:6:16"
																},
																"nativeSrc": "14676:19:16",
																"nodeType": "YulFunctionCall",
																"src": "14676:19:16"
															},
															"nativeSrc": "14676:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "14676:19:16"
														},
														{
															"nativeSrc": "14704:29:16",
															"nodeType": "YulAssignment",
															"src": "14704:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14723:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14723:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14728:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14728:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14719:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14719:3:16"
																},
																"nativeSrc": "14719:14:16",
																"nodeType": "YulFunctionCall",
																"src": "14719:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14704:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "14704:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "14571:168:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14638:3:16",
														"nodeType": "YulTypedName",
														"src": "14638:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14643:6:16",
														"nodeType": "YulTypedName",
														"src": "14643:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14654:11:16",
														"nodeType": "YulTypedName",
														"src": "14654:11:16",
														"type": ""
													}
												],
												"src": "14571:168:16"
											},
											{
												"body": {
													"nativeSrc": "14835:283:16",
													"nodeType": "YulBlock",
													"src": "14835:283:16",
													"statements": [
														{
															"nativeSrc": "14845:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "14845:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14891:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14891:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "14859:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "14859:31:16"
																},
																"nativeSrc": "14859:38:16",
																"nodeType": "YulFunctionCall",
																"src": "14859:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14849:6:16",
																	"nodeType": "YulTypedName",
																	"src": "14849:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14906:77:16",
															"nodeType": "YulAssignment",
															"src": "14906:77:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14971:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14971:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14976:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14976:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "14913:57:16",
																	"nodeType": "YulIdentifier",
																	"src": "14913:57:16"
																},
																"nativeSrc": "14913:70:16",
																"nodeType": "YulFunctionCall",
																"src": "14913:70:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14906:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14906:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15031:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "15031:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15038:4:16",
																				"nodeType": "YulLiteral",
																				"src": "15038:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15027:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15027:3:16"
																		},
																		"nativeSrc": "15027:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15027:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15045:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15045:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15050:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15050:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14992:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "14992:34:16"
																},
																"nativeSrc": "14992:65:16",
																"nodeType": "YulFunctionCall",
																"src": "14992:65:16"
															},
															"nativeSrc": "14992:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "14992:65:16"
														},
														{
															"nativeSrc": "15066:46:16",
															"nodeType": "YulAssignment",
															"src": "15066:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15077:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15077:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15104:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "15104:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "15082:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "15082:21:16"
																		},
																		"nativeSrc": "15082:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15082:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15073:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15073:3:16"
																},
																"nativeSrc": "15073:39:16",
																"nodeType": "YulFunctionCall",
																"src": "15073:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15066:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15066:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "14745:373:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14816:5:16",
														"nodeType": "YulTypedName",
														"src": "14816:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14823:3:16",
														"nodeType": "YulTypedName",
														"src": "14823:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14831:3:16",
														"nodeType": "YulTypedName",
														"src": "14831:3:16",
														"type": ""
													}
												],
												"src": "14745:373:16"
											},
											{
												"body": {
													"nativeSrc": "15324:440:16",
													"nodeType": "YulBlock",
													"src": "15324:440:16",
													"statements": [
														{
															"nativeSrc": "15334:27:16",
															"nodeType": "YulAssignment",
															"src": "15334:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15346:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15346:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15357:3:16",
																		"nodeType": "YulLiteral",
																		"src": "15357:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15342:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15342:3:16"
																},
																"nativeSrc": "15342:19:16",
																"nodeType": "YulFunctionCall",
																"src": "15342:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15334:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15334:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15415:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15415:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15428:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15428:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15439:1:16",
																				"nodeType": "YulLiteral",
																				"src": "15439:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15424:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15424:3:16"
																		},
																		"nativeSrc": "15424:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15424:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15371:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "15371:43:16"
																},
																"nativeSrc": "15371:71:16",
																"nodeType": "YulFunctionCall",
																"src": "15371:71:16"
															},
															"nativeSrc": "15371:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "15371:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15496:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15496:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15509:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15509:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15520:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15520:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15505:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15505:3:16"
																		},
																		"nativeSrc": "15505:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15505:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15452:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "15452:43:16"
																},
																"nativeSrc": "15452:72:16",
																"nodeType": "YulFunctionCall",
																"src": "15452:72:16"
															},
															"nativeSrc": "15452:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "15452:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15578:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15578:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15591:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15591:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15602:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15602:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15587:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15587:3:16"
																		},
																		"nativeSrc": "15587:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15587:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15534:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "15534:43:16"
																},
																"nativeSrc": "15534:72:16",
																"nodeType": "YulFunctionCall",
																"src": "15534:72:16"
															},
															"nativeSrc": "15534:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "15534:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15627:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15627:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15638:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15638:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15623:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15623:3:16"
																		},
																		"nativeSrc": "15623:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15623:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15647:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "15647:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15653:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15653:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15643:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15643:3:16"
																		},
																		"nativeSrc": "15643:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15643:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15616:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15616:6:16"
																},
																"nativeSrc": "15616:48:16",
																"nodeType": "YulFunctionCall",
																"src": "15616:48:16"
															},
															"nativeSrc": "15616:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "15616:48:16"
														},
														{
															"nativeSrc": "15673:84:16",
															"nodeType": "YulAssignment",
															"src": "15673:84:16",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15743:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15743:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15752:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "15752:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "15681:61:16",
																	"nodeType": "YulIdentifier",
																	"src": "15681:61:16"
																},
																"nativeSrc": "15681:76:16",
																"nodeType": "YulFunctionCall",
																"src": "15681:76:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15673:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15673:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "15124:640:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15272:9:16",
														"nodeType": "YulTypedName",
														"src": "15272:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15284:6:16",
														"nodeType": "YulTypedName",
														"src": "15284:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15292:6:16",
														"nodeType": "YulTypedName",
														"src": "15292:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15300:6:16",
														"nodeType": "YulTypedName",
														"src": "15300:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15308:6:16",
														"nodeType": "YulTypedName",
														"src": "15308:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15319:4:16",
														"nodeType": "YulTypedName",
														"src": "15319:4:16",
														"type": ""
													}
												],
												"src": "15124:640:16"
											},
											{
												"body": {
													"nativeSrc": "15832:79:16",
													"nodeType": "YulBlock",
													"src": "15832:79:16",
													"statements": [
														{
															"nativeSrc": "15842:22:16",
															"nodeType": "YulAssignment",
															"src": "15842:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15857:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15857:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15851:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "15851:5:16"
																},
																"nativeSrc": "15851:13:16",
																"nodeType": "YulFunctionCall",
																"src": "15851:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15842:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "15842:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15899:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "15899:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "15873:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "15873:25:16"
																},
																"nativeSrc": "15873:32:16",
																"nodeType": "YulFunctionCall",
																"src": "15873:32:16"
															},
															"nativeSrc": "15873:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "15873:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "15770:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15810:6:16",
														"nodeType": "YulTypedName",
														"src": "15810:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15818:3:16",
														"nodeType": "YulTypedName",
														"src": "15818:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15826:5:16",
														"nodeType": "YulTypedName",
														"src": "15826:5:16",
														"type": ""
													}
												],
												"src": "15770:141:16"
											},
											{
												"body": {
													"nativeSrc": "15993:273:16",
													"nodeType": "YulBlock",
													"src": "15993:273:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "16039:83:16",
																"nodeType": "YulBlock",
																"src": "16039:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16041:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "16041:77:16"
																			},
																			"nativeSrc": "16041:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "16041:79:16"
																		},
																		"nativeSrc": "16041:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "16041:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16014:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "16014:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16023:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16023:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16010:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16010:3:16"
																		},
																		"nativeSrc": "16010:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16010:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16035:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16035:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16006:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16006:3:16"
																},
																"nativeSrc": "16006:32:16",
																"nodeType": "YulFunctionCall",
																"src": "16006:32:16"
															},
															"nativeSrc": "16003:119:16",
															"nodeType": "YulIf",
															"src": "16003:119:16"
														},
														{
															"nativeSrc": "16132:127:16",
															"nodeType": "YulBlock",
															"src": "16132:127:16",
															"statements": [
																{
																	"nativeSrc": "16147:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16147:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16161:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16161:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16151:6:16",
																			"nodeType": "YulTypedName",
																			"src": "16151:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16176:73:16",
																	"nodeType": "YulAssignment",
																	"src": "16176:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16221:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "16221:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16232:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "16232:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16217:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "16217:3:16"
																				},
																				"nativeSrc": "16217:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "16217:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16241:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "16241:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "16186:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "16186:30:16"
																		},
																		"nativeSrc": "16186:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16186:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16176:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "16176:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "15917:349:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15963:9:16",
														"nodeType": "YulTypedName",
														"src": "15963:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15974:7:16",
														"nodeType": "YulTypedName",
														"src": "15974:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15986:6:16",
														"nodeType": "YulTypedName",
														"src": "15986:6:16",
														"type": ""
													}
												],
												"src": "15917:349:16"
											},
											{
												"body": {
													"nativeSrc": "16326:87:16",
													"nodeType": "YulBlock",
													"src": "16326:87:16",
													"statements": [
														{
															"nativeSrc": "16336:11:16",
															"nodeType": "YulAssignment",
															"src": "16336:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "16344:3:16",
																"nodeType": "YulIdentifier",
																"src": "16344:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16336:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16336:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16364:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16364:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "16367:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16367:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16357:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16357:6:16"
																},
																"nativeSrc": "16357:14:16",
																"nodeType": "YulFunctionCall",
																"src": "16357:14:16"
															},
															"nativeSrc": "16357:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "16357:14:16"
														},
														{
															"nativeSrc": "16380:26:16",
															"nodeType": "YulAssignment",
															"src": "16380:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16398:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16398:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16401:4:16",
																		"nodeType": "YulLiteral",
																		"src": "16401:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16388:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "16388:9:16"
																},
																"nativeSrc": "16388:18:16",
																"nodeType": "YulFunctionCall",
																"src": "16388:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16380:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16380:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "16272:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16313:3:16",
														"nodeType": "YulTypedName",
														"src": "16313:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "16321:4:16",
														"nodeType": "YulTypedName",
														"src": "16321:4:16",
														"type": ""
													}
												],
												"src": "16272:141:16"
											},
											{
												"body": {
													"nativeSrc": "16463:49:16",
													"nodeType": "YulBlock",
													"src": "16463:49:16",
													"statements": [
														{
															"nativeSrc": "16473:33:16",
															"nodeType": "YulAssignment",
															"src": "16473:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16491:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "16491:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16498:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16498:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16487:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16487:3:16"
																		},
																		"nativeSrc": "16487:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16487:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16503:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16503:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16483:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16483:3:16"
																},
																"nativeSrc": "16483:23:16",
																"nodeType": "YulFunctionCall",
																"src": "16483:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16473:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16473:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "16419:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16446:5:16",
														"nodeType": "YulTypedName",
														"src": "16446:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16456:6:16",
														"nodeType": "YulTypedName",
														"src": "16456:6:16",
														"type": ""
													}
												],
												"src": "16419:93:16"
											},
											{
												"body": {
													"nativeSrc": "16571:54:16",
													"nodeType": "YulBlock",
													"src": "16571:54:16",
													"statements": [
														{
															"nativeSrc": "16581:37:16",
															"nodeType": "YulAssignment",
															"src": "16581:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16606:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "16606:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16612:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16612:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16602:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16602:3:16"
																},
																"nativeSrc": "16602:16:16",
																"nodeType": "YulFunctionCall",
																"src": "16602:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16581:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "16581:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "16518:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16546:4:16",
														"nodeType": "YulTypedName",
														"src": "16546:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16552:5:16",
														"nodeType": "YulTypedName",
														"src": "16552:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16562:8:16",
														"nodeType": "YulTypedName",
														"src": "16562:8:16",
														"type": ""
													}
												],
												"src": "16518:107:16"
											},
											{
												"body": {
													"nativeSrc": "16707:317:16",
													"nodeType": "YulBlock",
													"src": "16707:317:16",
													"statements": [
														{
															"nativeSrc": "16717:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16717:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "16738:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "16738:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16750:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16750:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16734:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16734:3:16"
																},
																"nativeSrc": "16734:18:16",
																"nodeType": "YulFunctionCall",
																"src": "16734:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "16721:9:16",
																	"nodeType": "YulTypedName",
																	"src": "16721:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16761:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16761:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16792:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "16792:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16803:66:16",
																		"nodeType": "YulLiteral",
																		"src": "16803:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16773:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "16773:18:16"
																},
																"nativeSrc": "16773:97:16",
																"nodeType": "YulFunctionCall",
																"src": "16773:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16765:4:16",
																	"nodeType": "YulTypedName",
																	"src": "16765:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16879:51:16",
															"nodeType": "YulAssignment",
															"src": "16879:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16910:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "16910:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "16921:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "16921:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16891:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "16891:18:16"
																},
																"nativeSrc": "16891:39:16",
																"nodeType": "YulFunctionCall",
																"src": "16891:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "16879:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "16879:8:16"
																}
															]
														},
														{
															"nativeSrc": "16939:30:16",
															"nodeType": "YulAssignment",
															"src": "16939:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16952:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16952:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "16963:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "16963:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16959:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16959:3:16"
																		},
																		"nativeSrc": "16959:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16959:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16948:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16948:3:16"
																},
																"nativeSrc": "16948:21:16",
																"nodeType": "YulFunctionCall",
																"src": "16948:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16939:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "16939:5:16"
																}
															]
														},
														{
															"nativeSrc": "16978:40:16",
															"nodeType": "YulAssignment",
															"src": "16978:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16991:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16991:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "17002:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "17002:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "17012:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "17012:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16998:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16998:3:16"
																		},
																		"nativeSrc": "16998:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16998:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16988:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "16988:2:16"
																},
																"nativeSrc": "16988:30:16",
																"nodeType": "YulFunctionCall",
																"src": "16988:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16978:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16978:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "16631:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16668:5:16",
														"nodeType": "YulTypedName",
														"src": "16668:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "16675:10:16",
														"nodeType": "YulTypedName",
														"src": "16675:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "16687:8:16",
														"nodeType": "YulTypedName",
														"src": "16687:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16700:6:16",
														"nodeType": "YulTypedName",
														"src": "16700:6:16",
														"type": ""
													}
												],
												"src": "16631:393:16"
											},
											{
												"body": {
													"nativeSrc": "17062:28:16",
													"nodeType": "YulBlock",
													"src": "17062:28:16",
													"statements": [
														{
															"nativeSrc": "17072:12:16",
															"nodeType": "YulAssignment",
															"src": "17072:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "17079:5:16",
																"nodeType": "YulIdentifier",
																"src": "17079:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17072:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17072:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "17030:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17048:5:16",
														"nodeType": "YulTypedName",
														"src": "17048:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17058:3:16",
														"nodeType": "YulTypedName",
														"src": "17058:3:16",
														"type": ""
													}
												],
												"src": "17030:60:16"
											},
											{
												"body": {
													"nativeSrc": "17156:82:16",
													"nodeType": "YulBlock",
													"src": "17156:82:16",
													"statements": [
														{
															"nativeSrc": "17166:66:16",
															"nodeType": "YulAssignment",
															"src": "17166:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17224:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "17224:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "17206:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "17206:17:16"
																				},
																				"nativeSrc": "17206:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17206:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "17197:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "17197:8:16"
																		},
																		"nativeSrc": "17197:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17197:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17179:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "17179:17:16"
																},
																"nativeSrc": "17179:53:16",
																"nodeType": "YulFunctionCall",
																"src": "17179:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17166:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "17166:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "17096:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17136:5:16",
														"nodeType": "YulTypedName",
														"src": "17136:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17146:9:16",
														"nodeType": "YulTypedName",
														"src": "17146:9:16",
														"type": ""
													}
												],
												"src": "17096:142:16"
											},
											{
												"body": {
													"nativeSrc": "17291:28:16",
													"nodeType": "YulBlock",
													"src": "17291:28:16",
													"statements": [
														{
															"nativeSrc": "17301:12:16",
															"nodeType": "YulAssignment",
															"src": "17301:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "17308:5:16",
																"nodeType": "YulIdentifier",
																"src": "17308:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17301:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17301:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "17244:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17277:5:16",
														"nodeType": "YulTypedName",
														"src": "17277:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17287:3:16",
														"nodeType": "YulTypedName",
														"src": "17287:3:16",
														"type": ""
													}
												],
												"src": "17244:75:16"
											},
											{
												"body": {
													"nativeSrc": "17401:193:16",
													"nodeType": "YulBlock",
													"src": "17401:193:16",
													"statements": [
														{
															"nativeSrc": "17411:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "17411:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "17466:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "17466:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "17435:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "17435:30:16"
																},
																"nativeSrc": "17435:39:16",
																"nodeType": "YulFunctionCall",
																"src": "17435:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "17415:16:16",
																	"nodeType": "YulTypedName",
																	"src": "17415:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17490:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17490:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "17530:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "17530:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "17524:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "17524:5:16"
																				},
																				"nativeSrc": "17524:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17524:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "17537:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "17537:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "17569:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "17569:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "17545:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "17545:23:16"
																				},
																				"nativeSrc": "17545:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17545:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "17496:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "17496:27:16"
																		},
																		"nativeSrc": "17496:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17496:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "17483:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17483:6:16"
																},
																"nativeSrc": "17483:105:16",
																"nodeType": "YulFunctionCall",
																"src": "17483:105:16"
															},
															"nativeSrc": "17483:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "17483:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "17325:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17378:4:16",
														"nodeType": "YulTypedName",
														"src": "17378:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17384:6:16",
														"nodeType": "YulTypedName",
														"src": "17384:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "17392:7:16",
														"nodeType": "YulTypedName",
														"src": "17392:7:16",
														"type": ""
													}
												],
												"src": "17325:269:16"
											},
											{
												"body": {
													"nativeSrc": "17649:24:16",
													"nodeType": "YulBlock",
													"src": "17649:24:16",
													"statements": [
														{
															"nativeSrc": "17659:8:16",
															"nodeType": "YulAssignment",
															"src": "17659:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "17666:1:16",
																"nodeType": "YulLiteral",
																"src": "17666:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17659:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17659:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "17600:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17645:3:16",
														"nodeType": "YulTypedName",
														"src": "17645:3:16",
														"type": ""
													}
												],
												"src": "17600:73:16"
											},
											{
												"body": {
													"nativeSrc": "17732:136:16",
													"nodeType": "YulBlock",
													"src": "17732:136:16",
													"statements": [
														{
															"nativeSrc": "17742:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "17742:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "17756:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "17756:30:16"
																},
																"nativeSrc": "17756:32:16",
																"nodeType": "YulFunctionCall",
																"src": "17756:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "17746:6:16",
																	"nodeType": "YulTypedName",
																	"src": "17746:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17841:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17841:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "17847:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17847:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "17855:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17855:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "17797:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "17797:43:16"
																},
																"nativeSrc": "17797:65:16",
																"nodeType": "YulFunctionCall",
																"src": "17797:65:16"
															},
															"nativeSrc": "17797:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "17797:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "17679:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17718:4:16",
														"nodeType": "YulTypedName",
														"src": "17718:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17724:6:16",
														"nodeType": "YulTypedName",
														"src": "17724:6:16",
														"type": ""
													}
												],
												"src": "17679:189:16"
											},
											{
												"body": {
													"nativeSrc": "17924:136:16",
													"nodeType": "YulBlock",
													"src": "17924:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "17991:63:16",
																"nodeType": "YulBlock",
																"src": "17991:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18035:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "18035:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18042:1:16",
																					"nodeType": "YulLiteral",
																					"src": "18042:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "18005:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "18005:29:16"
																			},
																			"nativeSrc": "18005:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18005:39:16"
																		},
																		"nativeSrc": "18005:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "18005:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "17944:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17944:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "17951:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17951:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "17941:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "17941:2:16"
																},
																"nativeSrc": "17941:14:16",
																"nodeType": "YulFunctionCall",
																"src": "17941:14:16"
															},
															"nativeSrc": "17934:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17956:26:16",
																"nodeType": "YulBlock",
																"src": "17956:26:16",
																"statements": [
																	{
																		"nativeSrc": "17958:22:16",
																		"nodeType": "YulAssignment",
																		"src": "17958:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17971:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "17971:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17978:1:16",
																					"nodeType": "YulLiteral",
																					"src": "17978:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17967:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "17967:3:16"
																			},
																			"nativeSrc": "17967:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17967:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "17958:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "17958:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "17938:2:16",
																"nodeType": "YulBlock",
																"src": "17938:2:16",
																"statements": []
															},
															"src": "17934:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "17874:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "17912:5:16",
														"nodeType": "YulTypedName",
														"src": "17912:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17919:3:16",
														"nodeType": "YulTypedName",
														"src": "17919:3:16",
														"type": ""
													}
												],
												"src": "17874:186:16"
											},
											{
												"body": {
													"nativeSrc": "18145:464:16",
													"nodeType": "YulBlock",
													"src": "18145:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "18171:431:16",
																"nodeType": "YulBlock",
																"src": "18171:431:16",
																"statements": [
																	{
																		"nativeSrc": "18185:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18185:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "18233:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "18233:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "18201:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "18201:31:16"
																			},
																			"nativeSrc": "18201:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18201:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "18189:8:16",
																				"nodeType": "YulTypedName",
																				"src": "18189:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "18252:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18252:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "18275:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "18275:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "18303:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "18303:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "18285:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "18285:17:16"
																					},
																					"nativeSrc": "18285:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "18285:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18271:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "18271:3:16"
																			},
																			"nativeSrc": "18271:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18271:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "18256:11:16",
																				"nodeType": "YulTypedName",
																				"src": "18256:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18472:27:16",
																			"nodeType": "YulBlock",
																			"src": "18472:27:16",
																			"statements": [
																				{
																					"nativeSrc": "18474:23:16",
																					"nodeType": "YulAssignment",
																					"src": "18474:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "18489:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "18489:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "18474:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "18474:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "18456:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "18456:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18468:2:16",
																					"nodeType": "YulLiteral",
																					"src": "18468:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "18453:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "18453:2:16"
																			},
																			"nativeSrc": "18453:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18453:18:16"
																		},
																		"nativeSrc": "18450:49:16",
																		"nodeType": "YulIf",
																		"src": "18450:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "18541:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "18541:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "18558:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "18558:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "18586:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "18586:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "18568:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "18568:17:16"
																							},
																							"nativeSrc": "18568:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "18568:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18554:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "18554:3:16"
																					},
																					"nativeSrc": "18554:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "18554:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "18512:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "18512:28:16"
																			},
																			"nativeSrc": "18512:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18512:80:16"
																		},
																		"nativeSrc": "18512:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "18512:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "18162:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18162:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18167:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18167:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18159:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "18159:2:16"
																},
																"nativeSrc": "18159:11:16",
																"nodeType": "YulFunctionCall",
																"src": "18159:11:16"
															},
															"nativeSrc": "18156:446:16",
															"nodeType": "YulIf",
															"src": "18156:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "18066:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "18121:5:16",
														"nodeType": "YulTypedName",
														"src": "18121:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18128:3:16",
														"nodeType": "YulTypedName",
														"src": "18128:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "18133:10:16",
														"nodeType": "YulTypedName",
														"src": "18133:10:16",
														"type": ""
													}
												],
												"src": "18066:543:16"
											},
											{
												"body": {
													"nativeSrc": "18678:54:16",
													"nodeType": "YulBlock",
													"src": "18678:54:16",
													"statements": [
														{
															"nativeSrc": "18688:37:16",
															"nodeType": "YulAssignment",
															"src": "18688:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18713:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18713:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18719:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "18719:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "18709:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18709:3:16"
																},
																"nativeSrc": "18709:16:16",
																"nodeType": "YulFunctionCall",
																"src": "18709:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18688:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "18688:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "18615:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18653:4:16",
														"nodeType": "YulTypedName",
														"src": "18653:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18659:5:16",
														"nodeType": "YulTypedName",
														"src": "18659:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18669:8:16",
														"nodeType": "YulTypedName",
														"src": "18669:8:16",
														"type": ""
													}
												],
												"src": "18615:117:16"
											},
											{
												"body": {
													"nativeSrc": "18789:118:16",
													"nodeType": "YulBlock",
													"src": "18789:118:16",
													"statements": [
														{
															"nativeSrc": "18799:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18799:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18848:1:16",
																						"nodeType": "YulLiteral",
																						"src": "18848:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "18851:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "18851:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "18844:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "18844:3:16"
																				},
																				"nativeSrc": "18844:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18844:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18863:1:16",
																						"nodeType": "YulLiteral",
																						"src": "18863:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "18859:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "18859:3:16"
																				},
																				"nativeSrc": "18859:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18859:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "18815:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "18815:28:16"
																		},
																		"nativeSrc": "18815:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18815:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "18811:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18811:3:16"
																},
																"nativeSrc": "18811:56:16",
																"nodeType": "YulFunctionCall",
																"src": "18811:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18803:4:16",
																	"nodeType": "YulTypedName",
																	"src": "18803:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18876:25:16",
															"nodeType": "YulAssignment",
															"src": "18876:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18890:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18890:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "18896:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18896:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18886:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18886:3:16"
																},
																"nativeSrc": "18886:15:16",
																"nodeType": "YulFunctionCall",
																"src": "18886:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18876:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "18876:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "18738:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18766:4:16",
														"nodeType": "YulTypedName",
														"src": "18766:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "18772:5:16",
														"nodeType": "YulTypedName",
														"src": "18772:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18782:6:16",
														"nodeType": "YulTypedName",
														"src": "18782:6:16",
														"type": ""
													}
												],
												"src": "18738:169:16"
											},
											{
												"body": {
													"nativeSrc": "18993:214:16",
													"nodeType": "YulBlock",
													"src": "18993:214:16",
													"statements": [
														{
															"nativeSrc": "19126:37:16",
															"nodeType": "YulAssignment",
															"src": "19126:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19153:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19153:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "19159:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19159:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "19134:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "19134:18:16"
																},
																"nativeSrc": "19134:29:16",
																"nodeType": "YulFunctionCall",
																"src": "19134:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19126:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "19126:4:16"
																}
															]
														},
														{
															"nativeSrc": "19172:29:16",
															"nodeType": "YulAssignment",
															"src": "19172:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19183:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19183:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19193:1:16",
																				"nodeType": "YulLiteral",
																				"src": "19193:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "19196:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "19196:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "19189:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19189:3:16"
																		},
																		"nativeSrc": "19189:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19189:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19180:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "19180:2:16"
																},
																"nativeSrc": "19180:21:16",
																"nodeType": "YulFunctionCall",
																"src": "19180:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "19172:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "19172:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "18912:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18974:4:16",
														"nodeType": "YulTypedName",
														"src": "18974:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18980:3:16",
														"nodeType": "YulTypedName",
														"src": "18980:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "18988:4:16",
														"nodeType": "YulTypedName",
														"src": "18988:4:16",
														"type": ""
													}
												],
												"src": "18912:295:16"
											},
											{
												"body": {
													"nativeSrc": "19304:1303:16",
													"nodeType": "YulBlock",
													"src": "19304:1303:16",
													"statements": [
														{
															"nativeSrc": "19315:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19315:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19362:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19362:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19329:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "19329:32:16"
																},
																"nativeSrc": "19329:37:16",
																"nodeType": "YulFunctionCall",
																"src": "19329:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "19319:6:16",
																	"nodeType": "YulTypedName",
																	"src": "19319:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19451:22:16",
																"nodeType": "YulBlock",
																"src": "19451:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19453:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "19453:16:16"
																			},
																			"nativeSrc": "19453:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19453:18:16"
																		},
																		"nativeSrc": "19453:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "19453:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19423:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19423:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19431:18:16",
																		"nodeType": "YulLiteral",
																		"src": "19431:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19420:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "19420:2:16"
																},
																"nativeSrc": "19420:30:16",
																"nodeType": "YulFunctionCall",
																"src": "19420:30:16"
															},
															"nativeSrc": "19417:56:16",
															"nodeType": "YulIf",
															"src": "19417:56:16"
														},
														{
															"nativeSrc": "19483:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19483:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "19529:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "19529:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "19523:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "19523:5:16"
																		},
																		"nativeSrc": "19523:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19523:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19497:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "19497:25:16"
																},
																"nativeSrc": "19497:38:16",
																"nodeType": "YulFunctionCall",
																"src": "19497:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "19487:6:16",
																	"nodeType": "YulTypedName",
																	"src": "19487:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19628:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19628:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "19634:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19634:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "19642:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19642:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "19582:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "19582:45:16"
																},
																"nativeSrc": "19582:67:16",
																"nodeType": "YulFunctionCall",
																"src": "19582:67:16"
															},
															"nativeSrc": "19582:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "19582:67:16"
														},
														{
															"nativeSrc": "19659:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19659:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "19676:1:16",
																"nodeType": "YulLiteral",
																"src": "19676:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19663:9:16",
																	"nodeType": "YulTypedName",
																	"src": "19663:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19687:17:16",
															"nodeType": "YulAssignment",
															"src": "19687:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "19700:4:16",
																"nodeType": "YulLiteral",
																"src": "19700:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19687:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "19687:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19751:611:16",
																		"nodeType": "YulBlock",
																		"src": "19751:611:16",
																		"statements": [
																			{
																				"nativeSrc": "19765:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19765:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "19784:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "19784:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19796:4:16",
																									"nodeType": "YulLiteral",
																									"src": "19796:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19792:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "19792:3:16"
																							},
																							"nativeSrc": "19792:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "19792:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "19780:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "19780:3:16"
																					},
																					"nativeSrc": "19780:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19780:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19769:7:16",
																						"nodeType": "YulTypedName",
																						"src": "19769:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19816:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19816:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19862:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "19862:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "19830:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "19830:31:16"
																					},
																					"nativeSrc": "19830:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19830:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "19820:6:16",
																						"nodeType": "YulTypedName",
																						"src": "19820:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19880:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19880:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19889:1:16",
																					"nodeType": "YulLiteral",
																					"src": "19889:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "19884:1:16",
																						"nodeType": "YulTypedName",
																						"src": "19884:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19948:163:16",
																					"nodeType": "YulBlock",
																					"src": "19948:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19973:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "19973:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "19991:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "19991:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "19996:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "19996:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "19987:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "19987:3:16"
																												},
																												"nativeSrc": "19987:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "19987:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "19981:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "19981:5:16"
																										},
																										"nativeSrc": "19981:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "19981:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19966:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "19966:6:16"
																								},
																								"nativeSrc": "19966:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19966:42:16"
																							},
																							"nativeSrc": "19966:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "19966:42:16"
																						},
																						{
																							"nativeSrc": "20025:24:16",
																							"nodeType": "YulAssignment",
																							"src": "20025:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20039:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "20039:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20047:1:16",
																										"nodeType": "YulLiteral",
																										"src": "20047:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20035:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "20035:3:16"
																								},
																								"nativeSrc": "20035:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20035:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "20025:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "20025:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "20066:31:16",
																							"nodeType": "YulAssignment",
																							"src": "20066:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "20083:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "20083:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20094:2:16",
																										"nodeType": "YulLiteral",
																										"src": "20094:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20079:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "20079:3:16"
																								},
																								"nativeSrc": "20079:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20079:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "20066:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "20066:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "19914:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "19914:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19917:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "19917:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19911:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "19911:2:16"
																					},
																					"nativeSrc": "19911:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19911:14:16"
																				},
																				"nativeSrc": "19903:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "19926:21:16",
																					"nodeType": "YulBlock",
																					"src": "19926:21:16",
																					"statements": [
																						{
																							"nativeSrc": "19928:17:16",
																							"nodeType": "YulAssignment",
																							"src": "19928:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "19937:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "19937:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19940:4:16",
																										"nodeType": "YulLiteral",
																										"src": "19940:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19933:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "19933:3:16"
																								},
																								"nativeSrc": "19933:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19933:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "19928:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "19928:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "19907:3:16",
																					"nodeType": "YulBlock",
																					"src": "19907:3:16",
																					"statements": []
																				},
																				"src": "19903:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "20147:156:16",
																					"nodeType": "YulBlock",
																					"src": "20147:156:16",
																					"statements": [
																						{
																							"nativeSrc": "20165:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "20165:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20192:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "20192:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20197:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "20197:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20188:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "20188:3:16"
																										},
																										"nativeSrc": "20188:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "20188:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20182:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "20182:5:16"
																								},
																								"nativeSrc": "20182:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20182:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "20169:9:16",
																									"nodeType": "YulTypedName",
																									"src": "20169:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20232:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "20232:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "20259:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "20259:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "20274:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "20274:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "20282:4:16",
																														"nodeType": "YulLiteral",
																														"src": "20282:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "20270:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "20270:3:16"
																												},
																												"nativeSrc": "20270:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "20270:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "20240:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "20240:18:16"
																										},
																										"nativeSrc": "20240:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "20240:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20225:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "20225:6:16"
																								},
																								"nativeSrc": "20225:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20225:64:16"
																							},
																							"nativeSrc": "20225:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "20225:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20130:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "20130:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "20139:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "20139:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20127:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "20127:2:16"
																					},
																					"nativeSrc": "20127:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20127:19:16"
																				},
																				"nativeSrc": "20124:179:16",
																				"nodeType": "YulIf",
																				"src": "20124:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20323:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "20323:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "20337:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "20337:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "20345:1:16",
																											"nodeType": "YulLiteral",
																											"src": "20345:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "20333:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "20333:3:16"
																									},
																									"nativeSrc": "20333:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "20333:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "20349:1:16",
																									"nodeType": "YulLiteral",
																									"src": "20349:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20329:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "20329:3:16"
																							},
																							"nativeSrc": "20329:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "20329:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20316:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "20316:6:16"
																					},
																					"nativeSrc": "20316:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20316:36:16"
																				},
																				"nativeSrc": "20316:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "20316:36:16"
																			}
																		]
																	},
																	"nativeSrc": "19744:618:16",
																	"nodeType": "YulCase",
																	"src": "19744:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19749:1:16",
																		"nodeType": "YulLiteral",
																		"src": "19749:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20379:222:16",
																		"nodeType": "YulBlock",
																		"src": "20379:222:16",
																		"statements": [
																			{
																				"nativeSrc": "20393:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20393:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20406:1:16",
																					"nodeType": "YulLiteral",
																					"src": "20406:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "20397:5:16",
																						"nodeType": "YulTypedName",
																						"src": "20397:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20430:67:16",
																					"nodeType": "YulBlock",
																					"src": "20430:67:16",
																					"statements": [
																						{
																							"nativeSrc": "20448:35:16",
																							"nodeType": "YulAssignment",
																							"src": "20448:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20467:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "20467:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20472:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "20472:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20463:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "20463:3:16"
																										},
																										"nativeSrc": "20463:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "20463:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20457:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "20457:5:16"
																								},
																								"nativeSrc": "20457:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20457:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20448:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "20448:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "20423:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "20423:6:16"
																				},
																				"nativeSrc": "20420:77:16",
																				"nodeType": "YulIf",
																				"src": "20420:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20517:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "20517:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "20576:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "20576:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "20583:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "20583:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "20523:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "20523:52:16"
																							},
																							"nativeSrc": "20523:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "20523:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20510:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "20510:6:16"
																					},
																					"nativeSrc": "20510:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20510:81:16"
																				},
																				"nativeSrc": "20510:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "20510:81:16"
																			}
																		]
																	},
																	"nativeSrc": "20371:230:16",
																	"nodeType": "YulCase",
																	"src": "20371:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19724:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19724:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19732:2:16",
																		"nodeType": "YulLiteral",
																		"src": "19732:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19721:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "19721:2:16"
																},
																"nativeSrc": "19721:14:16",
																"nodeType": "YulFunctionCall",
																"src": "19721:14:16"
															},
															"nativeSrc": "19714:887:16",
															"nodeType": "YulSwitch",
															"src": "19714:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "19212:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19293:4:16",
														"nodeType": "YulTypedName",
														"src": "19293:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "19299:3:16",
														"nodeType": "YulTypedName",
														"src": "19299:3:16",
														"type": ""
													}
												],
												"src": "19212:1395:16"
											},
											{
												"body": {
													"nativeSrc": "20739:206:16",
													"nodeType": "YulBlock",
													"src": "20739:206:16",
													"statements": [
														{
															"nativeSrc": "20749:26:16",
															"nodeType": "YulAssignment",
															"src": "20749:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20761:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "20761:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20772:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20772:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20757:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20757:3:16"
																},
																"nativeSrc": "20757:18:16",
																"nodeType": "YulFunctionCall",
																"src": "20757:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20749:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20749:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20829:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20829:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20842:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20842:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20853:1:16",
																				"nodeType": "YulLiteral",
																				"src": "20853:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20838:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20838:3:16"
																		},
																		"nativeSrc": "20838:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20838:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20785:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "20785:43:16"
																},
																"nativeSrc": "20785:71:16",
																"nodeType": "YulFunctionCall",
																"src": "20785:71:16"
															},
															"nativeSrc": "20785:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "20785:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20910:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20910:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20923:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20923:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20934:2:16",
																				"nodeType": "YulLiteral",
																				"src": "20934:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20919:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20919:3:16"
																		},
																		"nativeSrc": "20919:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20919:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20866:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "20866:43:16"
																},
																"nativeSrc": "20866:72:16",
																"nodeType": "YulFunctionCall",
																"src": "20866:72:16"
															},
															"nativeSrc": "20866:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "20866:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20613:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20703:9:16",
														"nodeType": "YulTypedName",
														"src": "20703:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20715:6:16",
														"nodeType": "YulTypedName",
														"src": "20715:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20723:6:16",
														"nodeType": "YulTypedName",
														"src": "20723:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20734:4:16",
														"nodeType": "YulTypedName",
														"src": "20734:4:16",
														"type": ""
													}
												],
												"src": "20613:332:16"
											},
											{
												"body": {
													"nativeSrc": "20979:152:16",
													"nodeType": "YulBlock",
													"src": "20979:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20996:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20996:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20999:77:16",
																		"nodeType": "YulLiteral",
																		"src": "20999:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20989:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20989:6:16"
																},
																"nativeSrc": "20989:88:16",
																"nodeType": "YulFunctionCall",
																"src": "20989:88:16"
															},
															"nativeSrc": "20989:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "20989:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21093:1:16",
																		"nodeType": "YulLiteral",
																		"src": "21093:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21096:4:16",
																		"nodeType": "YulLiteral",
																		"src": "21096:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21086:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21086:6:16"
																},
																"nativeSrc": "21086:15:16",
																"nodeType": "YulFunctionCall",
																"src": "21086:15:16"
															},
															"nativeSrc": "21086:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "21086:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21117:1:16",
																		"nodeType": "YulLiteral",
																		"src": "21117:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21120:4:16",
																		"nodeType": "YulLiteral",
																		"src": "21120:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21110:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21110:6:16"
																},
																"nativeSrc": "21110:15:16",
																"nodeType": "YulFunctionCall",
																"src": "21110:15:16"
															},
															"nativeSrc": "21110:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "21110:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "20951:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "20951:180:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e8575f3560e01c806370a082311161008a578063b88d4fde11610064578063b88d4fde14610258578063c87b56dd14610274578063d85d3d27146102a4578063e985e9c5146102c0576100e8565b806370a08231146101ee57806395d89b411461021e578063a22cb4651461023c576100e8565b8063095ea7b3116100c6578063095ea7b31461016a57806323b872dd1461018657806342842e0e146101a25780636352211e146101be576100e8565b806301ffc9a7146100ec57806306fdde031461011c578063081812fc1461013a575b5f80fd5b6101066004803603810190610101919061182e565b6102f0565b6040516101139190611873565b60405180910390f35b610124610350565b6040516101319190611916565b60405180910390f35b610154600480360381019061014f9190611969565b6103df565b60405161016191906119d3565b60405180910390f35b610184600480360381019061017f9190611a16565b6103fa565b005b6101a0600480360381019061019b9190611a54565b610410565b005b6101bc60048036038101906101b79190611a54565b61050f565b005b6101d860048036038101906101d39190611969565b61052e565b6040516101e591906119d3565b60405180910390f35b61020860048036038101906102039190611aa4565b61053f565b6040516102159190611ade565b60405180910390f35b6102266105f5565b6040516102339190611916565b60405180910390f35b61025660048036038101906102519190611b21565b610685565b005b610272600480360381019061026d9190611c8b565b61069b565b005b61028e60048036038101906102899190611969565b6106b8565b60405161029b9190611916565b60405180910390f35b6102be60048036038101906102b99190611da9565b6107c3565b005b6102da60048036038101906102d59190611df0565b61085b565b6040516102e79190611873565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103495750610348826108e9565b5b9050919050565b60605f805461035e90611e5b565b80601f016020809104026020016040519081016040528092919081815260200182805461038a90611e5b565b80156103d55780601f106103ac576101008083540402835291602001916103d5565b820191905f5260205f20905b8154815290600101906020018083116103b857829003601f168201915b5050505050905090565b5f6103e9826109ca565b506103f382610a50565b9050919050565b61040c8282610407610a89565b610a90565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610480575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161047791906119d3565b60405180910390fd5b5f610493838361048e610a89565b610aa2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610509578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161050093929190611e8b565b60405180910390fd5b50505050565b61052983838360405180602001604052805f81525061069b565b505050565b5f610538826109ca565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105b0575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105a791906119d3565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461060490611e5b565b80601f016020809104026020016040519081016040528092919081815260200182805461063090611e5b565b801561067b5780601f106106525761010080835404028352916020019161067b565b820191905f5260205f20905b81548152906001019060200180831161065e57829003601f168201915b5050505050905090565b610697610690610a89565b8383610cad565b5050565b6106a6848484610410565b6106b284848484610e16565b50505050565b60606106c3826109ca565b505f60065f8481526020019081526020015f2080546106e190611e5b565b80601f016020809104026020016040519081016040528092919081815260200182805461070d90611e5b565b80156107585780601f1061072f57610100808354040283529160200191610758565b820191905f5260205f20905b81548152906001019060200180831161073b57829003601f168201915b505050505090505f610768610fc8565b90505f81510361077c5781925050506107be565b5f825111156107b0578082604051602001610798929190611efa565b604051602081830303815290604052925050506107be565b6107b984610fde565b925050505b919050565b60075f8154809291906107d590611f4a565b91905055505f60075490506107ea3382611044565b6107f48183611061565b61082060085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001610685565b7fd9dc24857f317ed9abbbb42e920ede0104231eb1d3d70236a74887ffaf1598688160405161084f9190611ade565b60405180910390a15050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109b357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806109c357506109c2826110bb565b5b9050919050565b5f806109d583611124565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a4757826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a3e9190611ade565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610a9d838383600161115d565b505050565b5f80610aad84611124565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610aee57610aed81848661131c565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b7957610b2d5f855f8061115d565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610bf857600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d1d57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d1491906119d3565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e099190611873565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610fc2578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610e59610a89565b8685856040518563ffffffff1660e01b8152600401610e7b9493929190611fe3565b6020604051808303815f875af1925050508015610eb657506040513d601f19601f82011682018060405250810190610eb39190612041565b60015b610f37573d805f8114610ee4576040519150601f19603f3d011682016040523d82523d5f602084013e610ee9565b606091505b505f815103610f2f57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f2691906119d3565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610fc057836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fb791906119d3565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b6060610fe9826109ca565b505f610ff3610fc8565b90505f8151116110115760405180602001604052805f81525061103c565b8061101b846113df565b60405160200161102c929190611efa565b6040516020818303038152906040525b915050919050565b61105d828260405180602001604052805f8152506114a9565b5050565b8060065f8481526020019081526020015f20908161107f9190612209565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516110af9190611ade565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061119557505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156112c7575f6111a4846109ca565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561120e57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611221575061121f818461085b565b155b1561126357826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161125a91906119d3565b60405180910390fd5b81156112c557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6113278383836114c4565b6113da575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361139b57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016113929190611ade565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016113d19291906122d8565b60405180910390fd5b505050565b60605f60016113ed84611584565b0190505f8167ffffffffffffffff81111561140b5761140a611b67565b5b6040519080825280601f01601f19166020018201604052801561143d5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561149e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611493576114926122ff565b5b0494505f850361144a575b819350505050919050565b6114b383836116d5565b6114bf5f848484610e16565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561157b57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061153c575061153b848461085b565b5b8061157a57508273ffffffffffffffffffffffffffffffffffffffff1661156283610a50565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106115e0577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816115d6576115d56122ff565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061161d576d04ee2d6d415b85acef81000000008381611613576116126122ff565b5b0492506020810190505b662386f26fc10000831061164c57662386f26fc100008381611642576116416122ff565b5b0492506010810190505b6305f5e1008310611675576305f5e100838161166b5761166a6122ff565b5b0492506008810190505b612710831061169a5761271083816116905761168f6122ff565b5b0492506004810190505b606483106116bd57606483816116b3576116b26122ff565b5b0492506002810190505b600a83106116cc576001810190505b80915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611745575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161173c91906119d3565b60405180910390fd5b5f61175183835f610aa2565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117c3575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016117ba91906119d3565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61180d816117d9565b8114611817575f80fd5b50565b5f8135905061182881611804565b92915050565b5f60208284031215611843576118426117d1565b5b5f6118508482850161181a565b91505092915050565b5f8115159050919050565b61186d81611859565b82525050565b5f6020820190506118865f830184611864565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156118c35780820151818401526020810190506118a8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6118e88261188c565b6118f28185611896565b93506119028185602086016118a6565b61190b816118ce565b840191505092915050565b5f6020820190508181035f83015261192e81846118de565b905092915050565b5f819050919050565b61194881611936565b8114611952575f80fd5b50565b5f813590506119638161193f565b92915050565b5f6020828403121561197e5761197d6117d1565b5b5f61198b84828501611955565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119bd82611994565b9050919050565b6119cd816119b3565b82525050565b5f6020820190506119e65f8301846119c4565b92915050565b6119f5816119b3565b81146119ff575f80fd5b50565b5f81359050611a10816119ec565b92915050565b5f8060408385031215611a2c57611a2b6117d1565b5b5f611a3985828601611a02565b9250506020611a4a85828601611955565b9150509250929050565b5f805f60608486031215611a6b57611a6a6117d1565b5b5f611a7886828701611a02565b9350506020611a8986828701611a02565b9250506040611a9a86828701611955565b9150509250925092565b5f60208284031215611ab957611ab86117d1565b5b5f611ac684828501611a02565b91505092915050565b611ad881611936565b82525050565b5f602082019050611af15f830184611acf565b92915050565b611b0081611859565b8114611b0a575f80fd5b50565b5f81359050611b1b81611af7565b92915050565b5f8060408385031215611b3757611b366117d1565b5b5f611b4485828601611a02565b9250506020611b5585828601611b0d565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b9d826118ce565b810181811067ffffffffffffffff82111715611bbc57611bbb611b67565b5b80604052505050565b5f611bce6117c8565b9050611bda8282611b94565b919050565b5f67ffffffffffffffff821115611bf957611bf8611b67565b5b611c02826118ce565b9050602081019050919050565b828183375f83830152505050565b5f611c2f611c2a84611bdf565b611bc5565b905082815260208101848484011115611c4b57611c4a611b63565b5b611c56848285611c0f565b509392505050565b5f82601f830112611c7257611c71611b5f565b5b8135611c82848260208601611c1d565b91505092915050565b5f805f8060808587031215611ca357611ca26117d1565b5b5f611cb087828801611a02565b9450506020611cc187828801611a02565b9350506040611cd287828801611955565b925050606085013567ffffffffffffffff811115611cf357611cf26117d5565b5b611cff87828801611c5e565b91505092959194509250565b5f67ffffffffffffffff821115611d2557611d24611b67565b5b611d2e826118ce565b9050602081019050919050565b5f611d4d611d4884611d0b565b611bc5565b905082815260208101848484011115611d6957611d68611b63565b5b611d74848285611c0f565b509392505050565b5f82601f830112611d9057611d8f611b5f565b5b8135611da0848260208601611d3b565b91505092915050565b5f60208284031215611dbe57611dbd6117d1565b5b5f82013567ffffffffffffffff811115611ddb57611dda6117d5565b5b611de784828501611d7c565b91505092915050565b5f8060408385031215611e0657611e056117d1565b5b5f611e1385828601611a02565b9250506020611e2485828601611a02565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e7257607f821691505b602082108103611e8557611e84611e2e565b5b50919050565b5f606082019050611e9e5f8301866119c4565b611eab6020830185611acf565b611eb860408301846119c4565b949350505050565b5f81905092915050565b5f611ed48261188c565b611ede8185611ec0565b9350611eee8185602086016118a6565b80840191505092915050565b5f611f058285611eca565b9150611f118284611eca565b91508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f5482611936565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f8657611f85611f1d565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f611fb582611f91565b611fbf8185611f9b565b9350611fcf8185602086016118a6565b611fd8816118ce565b840191505092915050565b5f608082019050611ff65f8301876119c4565b61200360208301866119c4565b6120106040830185611acf565b81810360608301526120228184611fab565b905095945050505050565b5f8151905061203b81611804565b92915050565b5f60208284031215612056576120556117d1565b5b5f6120638482850161202d565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120c87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261208d565b6120d2868361208d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61210d61210861210384611936565b6120ea565b611936565b9050919050565b5f819050919050565b612126836120f3565b61213a61213282612114565b848454612099565b825550505050565b5f90565b61214e612142565b61215981848461211d565b505050565b5b8181101561217c576121715f82612146565b60018101905061215f565b5050565b601f8211156121c1576121928161206c565b61219b8461207e565b810160208510156121aa578190505b6121be6121b68561207e565b83018261215e565b50505b505050565b5f82821c905092915050565b5f6121e15f19846008026121c6565b1980831691505092915050565b5f6121f983836121d2565b9150826002028217905092915050565b6122128261188c565b67ffffffffffffffff81111561222b5761222a611b67565b5b6122358254611e5b565b612240828285612180565b5f60209050601f831160018114612271575f841561225f578287015190505b61226985826121ee565b8655506122d0565b601f19841661227f8661206c565b5f5b828110156122a657848901518255600182019150602085019450602081019050612281565b868310156122c357848901516122bf601f8916826121d2565b8355505b6001600288020188555050505b505050505050565b5f6040820190506122eb5f8301856119c4565b6122f86020830184611acf565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220d2e6ffb43e1858a6ddfa48ae867cf9cbb7e49452b5022155f4eb02b7c827b7fe64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C0 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1BE JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x349 JUMPI POP PUSH2 0x348 DUP3 PUSH2 0x8E9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x35E SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3E9 DUP3 PUSH2 0x9CA JUMP JUMPDEST POP PUSH2 0x3F3 DUP3 PUSH2 0xA50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40C DUP3 DUP3 PUSH2 0x407 PUSH2 0xA89 JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x480 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x493 DUP4 DUP4 PUSH2 0x48E PUSH2 0xA89 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x509 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x529 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x69B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x538 DUP3 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x604 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x630 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x652 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x65E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x697 PUSH2 0x690 PUSH2 0xA89 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xCAD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6A6 DUP5 DUP5 DUP5 PUSH2 0x410 JUMP JUMPDEST PUSH2 0x6B2 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE16 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6C3 DUP3 PUSH2 0x9CA JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x6E1 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x70D SWAP1 PUSH2 0x1E5B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x758 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x72F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x758 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x73B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x768 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x77C JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x7B0 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x798 SWAP3 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x7B9 DUP5 PUSH2 0xFDE JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7D5 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x7EA CALLER DUP3 PUSH2 0x1044 JUMP JUMPDEST PUSH2 0x7F4 DUP2 DUP4 PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x820 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH2 0x685 JUMP JUMPDEST PUSH32 0xD9DC24857F317ED9ABBBB42E920EDE0104231EB1D3D70236A74887FFAF159868 DUP2 PUSH1 0x40 MLOAD PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9B3 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x9C3 JUMPI POP PUSH2 0x9C2 DUP3 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9D5 DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA47 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA9D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x115D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAAD DUP5 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAEE JUMPI PUSH2 0xAED DUP2 DUP5 DUP7 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB79 JUMPI PUSH2 0xB2D PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF8 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xFC2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xE59 PUSH2 0xA89 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEB6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB3 SWAP2 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF37 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xF2F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xFC0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFE9 DUP3 PUSH2 0x9CA JUMP JUMPDEST POP PUSH0 PUSH2 0xFF3 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1011 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x103C JUMP JUMPDEST DUP1 PUSH2 0x101B DUP5 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x102C SWAP3 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x14A9 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x2209 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1195 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x12C7 JUMPI PUSH0 PUSH2 0x11A4 DUP5 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x120E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1221 JUMPI POP PUSH2 0x121F DUP2 DUP5 PUSH2 0x85B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1263 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125A SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x12C5 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1327 DUP4 DUP4 DUP4 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x13DA JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x139B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1392 SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D1 SWAP3 SWAP2 SWAP1 PUSH2 0x22D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x13ED DUP5 PUSH2 0x1584 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x140B JUMPI PUSH2 0x140A PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x143D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x149E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1493 JUMPI PUSH2 0x1492 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x144A JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B3 DUP4 DUP4 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x14BF PUSH0 DUP5 DUP5 DUP5 PUSH2 0xE16 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x157B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x153C JUMPI POP PUSH2 0x153B DUP5 DUP5 PUSH2 0x85B JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x157A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1562 DUP4 PUSH2 0xA50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x15E0 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x15D6 JUMPI PUSH2 0x15D5 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x161D JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1613 JUMPI PUSH2 0x1612 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x164C JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1642 JUMPI PUSH2 0x1641 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1675 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x166B JUMPI PUSH2 0x166A PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x169A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1690 JUMPI PUSH2 0x168F PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x16BD JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x16B3 JUMPI PUSH2 0x16B2 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x16CC JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1745 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173C SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1751 DUP4 DUP4 PUSH0 PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17C3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17BA SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180D DUP2 PUSH2 0x17D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1817 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1828 DUP2 PUSH2 0x1804 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1843 JUMPI PUSH2 0x1842 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1850 DUP5 DUP3 DUP6 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186D DUP2 PUSH2 0x1859 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1886 PUSH0 DUP4 ADD DUP5 PUSH2 0x1864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18C3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18A8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18E8 DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH2 0x18F2 DUP2 DUP6 PUSH2 0x1896 JUMP JUMPDEST SWAP4 POP PUSH2 0x1902 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x190B DUP2 PUSH2 0x18CE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x192E DUP2 DUP5 PUSH2 0x18DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1948 DUP2 PUSH2 0x1936 JUMP JUMPDEST DUP2 EQ PUSH2 0x1952 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1963 DUP2 PUSH2 0x193F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197E JUMPI PUSH2 0x197D PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198B DUP5 DUP3 DUP6 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19BD DUP3 PUSH2 0x1994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19F5 DUP2 PUSH2 0x19B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x19FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A10 DUP2 PUSH2 0x19EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2C JUMPI PUSH2 0x1A2B PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A39 DUP6 DUP3 DUP7 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A4A DUP6 DUP3 DUP7 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A6B JUMPI PUSH2 0x1A6A PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A78 DUP7 DUP3 DUP8 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A89 DUP7 DUP3 DUP8 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A9A DUP7 DUP3 DUP8 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB9 JUMPI PUSH2 0x1AB8 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC6 DUP5 DUP3 DUP6 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD8 DUP2 PUSH2 0x1936 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ACF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B00 DUP2 PUSH2 0x1859 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B1B DUP2 PUSH2 0x1AF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B37 JUMPI PUSH2 0x1B36 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B44 DUP6 DUP3 DUP7 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B55 DUP6 DUP3 DUP7 ADD PUSH2 0x1B0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B9D DUP3 PUSH2 0x18CE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BBC JUMPI PUSH2 0x1BBB PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCE PUSH2 0x17C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BDA DUP3 DUP3 PUSH2 0x1B94 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH2 0x1C02 DUP3 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2F PUSH2 0x1C2A DUP5 PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C4B JUMPI PUSH2 0x1C4A PUSH2 0x1B63 JUMP JUMPDEST JUMPDEST PUSH2 0x1C56 DUP5 DUP3 DUP6 PUSH2 0x1C0F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C72 JUMPI PUSH2 0x1C71 PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C82 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA2 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB0 DUP8 DUP3 DUP9 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1CC1 DUP8 DUP3 DUP9 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1CD2 DUP8 DUP3 DUP9 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF3 JUMPI PUSH2 0x1CF2 PUSH2 0x17D5 JUMP JUMPDEST JUMPDEST PUSH2 0x1CFF DUP8 DUP3 DUP9 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D25 JUMPI PUSH2 0x1D24 PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH2 0x1D2E DUP3 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4D PUSH2 0x1D48 DUP5 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D69 JUMPI PUSH2 0x1D68 PUSH2 0x1B63 JUMP JUMPDEST JUMPDEST PUSH2 0x1D74 DUP5 DUP3 DUP6 PUSH2 0x1C0F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D90 JUMPI PUSH2 0x1D8F PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DA0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DBE JUMPI PUSH2 0x1DBD PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDB JUMPI PUSH2 0x1DDA PUSH2 0x17D5 JUMP JUMPDEST JUMPDEST PUSH2 0x1DE7 DUP5 DUP3 DUP6 ADD PUSH2 0x1D7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E06 JUMPI PUSH2 0x1E05 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E13 DUP6 DUP3 DUP7 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E24 DUP6 DUP3 DUP7 ADD PUSH2 0x1A02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E72 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E85 JUMPI PUSH2 0x1E84 PUSH2 0x1E2E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E9E PUSH0 DUP4 ADD DUP7 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x1EAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0x1EB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED4 DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH2 0x1EDE DUP2 DUP6 PUSH2 0x1EC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EEE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F05 DUP3 DUP6 PUSH2 0x1ECA JUMP JUMPDEST SWAP2 POP PUSH2 0x1F11 DUP3 DUP5 PUSH2 0x1ECA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F54 DUP3 PUSH2 0x1936 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1F86 JUMPI PUSH2 0x1F85 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB5 DUP3 PUSH2 0x1F91 JUMP JUMPDEST PUSH2 0x1FBF DUP2 DUP6 PUSH2 0x1F9B JUMP JUMPDEST SWAP4 POP PUSH2 0x1FCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x1FD8 DUP2 PUSH2 0x18CE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FF6 PUSH0 DUP4 ADD DUP8 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x2003 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x2010 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1ACF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2022 DUP2 DUP5 PUSH2 0x1FAB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x203B DUP2 PUSH2 0x1804 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2056 JUMPI PUSH2 0x2055 PUSH2 0x17D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2063 DUP5 DUP3 DUP6 ADD PUSH2 0x202D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x20C8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x208D JUMP JUMPDEST PUSH2 0x20D2 DUP7 DUP4 PUSH2 0x208D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x210D PUSH2 0x2108 PUSH2 0x2103 DUP5 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x1936 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2126 DUP4 PUSH2 0x20F3 JUMP JUMPDEST PUSH2 0x213A PUSH2 0x2132 DUP3 PUSH2 0x2114 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2099 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x214E PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x2159 DUP2 DUP5 DUP5 PUSH2 0x211D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x217C JUMPI PUSH2 0x2171 PUSH0 DUP3 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x215F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x21C1 JUMPI PUSH2 0x2192 DUP2 PUSH2 0x206C JUMP JUMPDEST PUSH2 0x219B DUP5 PUSH2 0x207E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x21AA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x21BE PUSH2 0x21B6 DUP6 PUSH2 0x207E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x215E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21E1 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x21C6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21F9 DUP4 DUP4 PUSH2 0x21D2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2212 DUP3 PUSH2 0x188C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x222B JUMPI PUSH2 0x222A PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH2 0x2235 DUP3 SLOAD PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x2240 DUP3 DUP3 DUP6 PUSH2 0x2180 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2271 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x225F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2269 DUP6 DUP3 PUSH2 0x21EE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x227F DUP7 PUSH2 0x206C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22A6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2281 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x22C3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x22BF PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x21D2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22EB PUSH0 DUP4 ADD DUP6 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x22F8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ACF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xE6 SELFDESTRUCT 0xB4 RETURNDATACOPY XOR PC 0xA6 0xDD STATICCALL BASEFEE 0xAE DUP7 PUSH29 0xF9CBB7E49452B5022155F4EB02B7C827B7FE64736F6C63430008160033 ",
							"sourceMap": "202:559:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;963:209:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2438:91:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3429:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4279:588;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4938:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2251:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1976:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2598:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3840:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5143:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1243:609:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;485:273:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4057:155:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;963:209:7;1065:4;778:10;771:18;;1089:35;;;:11;:35;;;;:75;;;;1128:36;1152:11;1128:23;:36::i;:::-;1089:75;1082:82;;963:209;;;:::o;2438:91:4:-;2483:13;2516:5;2509:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2438:91;:::o;3610:158::-;3677:7;3697:22;3711:7;3697:13;:22::i;:::-;;3739:21;3752:7;3739:12;:21::i;:::-;3732:28;;3610:158;;;:::o;3429:115::-;3501:35;3510:2;3514:7;3523:12;:10;:12::i;:::-;3501:8;:35::i;:::-;3429:115;;:::o;4279:588::-;4388:1;4374:16;;:2;:16;;;4370:89;;4444:1;4414:33;;;;;;;;;;;:::i;:::-;;;;;;;;4370:89;4680:21;4704:34;4712:2;4716:7;4725:12;:10;:12::i;:::-;4704:7;:34::i;:::-;4680:58;;4770:4;4753:21;;:13;:21;;;4749:111;;4819:4;4825:7;4834:13;4798:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4749:111;4359:508;4279:588;;;:::o;4938:134::-;5025:39;5042:4;5048:2;5052:7;5025:39;;;;;;;;;;;;:16;:39::i;:::-;4938:134;;;:::o;2251:120::-;2314:7;2341:22;2355:7;2341:13;:22::i;:::-;2334:29;;2251:120;;;:::o;1976:213::-;2039:7;2080:1;2063:19;;:5;:19;;;2059:89;;2133:1;2106:30;;;;;;;;;;;:::i;:::-;;;;;;;;2059:89;2165:9;:16;2175:5;2165:16;;;;;;;;;;;;;;;;2158:23;;1976:213;;;:::o;2598:95::-;2645:13;2678:7;2671:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2598:95;:::o;3840:146::-;3926:52;3945:12;:10;:12::i;:::-;3959:8;3969;3926:18;:52::i;:::-;3840:146;;:::o;5143:211::-;5257:31;5270:4;5276:2;5280:7;5257:12;:31::i;:::-;5299:47;5322:4;5328:2;5332:7;5341:4;5299:22;:47::i;:::-;5143:211;;;;:::o;1243:609:7:-;1316:13;1342:22;1356:7;1342:13;:22::i;:::-;;1377:23;1403:10;:19;1414:7;1403:19;;;;;;;;;;;1377:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1433:18;1454:10;:8;:10::i;:::-;1433:31;;1562:1;1546:4;1540:18;:23;1536:72;;1587:9;1580:16;;;;;;1536:72;1735:1;1715:9;1709:23;:27;1705:97;;;1774:4;1780:9;1760:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1753:37;;;;;;1705:97;1821:23;1836:7;1821:14;:23::i;:::-;1814:30;;;;1243:609;;;;:::o;485:273:15:-;538:9;;:11;;;;;;;;;:::i;:::-;;;;;;556:18;577:9;;556:30;;593:33;603:10;615;593:9;:33::i;:::-;633:35;646:10;658:9;633:12;:35::i;:::-;675:44;693:19;;;;;;;;;;;714:4;675:17;:44::i;:::-;731:21;741:10;731:21;;;;;;:::i;:::-;;;;;;;;531:227;485:273;:::o;4057:155:4:-;4145:4;4169:18;:25;4188:5;4169:25;;;;;;;;;;;;;;;:35;4195:8;4169:35;;;;;;;;;;;;;;;;;;;;;;;;;4162:42;;4057:155;;;;:::o;1607:305::-;1709:4;1761:25;1746:40;;;:11;:40;;;;:105;;;;1818:33;1803:48;;;:11;:48;;;;1746:105;:158;;;;1868:36;1892:11;1868:23;:36::i;:::-;1746:158;1726:178;;1607:305;;;:::o;16585:247::-;16648:7;16668:13;16684:17;16693:7;16684:8;:17::i;:::-;16668:33;;16733:1;16716:19;;:5;:19;;;16712:90;;16782:7;16759:31;;;;;;;;;;;:::i;:::-;;;;;;;;16712:90;16819:5;16812:12;;;16585:247;;;:::o;6116:129::-;6186:7;6213:15;:24;6229:7;6213:24;;;;;;;;;;;;;;;;;;;;;6206:31;;6116:129;;;:::o;672:98:9:-;725:7;752:10;745:17;;672:98;:::o;14817:122:4:-;14898:33;14907:2;14911:7;14920:4;14926;14898:8;:33::i;:::-;14817:122;;;:::o;9078:824::-;9164:7;9184:12;9199:17;9208:7;9199:8;:17::i;:::-;9184:32;;9295:1;9279:18;;:4;:18;;;9275:88;;9314:37;9331:4;9337;9343:7;9314:16;:37::i;:::-;9275:88;9426:1;9410:18;;:4;:18;;;9406:263;;9528:48;9545:1;9549:7;9566:1;9570:5;9528:8;:48::i;:::-;9641:1;9622:9;:15;9632:4;9622:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9406:263;9699:1;9685:16;;:2;:16;;;9681:111;;9764:1;9747:9;:13;9757:2;9747:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9681:111;9823:2;9804:7;:16;9812:7;9804:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9862:7;9858:2;9843:27;;9852:4;9843:27;;;;;;;;;;;;9890:4;9883:11;;;9078:824;;;;;:::o;16024:318::-;16152:1;16132:22;;:8;:22;;;16128:93;;16200:8;16178:31;;;;;;;;;;;:::i;:::-;;;;;;;;16128:93;16269:8;16231:18;:25;16250:5;16231:25;;;;;;;;;;;;;;;:35;16257:8;16231:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;16315:8;16293:41;;16308:5;16293:41;;;16325:8;16293:41;;;;;;:::i;:::-;;;;;;;;16024:318;;;:::o;17382:799::-;17516:1;17499:2;:14;;;:18;17495:679;;;17554:2;17538:36;;;17575:12;:10;:12::i;:::-;17589:4;17595:7;17604:4;17538:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17534:629;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17869:1;17852:6;:13;:18;17848:300;;17924:2;17902:25;;;;;;;;;;;:::i;:::-;;;;;;;;17848:300;18098:6;18092:13;18083:6;18079:2;18075:15;18068:38;17534:629;17667:41;;;17657:51;;;:6;:51;;;;17653:132;;17762:2;17740:25;;;;;;;;;;;:::i;:::-;;;;;;;;17653:132;17610:190;17495:679;17382:799;;;;:::o;3273:94::-;3324:13;3350:9;;;;;;;;;;;;;;3273:94;:::o;2764:260::-;2828:13;2854:22;2868:7;2854:13;:22::i;:::-;;2889:21;2913:10;:8;:10::i;:::-;2889:34;;2965:1;2947:7;2941:21;:25;:75;;;;;;;;;;;;;;;;;2983:7;2992:18;:7;:16;:18::i;:::-;2969:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2941:75;2934:82;;;2764:260;;;:::o;10936:102::-;11004:26;11014:2;11018:7;11004:26;;;;;;;;;;;;:9;:26::i;:::-;10936:102;;:::o;1978:170:7:-;2092:9;2070:10;:19;2081:7;2070:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2117:23;2132:7;2117:23;;;;;;:::i;:::-;;;;;;;;1978:170;;:::o;785:148:11:-;861:4;900:25;885:40;;;:11;:40;;;;878:47;;785:148;;;:::o;5878:117:4:-;5944:7;5971;:16;5979:7;5971:16;;;;;;;;;;;;;;;;;;;;;5964:23;;5878:117;;;:::o;15127:678::-;15289:9;:31;;;;15318:1;15302:18;;:4;:18;;;;15289:31;15285:471;;;15337:13;15353:22;15367:7;15353:13;:22::i;:::-;15337:38;;15522:1;15506:18;;:4;:18;;;;:35;;;;;15537:4;15528:13;;:5;:13;;;;15506:35;:69;;;;;15546:29;15563:5;15570:4;15546:16;:29::i;:::-;15545:30;15506:69;15502:144;;;15625:4;15603:27;;;;;;;;;;;:::i;:::-;;;;;;;;15502:144;15666:9;15662:83;;;15721:7;15717:2;15701:28;;15710:5;15701:28;;;;;;;;;;;;15662:83;15322:434;15285:471;15795:2;15768:15;:24;15784:7;15768:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;15127:678;;;;:::o;7285:376::-;7398:38;7412:5;7419:7;7428;7398:13;:38::i;:::-;7393:261;;7474:1;7457:19;;:5;:19;;;7453:190;;7527:7;7504:31;;;;;;;;;;;:::i;:::-;;;;;;;;7453:190;7610:7;7619;7583:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7393:261;7285:376;;;:::o;660:718:10:-;716:13;767:14;804:1;784:17;795:5;784:10;:17::i;:::-;:21;767:38;;820:20;854:6;843:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:41;;876:11;1005:6;1001:2;997:15;989:6;985:28;978:35;;1042:290;1049:4;1042:290;;;1074:5;;;;;;;;1216:10;1211:2;1204:5;1200:14;1195:32;1190:3;1182:46;1274:2;1265:11;;;;;;:::i;:::-;;;;;1308:1;1299:5;:10;1042:290;1295:21;1042:290;1353:6;1346:13;;;;;660:718;;;:::o;11265:185:4:-;11360:18;11366:2;11370:7;11360:5;:18::i;:::-;11389:53;11420:1;11424:2;11428:7;11437:4;11389:22;:53::i;:::-;11265:185;;;:::o;6565:276::-;6668:4;6724:1;6705:21;;:7;:21;;;;:128;;;;;6753:7;6744:16;;:5;:16;;;:52;;;;6764:32;6781:5;6788:7;6764:16;:32::i;:::-;6744:52;:88;;;;6825:7;6800:32;;:21;6813:7;6800:12;:21::i;:::-;:32;;;6744:88;6705:128;6685:148;;6565:276;;;;;:::o;12534:948:13:-;12587:7;12607:14;12624:1;12607:18;;12674:8;12665:5;:17;12661:106;;12712:8;12703:17;;;;;;:::i;:::-;;;;;12749:2;12739:12;;;;12661:106;12794:8;12785:5;:17;12781:106;;12832:8;12823:17;;;;;;:::i;:::-;;;;;12869:2;12859:12;;;;12781:106;12914:8;12905:5;:17;12901:106;;12952:8;12943:17;;;;;;:::i;:::-;;;;;12989:2;12979:12;;;;12901:106;13034:7;13025:5;:16;13021:103;;13071:7;13062:16;;;;;;:::i;:::-;;;;;13107:1;13097:11;;;;13021:103;13151:7;13142:5;:16;13138:103;;13188:7;13179:16;;;;;;:::i;:::-;;;;;13224:1;13214:11;;;;13138:103;13268:7;13259:5;:16;13255:103;;13305:7;13296:16;;;;;;:::i;:::-;;;;;13341:1;13331:11;;;;13255:103;13385:7;13376:5;:16;13372:68;;13423:1;13413:11;;;;13372:68;13468:6;13461:13;;;12534:948;;;:::o;10238:335:4:-;10320:1;10306:16;;:2;:16;;;10302:89;;10376:1;10346:33;;;;;;;;;;;:::i;:::-;;;;;;;;10302:89;10401:21;10425:32;10433:2;10437:7;10454:1;10425:7;:32::i;:::-;10401:56;;10497:1;10472:27;;:13;:27;;;10468:98;;10551:1;10523:31;;;;;;;;;;;:::i;:::-;;;;;;;;10468:98;10291:282;10238:335;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:308::-;10053:4;10143:18;10135:6;10132:30;10129:56;;;10165:18;;:::i;:::-;10129:56;10203:29;10225:6;10203:29;:::i;:::-;10195:37;;10287:4;10281;10277:15;10269:23;;9991:308;;;:::o;10305:425::-;10383:5;10408:66;10424:49;10466:6;10424:49;:::i;:::-;10408:66;:::i;:::-;10399:75;;10497:6;10490:5;10483:21;10535:4;10528:5;10524:16;10573:3;10564:6;10559:3;10555:16;10552:25;10549:112;;;10580:79;;:::i;:::-;10549:112;10670:54;10717:6;10712:3;10707;10670:54;:::i;:::-;10389:341;10305:425;;;;;:::o;10750:340::-;10806:5;10855:3;10848:4;10840:6;10836:17;10832:27;10822:122;;10863:79;;:::i;:::-;10822:122;10980:6;10967:20;11005:79;11080:3;11072:6;11065:4;11057:6;11053:17;11005:79;:::i;:::-;10996:88;;10812:278;10750:340;;;;:::o;11096:509::-;11165:6;11214:2;11202:9;11193:7;11189:23;11185:32;11182:119;;;11220:79;;:::i;:::-;11182:119;11368:1;11357:9;11353:17;11340:31;11398:18;11390:6;11387:30;11384:117;;;11420:79;;:::i;:::-;11384:117;11525:63;11580:7;11571:6;11560:9;11556:22;11525:63;:::i;:::-;11515:73;;11311:287;11096:509;;;;:::o;11611:474::-;11679:6;11687;11736:2;11724:9;11715:7;11711:23;11707:32;11704:119;;;11742:79;;:::i;:::-;11704:119;11862:1;11887:53;11932:7;11923:6;11912:9;11908:22;11887:53;:::i;:::-;11877:63;;11833:117;11989:2;12015:53;12060:7;12051:6;12040:9;12036:22;12015:53;:::i;:::-;12005:63;;11960:118;11611:474;;;;;:::o;12091:180::-;12139:77;12136:1;12129:88;12236:4;12233:1;12226:15;12260:4;12257:1;12250:15;12277:320;12321:6;12358:1;12352:4;12348:12;12338:22;;12405:1;12399:4;12395:12;12426:18;12416:81;;12482:4;12474:6;12470:17;12460:27;;12416:81;12544:2;12536:6;12533:14;12513:18;12510:38;12507:84;;12563:18;;:::i;:::-;12507:84;12328:269;12277:320;;;:::o;12603:442::-;12752:4;12790:2;12779:9;12775:18;12767:26;;12803:71;12871:1;12860:9;12856:17;12847:6;12803:71;:::i;:::-;12884:72;12952:2;12941:9;12937:18;12928:6;12884:72;:::i;:::-;12966;13034:2;13023:9;13019:18;13010:6;12966:72;:::i;:::-;12603:442;;;;;;:::o;13051:148::-;13153:11;13190:3;13175:18;;13051:148;;;;:::o;13205:390::-;13311:3;13339:39;13372:5;13339:39;:::i;:::-;13394:89;13476:6;13471:3;13394:89;:::i;:::-;13387:96;;13492:65;13550:6;13545:3;13538:4;13531:5;13527:16;13492:65;:::i;:::-;13582:6;13577:3;13573:16;13566:23;;13315:280;13205:390;;;;:::o;13601:435::-;13781:3;13803:95;13894:3;13885:6;13803:95;:::i;:::-;13796:102;;13915:95;14006:3;13997:6;13915:95;:::i;:::-;13908:102;;14027:3;14020:10;;13601:435;;;;;:::o;14042:180::-;14090:77;14087:1;14080:88;14187:4;14184:1;14177:15;14211:4;14208:1;14201:15;14228:233;14267:3;14290:24;14308:5;14290:24;:::i;:::-;14281:33;;14336:66;14329:5;14326:77;14323:103;;14406:18;;:::i;:::-;14323:103;14453:1;14446:5;14442:13;14435:20;;14228:233;;;:::o;14467:98::-;14518:6;14552:5;14546:12;14536:22;;14467:98;;;:::o;14571:168::-;14654:11;14688:6;14683:3;14676:19;14728:4;14723:3;14719:14;14704:29;;14571:168;;;;:::o;14745:373::-;14831:3;14859:38;14891:5;14859:38;:::i;:::-;14913:70;14976:6;14971:3;14913:70;:::i;:::-;14906:77;;14992:65;15050:6;15045:3;15038:4;15031:5;15027:16;14992:65;:::i;:::-;15082:29;15104:6;15082:29;:::i;:::-;15077:3;15073:39;15066:46;;14835:283;14745:373;;;;:::o;15124:640::-;15319:4;15357:3;15346:9;15342:19;15334:27;;15371:71;15439:1;15428:9;15424:17;15415:6;15371:71;:::i;:::-;15452:72;15520:2;15509:9;15505:18;15496:6;15452:72;:::i;:::-;15534;15602:2;15591:9;15587:18;15578:6;15534:72;:::i;:::-;15653:9;15647:4;15643:20;15638:2;15627:9;15623:18;15616:48;15681:76;15752:4;15743:6;15681:76;:::i;:::-;15673:84;;15124:640;;;;;;;:::o;15770:141::-;15826:5;15857:6;15851:13;15842:22;;15873:32;15899:5;15873:32;:::i;:::-;15770:141;;;;:::o;15917:349::-;15986:6;16035:2;16023:9;16014:7;16010:23;16006:32;16003:119;;;16041:79;;:::i;:::-;16003:119;16161:1;16186:63;16241:7;16232:6;16221:9;16217:22;16186:63;:::i;:::-;16176:73;;16132:127;15917:349;;;;:::o;16272:141::-;16321:4;16344:3;16336:11;;16367:3;16364:1;16357:14;16401:4;16398:1;16388:18;16380:26;;16272:141;;;:::o;16419:93::-;16456:6;16503:2;16498;16491:5;16487:14;16483:23;16473:33;;16419:93;;;:::o;16518:107::-;16562:8;16612:5;16606:4;16602:16;16581:37;;16518:107;;;;:::o;16631:393::-;16700:6;16750:1;16738:10;16734:18;16773:97;16803:66;16792:9;16773:97;:::i;:::-;16891:39;16921:8;16910:9;16891:39;:::i;:::-;16879:51;;16963:4;16959:9;16952:5;16948:21;16939:30;;17012:4;17002:8;16998:19;16991:5;16988:30;16978:40;;16707:317;;16631:393;;;;;:::o;17030:60::-;17058:3;17079:5;17072:12;;17030:60;;;:::o;17096:142::-;17146:9;17179:53;17197:34;17206:24;17224:5;17206:24;:::i;:::-;17197:34;:::i;:::-;17179:53;:::i;:::-;17166:66;;17096:142;;;:::o;17244:75::-;17287:3;17308:5;17301:12;;17244:75;;;:::o;17325:269::-;17435:39;17466:7;17435:39;:::i;:::-;17496:91;17545:41;17569:16;17545:41;:::i;:::-;17537:6;17530:4;17524:11;17496:91;:::i;:::-;17490:4;17483:105;17401:193;17325:269;;;:::o;17600:73::-;17645:3;17600:73;:::o;17679:189::-;17756:32;;:::i;:::-;17797:65;17855:6;17847;17841:4;17797:65;:::i;:::-;17732:136;17679:189;;:::o;17874:186::-;17934:120;17951:3;17944:5;17941:14;17934:120;;;18005:39;18042:1;18035:5;18005:39;:::i;:::-;17978:1;17971:5;17967:13;17958:22;;17934:120;;;17874:186;;:::o;18066:543::-;18167:2;18162:3;18159:11;18156:446;;;18201:38;18233:5;18201:38;:::i;:::-;18285:29;18303:10;18285:29;:::i;:::-;18275:8;18271:44;18468:2;18456:10;18453:18;18450:49;;;18489:8;18474:23;;18450:49;18512:80;18568:22;18586:3;18568:22;:::i;:::-;18558:8;18554:37;18541:11;18512:80;:::i;:::-;18171:431;;18156:446;18066:543;;;:::o;18615:117::-;18669:8;18719:5;18713:4;18709:16;18688:37;;18615:117;;;;:::o;18738:169::-;18782:6;18815:51;18863:1;18859:6;18851:5;18848:1;18844:13;18815:51;:::i;:::-;18811:56;18896:4;18890;18886:15;18876:25;;18789:118;18738:169;;;;:::o;18912:295::-;18988:4;19134:29;19159:3;19153:4;19134:29;:::i;:::-;19126:37;;19196:3;19193:1;19189:11;19183:4;19180:21;19172:29;;18912:295;;;;:::o;19212:1395::-;19329:37;19362:3;19329:37;:::i;:::-;19431:18;19423:6;19420:30;19417:56;;;19453:18;;:::i;:::-;19417:56;19497:38;19529:4;19523:11;19497:38;:::i;:::-;19582:67;19642:6;19634;19628:4;19582:67;:::i;:::-;19676:1;19700:4;19687:17;;19732:2;19724:6;19721:14;19749:1;19744:618;;;;20406:1;20423:6;20420:77;;;20472:9;20467:3;20463:19;20457:26;20448:35;;20420:77;20523:67;20583:6;20576:5;20523:67;:::i;:::-;20517:4;20510:81;20379:222;19714:887;;19744:618;19796:4;19792:9;19784:6;19780:22;19830:37;19862:4;19830:37;:::i;:::-;19889:1;19903:208;19917:7;19914:1;19911:14;19903:208;;;19996:9;19991:3;19987:19;19981:26;19973:6;19966:42;20047:1;20039:6;20035:14;20025:24;;20094:2;20083:9;20079:18;20066:31;;19940:4;19937:1;19933:12;19928:17;;19903:208;;;20139:6;20130:7;20127:19;20124:179;;;20197:9;20192:3;20188:19;20182:26;20240:48;20282:4;20274:6;20270:17;20259:9;20240:48;:::i;:::-;20232:6;20225:64;20147:156;20124:179;20349:1;20345;20337:6;20333:14;20329:22;20323:4;20316:36;19751:611;;;19714:887;;19304:1303;;;19212:1395;;:::o;20613:332::-;20734:4;20772:2;20761:9;20757:18;20749:26;;20785:71;20853:1;20842:9;20838:17;20829:6;20785:71;:::i;:::-;20866:72;20934:2;20923:9;20919:18;20910:6;20866:72;:::i;:::-;20613:332;;;;;:::o;20951:180::-;20999:77;20996:1;20989:88;21096:4;21093:1;21086:15;21120:4;21117:1;21110:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1811600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(string)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 761,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 202,
									"end": 761,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 202,
									"end": 761,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 342,
									"end": 479,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 479,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 342,
									"end": 479,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 342,
									"end": 479,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "CODESIZE",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 342,
									"end": 479,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 342,
									"end": 479,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 342,
									"end": 479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 342,
									"end": 479,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "426F726564205065747320596163687420436C75620000000000000000000000"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "4250594300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1494,
									"end": 1499,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1491,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1486,
									"end": 1499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1520,
									"end": 1527,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1517,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1510,
									"end": 1527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 453,
									"end": 473,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 431,
									"end": 450,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 431,
									"end": 450,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 431,
									"end": 473,
									"modifierDepth": 1,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 342,
									"end": 479,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 202,
									"end": 761,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 202,
									"end": 761,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 16,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "52"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 16,
									"value": "52"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "92"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 16,
									"value": "92"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "93"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "94"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 16,
									"value": "94"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 16,
									"value": "93"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "97"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 16,
									"value": "97"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "99"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 16,
									"value": "99"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "101"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 16,
									"value": "101"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "102"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "103"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 16,
									"value": "103"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 16,
									"value": "102"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "104"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 16,
									"value": "104"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "105"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 16,
									"value": "105"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "107"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "108"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 16,
									"value": "108"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "109"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 16,
									"value": "109"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "106"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 16,
									"value": "107"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "110"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 16,
									"value": "110"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 16,
									"value": "111"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "113"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "111"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 16,
									"value": "113"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "114"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "115"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 16,
									"value": "115"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 16,
									"value": "114"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 16,
									"value": "106"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 202,
									"end": 761,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 202,
									"end": 761,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 202,
									"end": 761,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 761,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 202,
									"end": 761,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 761,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 761,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 202,
									"end": 761,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 761,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d2e6ffb43e1858a6ddfa48ae867cf9cbb7e49452b5022155f4eb02b7c827b7fe64736f6c63430008160033",
									".code": [
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "C87B56DD"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "D85D3D27"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "E985E9C5"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "A22CB465"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "42842E0E"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "81812FC"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 761,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 761,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 963,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 963,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 963,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1243,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1243,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1243,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 485,
											"end": 758,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 485,
											"end": 758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 485,
											"end": 758,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 485,
											"end": 758,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 485,
											"end": 758,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 485,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 485,
											"end": 758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 485,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 485,
											"end": 758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1065,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 788,
											"name": "PUSH",
											"source": 7,
											"value": "49064906"
										},
										{
											"begin": 771,
											"end": 789,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 771,
											"end": 789,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1164,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1089,
											"end": 1164,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1128,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1152,
											"end": 1163,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1128,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1128,
											"end": 1164,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1128,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1164,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1089,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2516,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2509,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2509,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3711,
											"end": 3718,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3697,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3752,
											"end": 3759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3739,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3510,
											"end": 3512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3523,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3523,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3501,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4445,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4414,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4712,
											"end": 4714,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4725,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4725,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4704,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4738,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4825,
											"end": 4832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4834,
											"end": 4847,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 4,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4798,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5042,
											"end": 5046,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5050,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5052,
											"end": 5059,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5025,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2341,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2341,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 2363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 2363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2068,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2106,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2174,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2658,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2678,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2671,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2671,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3945,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3945,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3959,
											"end": 3967,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3977,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3926,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5257,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5257,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5322,
											"end": 5326,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5332,
											"end": 5339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5345,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5299,
											"end": 5346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1329,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1342,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1356,
											"end": 1363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1342,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1364,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1342,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1400,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1422,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1377,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1377,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1451,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1454,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1454,
											"end": 1464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1562,
											"end": 1563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1563,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1536,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1536,
											"end": 1608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1587,
											"end": 1596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1596,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1580,
											"end": 1596,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1536,
											"end": 1608,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1536,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 1732,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 1736,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1802,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1705,
											"end": 1802,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1778,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1760,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1790,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1790,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1753,
											"end": 1790,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1802,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1705,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1821,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1844,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1821,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1844,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 485,
											"end": 758,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 485,
											"end": 758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 538,
											"end": 547,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 538,
											"end": 547,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 549,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 538,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "tag",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 538,
											"end": 549,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 538,
											"end": 549,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 556,
											"end": 574,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 586,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 577,
											"end": 586,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 556,
											"end": 586,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 556,
											"end": 586,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 593,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 603,
											"end": 613,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 615,
											"end": 625,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 593,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 593,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 593,
											"end": 626,
											"name": "tag",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 593,
											"end": 626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 633,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 646,
											"end": 656,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 658,
											"end": 667,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 633,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 633,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 633,
											"end": 668,
											"name": "tag",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 633,
											"end": 668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 675,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 693,
											"end": 712,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 693,
											"end": 712,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 712,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 693,
											"end": 712,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 693,
											"end": 712,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 693,
											"end": 712,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 693,
											"end": 712,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 693,
											"end": 712,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 693,
											"end": 712,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 693,
											"end": 712,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 693,
											"end": 712,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 714,
											"end": 718,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 675,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 675,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 675,
											"end": 719,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 675,
											"end": 719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "PUSH",
											"source": 15,
											"value": "D9DC24857F317ED9ABBBB42E920EDE0104231EB1D3D70236A74887FFAF159868"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 752,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 731,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "tag",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 731,
											"end": 752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 752,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 731,
											"end": 752,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 531,
											"end": 758,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 485,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4193,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4203,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1851,
											"name": "PUSH",
											"source": 4,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1814,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1892,
											"end": 1903,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1868,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16648,
											"end": 16655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16668,
											"end": 16681,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 16693,
											"end": 16700,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16684,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 16684,
											"end": 16701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16668,
											"end": 16701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16668,
											"end": 16701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16733,
											"end": 16734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16716,
											"end": 16721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16782,
											"end": 16789,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 16759,
											"end": 16790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16819,
											"end": 16824,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16585,
											"end": 16832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6228,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6229,
											"end": 6236,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6206,
											"end": 6237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6206,
											"end": 6237,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 672,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 725,
											"end": 732,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 745,
											"end": 762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 745,
											"end": 762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 14907,
											"end": 14909,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14911,
											"end": 14918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14920,
											"end": 14924,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14926,
											"end": 14930,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14898,
											"end": 14906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 14898,
											"end": 14931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14817,
											"end": 14939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 9208,
											"end": 9215,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 9199,
											"end": 9216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9184,
											"end": 9216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9184,
											"end": 9216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9279,
											"end": 9283,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 9331,
											"end": 9335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9337,
											"end": 9341,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9343,
											"end": 9350,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9314,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 9314,
											"end": 9351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9426,
											"end": 9427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9556,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 9528,
											"end": 9576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9622,
											"end": 9631,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9636,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9699,
											"end": 9700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9687,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9747,
											"end": 9756,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9759,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9811,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 9819,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9862,
											"end": 9869,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9858,
											"end": 9860,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9852,
											"end": 9856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 9890,
											"end": 9894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16152,
											"end": 16153,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16132,
											"end": 16140,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16200,
											"end": 16208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 4,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 16178,
											"end": 16209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16269,
											"end": 16277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16249,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16250,
											"end": 16255,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16257,
											"end": 16265,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16315,
											"end": 16323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16308,
											"end": 16313,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 16325,
											"end": 16333,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 16293,
											"end": 16334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16024,
											"end": 16342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17516,
											"end": 17517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17499,
											"end": 17501,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17554,
											"end": 17556,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 17575,
											"end": 17585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 17575,
											"end": 17587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17589,
											"end": 17593,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 17595,
											"end": 17602,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17604,
											"end": 17608,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 17538,
											"end": 17609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 17538,
											"end": 17609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17869,
											"end": 17870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17852,
											"end": 17858,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17852,
											"end": 17865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17852,
											"end": 17870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17924,
											"end": 17926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 17902,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18098,
											"end": 18104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 18092,
											"end": 18105,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 18083,
											"end": 18089,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18079,
											"end": 18081,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 18075,
											"end": 18090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18068,
											"end": 18106,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17663,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17762,
											"end": 17764,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 17740,
											"end": 17765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17610,
											"end": 17800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3367,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3273,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3337,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2868,
											"end": 2875,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2854,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2913,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2913,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 2962,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 2966,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 2990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2992,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2992,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2969,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 11038,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 10936,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 11014,
											"end": 11016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11025,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 11004,
											"end": 11030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 11004,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 11038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 11038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 11038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1978,
											"end": 2148,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1978,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2092,
											"end": 2101,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2080,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2088,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2070,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "PUSH",
											"source": 7,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2132,
											"end": 2139,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2117,
											"end": 2140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 933,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 785,
											"end": 933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 861,
											"end": 865,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 925,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 885,
											"end": 925,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 885,
											"end": 896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 885,
											"end": 925,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 885,
											"end": 925,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 885,
											"end": 925,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 878,
											"end": 925,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 878,
											"end": 925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 785,
											"end": 933,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 785,
											"end": 933,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 785,
											"end": 933,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 785,
											"end": 933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5944,
											"end": 5951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5978,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5878,
											"end": 5995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15289,
											"end": 15298,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15318,
											"end": 15319,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15302,
											"end": 15306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15350,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 15367,
											"end": 15374,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15353,
											"end": 15366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 15353,
											"end": 15375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15522,
											"end": 15523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15510,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15537,
											"end": 15541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15528,
											"end": 15533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 15563,
											"end": 15568,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15570,
											"end": 15574,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15546,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 15546,
											"end": 15575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15545,
											"end": 15575,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15625,
											"end": 15629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 4,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 15603,
											"end": 15630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15666,
											"end": 15675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15721,
											"end": 15728,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15717,
											"end": 15719,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15710,
											"end": 15715,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15322,
											"end": 15756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15795,
											"end": 15797,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15783,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15784,
											"end": 15791,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 7412,
											"end": 7417,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7419,
											"end": 7426,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7428,
											"end": 7435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 7398,
											"end": 7436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7474,
											"end": 7475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7457,
											"end": 7462,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7527,
											"end": 7534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 7504,
											"end": 7535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7610,
											"end": 7617,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7626,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 4,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 7583,
											"end": 7627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 716,
											"end": 729,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 767,
											"end": 781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 784,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 784,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 784,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 784,
											"end": 801,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 784,
											"end": 801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 784,
											"end": 805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 767,
											"end": 805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 767,
											"end": 805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 820,
											"end": 840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 843,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 820,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 876,
											"end": 887,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1053,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "PUSH",
											"source": 10,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1204,
											"end": 1209,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1193,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1182,
											"end": 1228,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1265,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1304,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 660,
											"end": 1378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 11366,
											"end": 11368,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11370,
											"end": 11377,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11360,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 11360,
											"end": 11378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11389,
											"end": 11442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 11420,
											"end": 11421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11424,
											"end": 11426,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11428,
											"end": 11435,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11441,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11389,
											"end": 11411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 11389,
											"end": 11442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11389,
											"end": 11442,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 11389,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11265,
											"end": 11450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11265,
											"end": 11450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6725,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6712,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6753,
											"end": 6760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6749,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6781,
											"end": 6786,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6788,
											"end": 6795,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 6764,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6825,
											"end": 6832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6813,
											"end": 6820,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6800,
											"end": 6821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12621,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12624,
											"end": 12625,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12682,
											"name": "PUSH",
											"source": 13,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12665,
											"end": 12670,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12665,
											"end": 12682,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12712,
											"end": 12720,
											"name": "PUSH",
											"source": 13,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 12703,
											"end": 12720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12749,
											"end": 12751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12794,
											"end": 12802,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12785,
											"end": 12790,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12785,
											"end": 12802,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12832,
											"end": 12840,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 12823,
											"end": 12840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12869,
											"end": 12871,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12914,
											"end": 12922,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12905,
											"end": 12910,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12905,
											"end": 12922,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12960,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 12943,
											"end": 12960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12989,
											"end": 12991,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13034,
											"end": 13041,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 13025,
											"end": 13030,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13025,
											"end": 13041,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13071,
											"end": 13078,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 13062,
											"end": 13078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13107,
											"end": 13108,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13151,
											"end": 13158,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 13142,
											"end": 13147,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13142,
											"end": 13158,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13188,
											"end": 13195,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 13179,
											"end": 13195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13224,
											"end": 13225,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13268,
											"end": 13275,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13259,
											"end": 13264,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13259,
											"end": 13275,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13305,
											"end": 13312,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 13296,
											"end": 13312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13342,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13385,
											"end": 13392,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 13376,
											"end": 13381,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13376,
											"end": 13392,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13423,
											"end": 13424,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13474,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12534,
											"end": 13482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10306,
											"end": 10308,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10376,
											"end": 10377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 10346,
											"end": 10379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10346,
											"end": 10379,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 10302,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10401,
											"end": 10422,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10437,
											"end": 10444,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 10425,
											"end": 10457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 10425,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10401,
											"end": 10457,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10401,
											"end": 10457,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10497,
											"end": 10498,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10472,
											"end": 10485,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10472,
											"end": 10499,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 4,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 10523,
											"end": 10554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10468,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10291,
											"end": 10573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "tag",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10053,
											"end": 10057,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10132,
											"end": 10162,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 10165,
											"end": 10183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 10203,
											"end": 10232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10287,
											"end": 10291,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10281,
											"end": 10285,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10277,
											"end": 10292,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9991,
											"end": 10299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "tag",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 10466,
											"end": 10472,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 10424,
											"end": 10473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 10408,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10490,
											"end": 10495,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10483,
											"end": 10504,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10528,
											"end": 10533,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10524,
											"end": 10540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10573,
											"end": 10576,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10564,
											"end": 10570,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10559,
											"end": 10562,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10555,
											"end": 10571,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10552,
											"end": 10577,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 10580,
											"end": 10659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 10717,
											"end": 10723,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10712,
											"end": 10715,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10707,
											"end": 10710,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 10670,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10389,
											"end": 10730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "tag",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10806,
											"end": 10811,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10848,
											"end": 10852,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10836,
											"end": 10853,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10832,
											"end": 10859,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 10863,
											"end": 10942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "tag",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "tag",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10980,
											"end": 10986,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10967,
											"end": 10987,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 11080,
											"end": 11083,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11065,
											"end": 11069,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11057,
											"end": 11063,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11053,
											"end": 11070,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 11005,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "tag",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10812,
											"end": 11090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "tag",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11165,
											"end": 11171,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11214,
											"end": 11216,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11202,
											"end": 11211,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11193,
											"end": 11200,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11189,
											"end": 11212,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11185,
											"end": 11217,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 11220,
											"end": 11299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "tag",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11368,
											"end": 11369,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11366,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11353,
											"end": 11370,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11340,
											"end": 11371,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11390,
											"end": 11396,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11387,
											"end": 11417,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 11420,
											"end": 11499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11571,
											"end": 11577,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11560,
											"end": 11569,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11556,
											"end": 11578,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 11525,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11515,
											"end": 11588,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11515,
											"end": 11588,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11311,
											"end": 11598,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11679,
											"end": 11685,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11693,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11724,
											"end": 11733,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11715,
											"end": 11722,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11711,
											"end": 11734,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11707,
											"end": 11739,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 11742,
											"end": 11821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "tag",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11862,
											"end": 11863,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 11932,
											"end": 11939,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11923,
											"end": 11929,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11912,
											"end": 11921,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11908,
											"end": 11930,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 11887,
											"end": 11940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "tag",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11877,
											"end": 11940,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11877,
											"end": 11940,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11833,
											"end": 11950,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11989,
											"end": 11991,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 12060,
											"end": 12067,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12051,
											"end": 12057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12040,
											"end": 12049,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12036,
											"end": 12058,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 12015,
											"end": 12068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12005,
											"end": 12068,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12005,
											"end": 12068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11960,
											"end": 12078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12091,
											"end": 12271,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 12091,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12139,
											"end": 12216,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12136,
											"end": 12137,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12129,
											"end": 12217,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12236,
											"end": 12240,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 12233,
											"end": 12234,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12226,
											"end": 12241,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12260,
											"end": 12264,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12257,
											"end": 12258,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12250,
											"end": 12265,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "tag",
											"source": 16,
											"value": "87"
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12321,
											"end": 12327,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12359,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 12352,
											"end": 12356,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12348,
											"end": 12360,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12360,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12360,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12405,
											"end": 12406,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 12399,
											"end": 12403,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12395,
											"end": 12407,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12482,
											"end": 12486,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 12474,
											"end": 12480,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12470,
											"end": 12487,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12460,
											"end": 12487,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12460,
											"end": 12487,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12544,
											"end": 12546,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 12542,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12533,
											"end": 12547,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12513,
											"end": 12531,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12510,
											"end": 12548,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 12563,
											"end": 12581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "tag",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "tag",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12328,
											"end": 12597,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12277,
											"end": 12597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "tag",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12752,
											"end": 12756,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12790,
											"end": 12792,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 12779,
											"end": 12788,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12775,
											"end": 12793,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12767,
											"end": 12793,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12767,
											"end": 12793,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 12871,
											"end": 12872,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12860,
											"end": 12869,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12856,
											"end": 12873,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12847,
											"end": 12853,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 12803,
											"end": 12874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 12952,
											"end": 12954,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12941,
											"end": 12950,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12937,
											"end": 12955,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12928,
											"end": 12934,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 12884,
											"end": 12956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 13034,
											"end": 13036,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13019,
											"end": 13037,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13010,
											"end": 13016,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 12966,
											"end": 13038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13199,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 13051,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13153,
											"end": 13164,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13190,
											"end": 13193,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13199,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13199,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13199,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13199,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13205,
											"end": 13595,
											"name": "tag",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 13205,
											"end": 13595,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13311,
											"end": 13314,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13339,
											"end": 13378,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 13372,
											"end": 13377,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13339,
											"end": 13378,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 13339,
											"end": 13378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13339,
											"end": 13378,
											"name": "tag",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 13339,
											"end": 13378,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13394,
											"end": 13483,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 13476,
											"end": 13482,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13471,
											"end": 13474,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13394,
											"end": 13483,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 13394,
											"end": 13483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13394,
											"end": 13483,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 13394,
											"end": 13483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13387,
											"end": 13483,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 13387,
											"end": 13483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13492,
											"end": 13557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 13550,
											"end": 13556,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13545,
											"end": 13548,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13538,
											"end": 13542,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13531,
											"end": 13536,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 13527,
											"end": 13543,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13492,
											"end": 13557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 13492,
											"end": 13557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13492,
											"end": 13557,
											"name": "tag",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 13492,
											"end": 13557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13582,
											"end": 13588,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13577,
											"end": 13580,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13573,
											"end": 13589,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13566,
											"end": 13589,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13566,
											"end": 13589,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13315,
											"end": 13595,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13205,
											"end": 13595,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13205,
											"end": 13595,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13205,
											"end": 13595,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13205,
											"end": 13595,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13205,
											"end": 13595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13601,
											"end": 14036,
											"name": "tag",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 13601,
											"end": 14036,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13781,
											"end": 13784,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13803,
											"end": 13898,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 13894,
											"end": 13897,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13885,
											"end": 13891,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13803,
											"end": 13898,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 13803,
											"end": 13898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13803,
											"end": 13898,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 13803,
											"end": 13898,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13796,
											"end": 13898,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13796,
											"end": 13898,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13915,
											"end": 14010,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 14006,
											"end": 14009,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13997,
											"end": 14003,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13915,
											"end": 14010,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 13915,
											"end": 14010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13915,
											"end": 14010,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 13915,
											"end": 14010,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13908,
											"end": 14010,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13908,
											"end": 14010,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14027,
											"end": 14030,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14020,
											"end": 14030,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14020,
											"end": 14030,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13601,
											"end": 14036,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 13601,
											"end": 14036,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13601,
											"end": 14036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13601,
											"end": 14036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13601,
											"end": 14036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13601,
											"end": 14036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14042,
											"end": 14222,
											"name": "tag",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 14042,
											"end": 14222,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14090,
											"end": 14167,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14087,
											"end": 14088,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14080,
											"end": 14168,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14187,
											"end": 14191,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 14184,
											"end": 14185,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 14177,
											"end": 14192,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14211,
											"end": 14215,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 14208,
											"end": 14209,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14201,
											"end": 14216,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14228,
											"end": 14461,
											"name": "tag",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 14228,
											"end": 14461,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14267,
											"end": 14270,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14290,
											"end": 14314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 14308,
											"end": 14313,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14290,
											"end": 14314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 14290,
											"end": 14314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14290,
											"end": 14314,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 14290,
											"end": 14314,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14281,
											"end": 14314,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14281,
											"end": 14314,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14336,
											"end": 14402,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14329,
											"end": 14334,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14326,
											"end": 14403,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14323,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 14323,
											"end": 14426,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14406,
											"end": 14424,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 14406,
											"end": 14424,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 14406,
											"end": 14424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14406,
											"end": 14424,
											"name": "tag",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 14406,
											"end": 14424,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14323,
											"end": 14426,
											"name": "tag",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 14323,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14453,
											"end": 14454,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 14446,
											"end": 14451,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14442,
											"end": 14455,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14435,
											"end": 14455,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14435,
											"end": 14455,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14228,
											"end": 14461,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14228,
											"end": 14461,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14228,
											"end": 14461,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14228,
											"end": 14461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14467,
											"end": 14565,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 14467,
											"end": 14565,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14518,
											"end": 14524,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14552,
											"end": 14557,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14546,
											"end": 14558,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14536,
											"end": 14558,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14536,
											"end": 14558,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14467,
											"end": 14565,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14467,
											"end": 14565,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14467,
											"end": 14565,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14467,
											"end": 14565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14571,
											"end": 14739,
											"name": "tag",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 14571,
											"end": 14739,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14654,
											"end": 14665,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14688,
											"end": 14694,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14683,
											"end": 14686,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14676,
											"end": 14695,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14728,
											"end": 14732,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14723,
											"end": 14726,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14719,
											"end": 14733,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14704,
											"end": 14733,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14704,
											"end": 14733,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14571,
											"end": 14739,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14571,
											"end": 14739,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14571,
											"end": 14739,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14571,
											"end": 14739,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14571,
											"end": 14739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14745,
											"end": 15118,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 14745,
											"end": 15118,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14831,
											"end": 14834,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14859,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 14891,
											"end": 14896,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14859,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 14859,
											"end": 14897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14859,
											"end": 14897,
											"name": "tag",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 14859,
											"end": 14897,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14913,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 14976,
											"end": 14982,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14971,
											"end": 14974,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14913,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 14913,
											"end": 14983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14913,
											"end": 14983,
											"name": "tag",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 14913,
											"end": 14983,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14906,
											"end": 14983,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14906,
											"end": 14983,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 15050,
											"end": 15056,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15045,
											"end": 15048,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15038,
											"end": 15042,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15031,
											"end": 15036,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15027,
											"end": 15043,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 14992,
											"end": 15057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14992,
											"end": 15057,
											"name": "tag",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 14992,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15082,
											"end": 15111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15082,
											"end": 15111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 15082,
											"end": 15111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15082,
											"end": 15111,
											"name": "tag",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 15082,
											"end": 15111,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15077,
											"end": 15080,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15073,
											"end": 15112,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15066,
											"end": 15112,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15066,
											"end": 15112,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14835,
											"end": 15118,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14745,
											"end": 15118,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14745,
											"end": 15118,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14745,
											"end": 15118,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14745,
											"end": 15118,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14745,
											"end": 15118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15124,
											"end": 15764,
											"name": "tag",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 15124,
											"end": 15764,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15319,
											"end": 15323,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15357,
											"end": 15360,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 15346,
											"end": 15355,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15342,
											"end": 15361,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15334,
											"end": 15361,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15334,
											"end": 15361,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15371,
											"end": 15442,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 15439,
											"end": 15440,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15428,
											"end": 15437,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15424,
											"end": 15441,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15415,
											"end": 15421,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 15371,
											"end": 15442,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 15371,
											"end": 15442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15371,
											"end": 15442,
											"name": "tag",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 15371,
											"end": 15442,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15452,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 15520,
											"end": 15522,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15509,
											"end": 15518,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15505,
											"end": 15523,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15496,
											"end": 15502,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15452,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 15452,
											"end": 15524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15452,
											"end": 15524,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 15452,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15534,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 15602,
											"end": 15604,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 15591,
											"end": 15600,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15578,
											"end": 15584,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15534,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 15534,
											"end": 15606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15534,
											"end": 15606,
											"name": "tag",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 15534,
											"end": 15606,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15653,
											"end": 15662,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15647,
											"end": 15651,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15643,
											"end": 15663,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 15638,
											"end": 15640,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 15627,
											"end": 15636,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15623,
											"end": 15641,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15616,
											"end": 15664,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15681,
											"end": 15757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 15752,
											"end": 15756,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15743,
											"end": 15749,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15681,
											"end": 15757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 15681,
											"end": 15757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15681,
											"end": 15757,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 15681,
											"end": 15757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15673,
											"end": 15757,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15673,
											"end": 15757,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15124,
											"end": 15764,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 15124,
											"end": 15764,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 15124,
											"end": 15764,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15124,
											"end": 15764,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15124,
											"end": 15764,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15124,
											"end": 15764,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15124,
											"end": 15764,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15124,
											"end": 15764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 15911,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 15770,
											"end": 15911,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15826,
											"end": 15831,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15857,
											"end": 15863,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15851,
											"end": 15864,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 15842,
											"end": 15864,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15842,
											"end": 15864,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15873,
											"end": 15905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 15899,
											"end": 15904,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15873,
											"end": 15905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 15873,
											"end": 15905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15873,
											"end": 15905,
											"name": "tag",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 15873,
											"end": 15905,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 15911,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 15911,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 15911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 15911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15770,
											"end": 15911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15917,
											"end": 16266,
											"name": "tag",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 15917,
											"end": 16266,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15986,
											"end": 15992,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16035,
											"end": 16037,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16023,
											"end": 16032,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16014,
											"end": 16021,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16010,
											"end": 16033,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 16006,
											"end": 16038,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 16003,
											"end": 16122,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 16003,
											"end": 16122,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 16003,
											"end": 16122,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 16041,
											"end": 16120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 16041,
											"end": 16120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 16041,
											"end": 16120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16041,
											"end": 16120,
											"name": "tag",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 16041,
											"end": 16120,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16003,
											"end": 16122,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 16003,
											"end": 16122,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16161,
											"end": 16162,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16186,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 16241,
											"end": 16248,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16232,
											"end": 16238,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16221,
											"end": 16230,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16217,
											"end": 16239,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16186,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 16186,
											"end": 16249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16186,
											"end": 16249,
											"name": "tag",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 16186,
											"end": 16249,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16176,
											"end": 16249,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16176,
											"end": 16249,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16132,
											"end": 16259,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15917,
											"end": 16266,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15917,
											"end": 16266,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15917,
											"end": 16266,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15917,
											"end": 16266,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15917,
											"end": 16266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16272,
											"end": 16413,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 16272,
											"end": 16413,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16321,
											"end": 16325,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16344,
											"end": 16347,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16336,
											"end": 16347,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16336,
											"end": 16347,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16367,
											"end": 16370,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16364,
											"end": 16365,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16357,
											"end": 16371,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16401,
											"end": 16405,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16398,
											"end": 16399,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16388,
											"end": 16406,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 16380,
											"end": 16406,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16380,
											"end": 16406,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16272,
											"end": 16413,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16272,
											"end": 16413,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16272,
											"end": 16413,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16272,
											"end": 16413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16419,
											"end": 16512,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 16419,
											"end": 16512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16456,
											"end": 16462,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16503,
											"end": 16505,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16498,
											"end": 16500,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 16491,
											"end": 16496,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16487,
											"end": 16501,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16483,
											"end": 16506,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 16473,
											"end": 16506,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16473,
											"end": 16506,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16419,
											"end": 16512,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16419,
											"end": 16512,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16419,
											"end": 16512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16419,
											"end": 16512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16518,
											"end": 16625,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 16518,
											"end": 16625,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16562,
											"end": 16570,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16612,
											"end": 16617,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16606,
											"end": 16610,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16602,
											"end": 16618,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 16581,
											"end": 16618,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16581,
											"end": 16618,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16518,
											"end": 16625,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16518,
											"end": 16625,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16518,
											"end": 16625,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16518,
											"end": 16625,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16518,
											"end": 16625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16631,
											"end": 17024,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 16631,
											"end": 17024,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16700,
											"end": 16706,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16750,
											"end": 16751,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 16738,
											"end": 16748,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16734,
											"end": 16752,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 16773,
											"end": 16870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "535"
										},
										{
											"begin": 16803,
											"end": 16869,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16792,
											"end": 16801,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16773,
											"end": 16870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 16773,
											"end": 16870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16773,
											"end": 16870,
											"name": "tag",
											"source": 16,
											"value": "535"
										},
										{
											"begin": 16773,
											"end": 16870,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16891,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 16921,
											"end": 16929,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16910,
											"end": 16919,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16891,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 16891,
											"end": 16930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16891,
											"end": 16930,
											"name": "tag",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 16891,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16879,
											"end": 16930,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 16879,
											"end": 16930,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16963,
											"end": 16967,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16959,
											"end": 16968,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 16952,
											"end": 16957,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16948,
											"end": 16969,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16939,
											"end": 16969,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16939,
											"end": 16969,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17012,
											"end": 17016,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 17002,
											"end": 17010,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16998,
											"end": 17017,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16991,
											"end": 16996,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16988,
											"end": 17018,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 16978,
											"end": 17018,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16978,
											"end": 17018,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16707,
											"end": 17024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16707,
											"end": 17024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16631,
											"end": 17024,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16631,
											"end": 17024,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16631,
											"end": 17024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16631,
											"end": 17024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16631,
											"end": 17024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16631,
											"end": 17024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17030,
											"end": 17090,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 17030,
											"end": 17090,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17058,
											"end": 17061,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17079,
											"end": 17084,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17072,
											"end": 17084,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17072,
											"end": 17084,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17030,
											"end": 17090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17030,
											"end": 17090,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17030,
											"end": 17090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17030,
											"end": 17090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17096,
											"end": 17238,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 17096,
											"end": 17238,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17146,
											"end": 17155,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17179,
											"end": 17232,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 17197,
											"end": 17231,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "540"
										},
										{
											"begin": 17206,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 17224,
											"end": 17229,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17206,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 17206,
											"end": 17230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17206,
											"end": 17230,
											"name": "tag",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 17206,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17197,
											"end": 17231,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 17197,
											"end": 17231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17197,
											"end": 17231,
											"name": "tag",
											"source": 16,
											"value": "540"
										},
										{
											"begin": 17197,
											"end": 17231,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17179,
											"end": 17232,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 17179,
											"end": 17232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17179,
											"end": 17232,
											"name": "tag",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 17179,
											"end": 17232,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17166,
											"end": 17232,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17166,
											"end": 17232,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17096,
											"end": 17238,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17096,
											"end": 17238,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17096,
											"end": 17238,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17096,
											"end": 17238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17244,
											"end": 17319,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 17244,
											"end": 17319,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17287,
											"end": 17290,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17308,
											"end": 17313,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17301,
											"end": 17313,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17301,
											"end": 17313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17244,
											"end": 17319,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17244,
											"end": 17319,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17244,
											"end": 17319,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17244,
											"end": 17319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17325,
											"end": 17594,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 17325,
											"end": 17594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17435,
											"end": 17474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 17466,
											"end": 17473,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17435,
											"end": 17474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 17435,
											"end": 17474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17435,
											"end": 17474,
											"name": "tag",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 17435,
											"end": 17474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17496,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 17545,
											"end": 17586,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 17569,
											"end": 17585,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17545,
											"end": 17586,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 17545,
											"end": 17586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17545,
											"end": 17586,
											"name": "tag",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 17545,
											"end": 17586,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17537,
											"end": 17543,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17530,
											"end": 17534,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17524,
											"end": 17535,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 17496,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 17496,
											"end": 17587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17496,
											"end": 17587,
											"name": "tag",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 17496,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17490,
											"end": 17494,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17483,
											"end": 17588,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 17401,
											"end": 17594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17325,
											"end": 17594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17325,
											"end": 17594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17325,
											"end": 17594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17325,
											"end": 17594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17600,
											"end": 17673,
											"name": "tag",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 17600,
											"end": 17673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17645,
											"end": 17648,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17600,
											"end": 17673,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17600,
											"end": 17673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17679,
											"end": 17868,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 17679,
											"end": 17868,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17756,
											"end": 17788,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 17756,
											"end": 17788,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 17756,
											"end": 17788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17756,
											"end": 17788,
											"name": "tag",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 17756,
											"end": 17788,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17797,
											"end": 17862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 17855,
											"end": 17861,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17847,
											"end": 17853,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17841,
											"end": 17845,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17797,
											"end": 17862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 17797,
											"end": 17862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17797,
											"end": 17862,
											"name": "tag",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 17797,
											"end": 17862,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17732,
											"end": 17868,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17679,
											"end": 17868,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17679,
											"end": 17868,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17679,
											"end": 17868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17874,
											"end": 18060,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 17874,
											"end": 18060,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17934,
											"end": 18054,
											"name": "tag",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 17934,
											"end": 18054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17951,
											"end": 17954,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17944,
											"end": 17949,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17941,
											"end": 17955,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 17934,
											"end": 18054,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17934,
											"end": 18054,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 17934,
											"end": 18054,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18005,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 18042,
											"end": 18043,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18035,
											"end": 18040,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18005,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 18005,
											"end": 18044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18005,
											"end": 18044,
											"name": "tag",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 18005,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17978,
											"end": 17979,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 17971,
											"end": 17976,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17967,
											"end": 17980,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17958,
											"end": 17980,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17958,
											"end": 17980,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17934,
											"end": 18054,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 17934,
											"end": 18054,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17934,
											"end": 18054,
											"name": "tag",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 17934,
											"end": 18054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17874,
											"end": 18060,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17874,
											"end": 18060,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17874,
											"end": 18060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18066,
											"end": 18609,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 18066,
											"end": 18609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18167,
											"end": 18169,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 18162,
											"end": 18165,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18159,
											"end": 18170,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 18156,
											"end": 18602,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18156,
											"end": 18602,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 18156,
											"end": 18602,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18201,
											"end": 18239,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 18233,
											"end": 18238,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18201,
											"end": 18239,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 18201,
											"end": 18239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18201,
											"end": 18239,
											"name": "tag",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 18201,
											"end": 18239,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18285,
											"end": 18314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 18303,
											"end": 18313,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18285,
											"end": 18314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 18285,
											"end": 18314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18285,
											"end": 18314,
											"name": "tag",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 18285,
											"end": 18314,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18275,
											"end": 18283,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18271,
											"end": 18315,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18468,
											"end": 18470,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18456,
											"end": 18466,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18453,
											"end": 18471,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 18450,
											"end": 18499,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18450,
											"end": 18499,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 18450,
											"end": 18499,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18489,
											"end": 18497,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18474,
											"end": 18497,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18474,
											"end": 18497,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18450,
											"end": 18499,
											"name": "tag",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 18450,
											"end": 18499,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18512,
											"end": 18592,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 18568,
											"end": 18590,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 18586,
											"end": 18589,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18568,
											"end": 18590,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 18568,
											"end": 18590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18568,
											"end": 18590,
											"name": "tag",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 18568,
											"end": 18590,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18558,
											"end": 18566,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18554,
											"end": 18591,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18541,
											"end": 18552,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18512,
											"end": 18592,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 18512,
											"end": 18592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18512,
											"end": 18592,
											"name": "tag",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 18512,
											"end": 18592,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18171,
											"end": 18602,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18171,
											"end": 18602,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18156,
											"end": 18602,
											"name": "tag",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 18156,
											"end": 18602,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18066,
											"end": 18609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18066,
											"end": 18609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18066,
											"end": 18609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18066,
											"end": 18609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18615,
											"end": 18732,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 18615,
											"end": 18732,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18669,
											"end": 18677,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18719,
											"end": 18724,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18713,
											"end": 18717,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18709,
											"end": 18725,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 18688,
											"end": 18725,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18688,
											"end": 18725,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18615,
											"end": 18732,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18615,
											"end": 18732,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18615,
											"end": 18732,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18615,
											"end": 18732,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18615,
											"end": 18732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18738,
											"end": 18907,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 18738,
											"end": 18907,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18782,
											"end": 18788,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18815,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 18863,
											"end": 18864,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18859,
											"end": 18865,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 18851,
											"end": 18856,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18848,
											"end": 18849,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 18844,
											"end": 18857,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 18815,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 18815,
											"end": 18866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18815,
											"end": 18866,
											"name": "tag",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 18815,
											"end": 18866,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18811,
											"end": 18867,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 18896,
											"end": 18900,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 18890,
											"end": 18894,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18886,
											"end": 18901,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 18876,
											"end": 18901,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18876,
											"end": 18901,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18789,
											"end": 18907,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18738,
											"end": 18907,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18738,
											"end": 18907,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18738,
											"end": 18907,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18738,
											"end": 18907,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18738,
											"end": 18907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18912,
											"end": 19207,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 18912,
											"end": 19207,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18988,
											"end": 18992,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19134,
											"end": 19163,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 19159,
											"end": 19162,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19153,
											"end": 19157,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19134,
											"end": 19163,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 19134,
											"end": 19163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19134,
											"end": 19163,
											"name": "tag",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 19134,
											"end": 19163,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19126,
											"end": 19163,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19126,
											"end": 19163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19196,
											"end": 19199,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19193,
											"end": 19194,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 19189,
											"end": 19200,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 19183,
											"end": 19187,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19180,
											"end": 19201,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 19172,
											"end": 19201,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19172,
											"end": 19201,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18912,
											"end": 19207,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18912,
											"end": 19207,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18912,
											"end": 19207,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18912,
											"end": 19207,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18912,
											"end": 19207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19212,
											"end": 20607,
											"name": "tag",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 19212,
											"end": 20607,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19329,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 19362,
											"end": 19365,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19329,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 19329,
											"end": 19366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19329,
											"end": 19366,
											"name": "tag",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 19329,
											"end": 19366,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19431,
											"end": 19449,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19423,
											"end": 19429,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19420,
											"end": 19450,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 19417,
											"end": 19473,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19417,
											"end": 19473,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 19417,
											"end": 19473,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19453,
											"end": 19471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 19453,
											"end": 19471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 19453,
											"end": 19471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19453,
											"end": 19471,
											"name": "tag",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 19453,
											"end": 19471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19417,
											"end": 19473,
											"name": "tag",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 19417,
											"end": 19473,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19497,
											"end": 19535,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 19529,
											"end": 19533,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19523,
											"end": 19534,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 19497,
											"end": 19535,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "87"
										},
										{
											"begin": 19497,
											"end": 19535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19497,
											"end": 19535,
											"name": "tag",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 19497,
											"end": 19535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19582,
											"end": 19649,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 19642,
											"end": 19648,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19634,
											"end": 19640,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19628,
											"end": 19632,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19582,
											"end": 19649,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 19582,
											"end": 19649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19582,
											"end": 19649,
											"name": "tag",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 19582,
											"end": 19649,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19676,
											"end": 19677,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19700,
											"end": 19704,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19687,
											"end": 19704,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19687,
											"end": 19704,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19732,
											"end": 19734,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 19724,
											"end": 19730,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19721,
											"end": 19735,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 19749,
											"end": 19750,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 19744,
											"end": 20362,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19744,
											"end": 20362,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 19744,
											"end": 20362,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 19744,
											"end": 20362,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20406,
											"end": 20407,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20423,
											"end": 20429,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20420,
											"end": 20497,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20420,
											"end": 20497,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 20420,
											"end": 20497,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20472,
											"end": 20481,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20467,
											"end": 20470,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 20463,
											"end": 20482,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20457,
											"end": 20483,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20448,
											"end": 20483,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20448,
											"end": 20483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20420,
											"end": 20497,
											"name": "tag",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 20420,
											"end": 20497,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20523,
											"end": 20590,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 20583,
											"end": 20589,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20576,
											"end": 20581,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20523,
											"end": 20590,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 20523,
											"end": 20590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20523,
											"end": 20590,
											"name": "tag",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 20523,
											"end": 20590,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20517,
											"end": 20521,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 20510,
											"end": 20591,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 20379,
											"end": 20601,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19714,
											"end": 20601,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 19714,
											"end": 20601,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19744,
											"end": 20362,
											"name": "tag",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 19744,
											"end": 20362,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19796,
											"end": 19800,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 19792,
											"end": 19801,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 19784,
											"end": 19790,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19780,
											"end": 19802,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 19830,
											"end": 19867,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 19862,
											"end": 19866,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 19830,
											"end": 19867,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 19830,
											"end": 19867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19830,
											"end": 19867,
											"name": "tag",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 19830,
											"end": 19867,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19889,
											"end": 19890,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19903,
											"end": 20111,
											"name": "tag",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 19903,
											"end": 20111,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19917,
											"end": 19924,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19914,
											"end": 19915,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19911,
											"end": 19925,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 19903,
											"end": 20111,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19903,
											"end": 20111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 19903,
											"end": 20111,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19996,
											"end": 20005,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19991,
											"end": 19994,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 19987,
											"end": 20006,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19981,
											"end": 20007,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 19973,
											"end": 19979,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19966,
											"end": 20008,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 20047,
											"end": 20048,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 20039,
											"end": 20045,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20035,
											"end": 20049,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20025,
											"end": 20049,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20025,
											"end": 20049,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20094,
											"end": 20096,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20083,
											"end": 20092,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20079,
											"end": 20097,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20066,
											"end": 20097,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 20066,
											"end": 20097,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19940,
											"end": 19944,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19937,
											"end": 19938,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19933,
											"end": 19945,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19928,
											"end": 19945,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19928,
											"end": 19945,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19903,
											"end": 20111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 19903,
											"end": 20111,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19903,
											"end": 20111,
											"name": "tag",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 19903,
											"end": 20111,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20139,
											"end": 20145,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 20130,
											"end": 20137,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20127,
											"end": 20146,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 20124,
											"end": 20303,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20124,
											"end": 20303,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 20124,
											"end": 20303,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20197,
											"end": 20206,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20192,
											"end": 20195,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 20188,
											"end": 20207,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20182,
											"end": 20208,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20240,
											"end": 20288,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 20282,
											"end": 20286,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 20274,
											"end": 20280,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 20270,
											"end": 20287,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 20259,
											"end": 20268,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20240,
											"end": 20288,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 20240,
											"end": 20288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20240,
											"end": 20288,
											"name": "tag",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 20240,
											"end": 20288,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20232,
											"end": 20238,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20225,
											"end": 20289,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 20147,
											"end": 20303,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20124,
											"end": 20303,
											"name": "tag",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 20124,
											"end": 20303,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20349,
											"end": 20350,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 20345,
											"end": 20346,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 20333,
											"end": 20347,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 20329,
											"end": 20351,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20323,
											"end": 20327,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 20316,
											"end": 20352,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 19751,
											"end": 20362,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19751,
											"end": 20362,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19751,
											"end": 20362,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19714,
											"end": 20601,
											"name": "tag",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 19714,
											"end": 20601,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19714,
											"end": 20601,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19304,
											"end": 20607,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19304,
											"end": 20607,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19304,
											"end": 20607,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19212,
											"end": 20607,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19212,
											"end": 20607,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19212,
											"end": 20607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20613,
											"end": 20945,
											"name": "tag",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 20613,
											"end": 20945,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20734,
											"end": 20738,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20772,
											"end": 20774,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 20761,
											"end": 20770,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20757,
											"end": 20775,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20749,
											"end": 20775,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20749,
											"end": 20775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20785,
											"end": 20856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 20853,
											"end": 20854,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20842,
											"end": 20851,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20838,
											"end": 20855,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20829,
											"end": 20835,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20785,
											"end": 20856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 20785,
											"end": 20856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20785,
											"end": 20856,
											"name": "tag",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 20785,
											"end": 20856,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20866,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 20934,
											"end": 20936,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20923,
											"end": 20932,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20919,
											"end": 20937,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20910,
											"end": 20916,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20866,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 20866,
											"end": 20938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20866,
											"end": 20938,
											"name": "tag",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 20866,
											"end": 20938,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20613,
											"end": 20945,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 20613,
											"end": 20945,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20613,
											"end": 20945,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20613,
											"end": 20945,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20613,
											"end": 20945,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20613,
											"end": 20945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20951,
											"end": 21131,
											"name": "tag",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 20951,
											"end": 21131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20999,
											"end": 21076,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20996,
											"end": 20997,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20989,
											"end": 21077,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21096,
											"end": 21100,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 21093,
											"end": 21094,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 21086,
											"end": 21101,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21120,
											"end": 21124,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 21117,
											"end": 21118,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21110,
											"end": 21125,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace_Simple.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(string)": "d85d3d27",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketplaceContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace_Simple.sol\":\"BoredPetsNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x4764a3cb550846ec714888e19407f05c8d3cf56181d4a090f451beb8064b1a41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0dfe15ab99b1ec4aec1d0c90dc077b27aab5a1a0d305c6c641698100fc27c64\",\"dweb:/ipfs/QmWWsr2frKgKhNMJwdRXBe7vgRHCzSNTLyGMxbbc6Fuz81\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x7b29b3947e0a86bf596aa408b1395110a9a7fa31213dc928cf5ec927edff2585\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d59b31e9c356988b8eb7bf63a4ea264f583dd0a62b86a163632c40bbe3aa7050\",\"dweb:/ipfs/QmZBiYy7icKr5Lucb8yxujYfg3AMHW2zLD7n4JFYNVSinV\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xdac767d30fc5b3ab8cb3238a18a86a6738f02ec8fad07b1cd74493c7212d3141\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5142e04f3b754c3c24795000e10d90dbd5565499f1b019de9e9f6a847a219a0\",\"dweb:/ipfs/QmS7VJ4LxS4F4okSxSu93ELv6irVCGfQDPDH3ENUz2rGYF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xea2ce2276d96ef81067a452a0c27f31bee2d3c47de47041fda9931c10e825523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29793c6d491ee3bf35f86ed717126830efc0309ac9d10f6c3059f4da0355fce7\",\"dweb:/ipfs/QmUZV6nnQEXoiBDCgYSyPhSqLjAFJsrzghX5aqKWCrmxtH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]},\"contracts/Marketplace_Simple.sol\":{\"keccak256\":\"0x1734b5b35b40f063f602e4e5713f37a26ea9c4dcb07be7f51b5f12d126bec65d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3181148bcb7722e4644a9b2355d7c04075646faa9aa539185965a96d0c16a5\",\"dweb:/ipfs/QmX1j5bLUPosLoq6xN4a52jd7t18bjqEfAtD2gnArj696p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "contracts/Marketplace_Simple.sol:BoredPetsNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "contracts/Marketplace_Simple.sol:BoredPetsNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "contracts/Marketplace_Simple.sol:BoredPetsNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "contracts/Marketplace_Simple.sol:BoredPetsNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "contracts/Marketplace_Simple.sol:BoredPetsNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "contracts/Marketplace_Simple.sol:BoredPetsNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1340,
								"contract": "contracts/Marketplace_Simple.sol:BoredPetsNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2946,
								"contract": "contracts/Marketplace_Simple.sol:BoredPetsNFT",
								"label": "_tokenIds",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2948,
								"contract": "contracts/Marketplace_Simple.sol:BoredPetsNFT",
								"label": "marketplaceContract",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1779
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4,
							"sourceUnit": 1780,
							"src": "137:59:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1779,
										"src": "145:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "109:89:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1779
						],
						"IERC4906": [
							27
						],
						"IERC721": [
							1294
						]
					},
					"id": 28,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 4,
							"src": "138:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1779,
										"src": "146:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 32,
							"src": "178:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "186:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "IERC165",
										"nameLocations": [
											"288:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1779,
										"src": "288:7:1"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:1"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC721",
										"nameLocations": [
											"297:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "297:7:1"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:1"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "220:46:1",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 27,
							"linearizedBaseContracts": [
								27,
								1294,
								1779
							],
							"name": "IERC4906",
							"nameLocation": "276:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "312:203:1",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 19,
									"name": "MetadataUpdate",
									"nameLocation": "527:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "550:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "542:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "541:18:1"
									},
									"src": "521:39:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "568:214:1",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 26,
									"name": "BatchMetadataUpdate",
									"nameLocation": "794:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "822:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "814:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "844:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "836:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:42:1"
									},
									"src": "788:68:1"
								}
							],
							"scope": 28,
							"src": "266:593:1",
							"usedErrors": [],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "110:751:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1294
						]
					},
					"id": 32,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 29,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 31,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 32,
							"sourceUnit": 1295,
							"src": "137:52:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 30,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "145:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "109:82:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							168
						],
						"IERC20Errors": [
							73
						],
						"IERC721Errors": [
							121
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 33,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "142:142:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "IERC20Errors",
							"nameLocation": "296:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "316:314:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 43,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "642:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "675:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "667:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "691:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "683:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "708:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "700:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:49:3"
									},
									"src": "636:80:3"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "724:155:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 48,
									"name": "ERC20InvalidSender",
									"nameLocation": "891:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "918:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "910:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:16:3"
									},
									"src": "885:41:3"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "934:162:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 53,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1108:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1137:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1129:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:18:3"
									},
									"src": "1102:45:3"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1155:350:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 62,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1517:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1544:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1569:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1561:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1588:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1580:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:52:3"
									},
									"src": "1511:85:3"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1604:177:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 67,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1793:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1822:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1814:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:18:3"
									},
									"src": "1787:45:3"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1840:198:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 72,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2050:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2078:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2070:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:17:3"
									},
									"src": "2044:43:3"
								}
							],
							"scope": 169,
							"src": "286:1804:3",
							"usedErrors": [
								43,
								48,
								53,
								62,
								67,
								72
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 74,
								"nodeType": "StructuredDocumentation",
								"src": "2094:144:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "IERC721Errors",
							"nameLocation": "2250:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2271:223:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 79,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2506:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2533:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2525:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:3"
									},
									"src": "2500:40:3"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2548:135:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 84,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2695:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2726:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2718:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:17:3"
									},
									"src": "2689:46:3"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2743:294:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 93,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3049:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3078:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3070:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3094:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3086:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3111:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3103:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:48:3"
									},
									"src": "3043:75:3"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3126:155:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 98,
									"name": "ERC721InvalidSender",
									"nameLocation": "3293:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3321:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3313:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:16:3"
									},
									"src": "3287:42:3"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3337:162:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 103,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3511:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3541:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3533:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:18:3"
									},
									"src": "3505:46:3"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3559:251:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 110,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3822:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3849:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3875:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3867:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:35:3"
									},
									"src": "3816:68:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3892:177:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 115,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4081:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4111:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4103:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:18:3"
									},
									"src": "4075:46:3"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "4129:200:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 120,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4341:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4371:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4363:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:18:3"
									},
									"src": "4335:46:3"
								}
							],
							"scope": 169,
							"src": "2240:2144:3",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "4388:146:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC1155Errors",
							"nameLocation": "4546:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4568:367:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 133,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4947:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4982:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4974:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4998:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4990:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5015:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "5007:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "5023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4973:66:3"
									},
									"src": "4941:99:3"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "5048:155:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 138,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5215:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5244:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "5236:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:16:3"
									},
									"src": "5209:43:3"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "5260:162:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 143,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5434:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5465:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5457:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5456:18:3"
									},
									"src": "5428:47:3"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5483:260:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 150,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5755:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5792:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5784:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5810:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5802:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:33:3"
									},
									"src": "5749:68:3"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5825:177:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 155,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "6014:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6045:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "6037:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:18:3"
									},
									"src": "6008:47:3"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "6063:200:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 160,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6275:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6306:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6298:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:18:3"
									},
									"src": "6269:47:3"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "6324:285:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 167,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6621:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6655:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6647:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6674:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6666:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:41:3"
									},
									"src": "6615:73:3"
								}
							],
							"scope": 169,
							"src": "4536:2155:3",
							"usedErrors": [
								133,
								138,
								143,
								150,
								155,
								160,
								167
							],
							"usedEvents": []
						}
					],
					"src": "114:6579:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1488
						],
						"ERC165": [
							1767
						],
						"ERC721": [
							1177
						],
						"IERC165": [
							1779
						],
						"IERC721": [
							1294
						],
						"IERC721Errors": [
							121
						],
						"IERC721Metadata": [
							1466
						],
						"IERC721Receiver": [
							1312
						],
						"Strings": [
							1743
						]
					},
					"id": 1178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1295,
							"src": "138:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "146:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1313,
							"src": "178:54:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "186:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1467,
							"src": "234:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 175,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1466,
										"src": "242:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1489,
							"src": "301:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 177,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1488,
										"src": "309:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1744,
							"src": "351:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 179,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1743,
										"src": "359:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1768,
							"src": "401:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 181,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1779,
										"src": "409:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 182,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1767,
										"src": "418:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 169,
							"src": "472:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 184,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 121,
										"src": "480:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 187,
										"name": "Context",
										"nameLocations": [
											"822:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1488,
										"src": "822:7:4"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:4"
								},
								{
									"baseName": {
										"id": 189,
										"name": "ERC165",
										"nameLocations": [
											"831:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1767,
										"src": "831:6:4"
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "831:6:4"
								},
								{
									"baseName": {
										"id": 191,
										"name": "IERC721",
										"nameLocations": [
											"839:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "839:7:4"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "839:7:4"
								},
								{
									"baseName": {
										"id": 193,
										"name": "IERC721Metadata",
										"nameLocations": [
											"848:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1466,
										"src": "848:15:4"
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "848:15:4"
								},
								{
									"baseName": {
										"id": 195,
										"name": "IERC721Errors",
										"nameLocations": [
											"865:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "865:13:4"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "865:13:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "542:250:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1177,
							"linearizedBaseContracts": [
								1177,
								121,
								1466,
								1294,
								1767,
								1779,
								1488
							],
							"name": "ERC721",
							"nameLocation": "812:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 199,
									"libraryName": {
										"id": 197,
										"name": "Strings",
										"nameLocations": [
											"892:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1743,
										"src": "892:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "886:26:4",
									"typeName": {
										"id": 198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "904:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "954:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "939:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 200,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "939:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1004:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "989:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 202,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "989:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 207,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1064:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1020:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 206,
										"keyName": "tokenId",
										"keyNameLocation": "1036:7:4",
										"keyType": {
											"id": 204,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1028:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1020:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1122:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1080:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 210,
										"keyName": "owner",
										"keyNameLocation": "1096:5:4",
										"keyType": {
											"id": 208,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1088:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1080:33:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 209,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 215,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1184:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1140:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 214,
										"keyName": "tokenId",
										"keyNameLocation": "1156:7:4",
										"keyType": {
											"id": 212,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1148:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1140:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 213,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1167:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 221,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1276:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1208:86:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 220,
										"keyName": "owner",
										"keyNameLocation": "1224:5:4",
										"keyType": {
											"id": 216,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1216:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1208:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 219,
											"keyName": "operator",
											"keyNameLocation": "1249:8:4",
											"keyType": {
												"id": 217,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1241:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1233:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 218,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1261:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1475:60:4",
										"statements": [
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1486:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1494:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1486:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1486:13:4"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 233,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1510:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1520:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1510:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1510:17:4"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1303:110:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 238,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1445:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1431:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1431:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1466:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1452:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1452:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:44:4"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:0:4"
									},
									"scope": 1177,
									"src": "1419:116:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1766,
										1778
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1715:197:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 249,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1746:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 251,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "1766:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 250,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1761:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1761:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1294",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1775:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1761:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1746:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 255,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1803:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 257,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "1823:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1466_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1466_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 256,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1818:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1818:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1466",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1840:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1818:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1803:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1746:105:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1892:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 262,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1868:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1177_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1874:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1766,
															"src": "1868:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1868:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1746:158:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 248,
												"id": 267,
												"nodeType": "Return",
												"src": "1726:178:4"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1543:58:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1616:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 245,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 243,
												"name": "ERC165",
												"nameLocations": [
													"1683:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1767,
												"src": "1683:6:4"
											},
											{
												"id": 244,
												"name": "IERC165",
												"nameLocations": [
													"1691:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1779,
												"src": "1691:7:4"
											}
										],
										"src": "1674:25:4"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1641:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1634:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 240,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:20:4"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1709:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1709:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:6:4"
									},
									"scope": 1177,
									"src": "1607:305:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1219
									],
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "2048:141:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 277,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2063:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2080:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2072:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 278,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2072:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2072:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2063:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "2059:89:4",
												"trueBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "2084:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2133:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2125:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 284,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2125:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2125:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 283,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "2106:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2106:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 289,
															"nodeType": "RevertStatement",
															"src": "2099:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 292,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2165:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 294,
													"indexExpression": {
														"id": 293,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2175:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2165:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 276,
												"id": 295,
												"nodeType": "Return",
												"src": "2158:23:4"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "1920:50:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1985:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2003:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1995:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:15:4"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2039:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:9:4"
									},
									"scope": 1177,
									"src": "1976:213:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2323:48:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 306,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "2355:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2341:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2334:29:4"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "2197:48:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2260:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2276:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2268:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:17:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2314:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:9:4"
									},
									"scope": 1177,
									"src": "2251:120:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1451
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2498:31:4",
										"statements": [
											{
												"expression": {
													"id": 316,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 201,
													"src": "2516:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "2509:12:4"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2379:53:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2447:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:2:4"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2483:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2483:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:15:4"
									},
									"scope": 1177,
									"src": "2438:91:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2660:33:4",
										"statements": [
											{
												"expression": {
													"id": 325,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 324,
												"id": 326,
												"nodeType": "Return",
												"src": "2671:14:4"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2537:55:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2607:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:2:4"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2645:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 322,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2645:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2644:15:4"
									},
									"scope": 1177,
									"src": "2598:95:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1465
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2843:181:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2868:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 336,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2854:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2854:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "2854:22:4"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2903:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "2889:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 340,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2889:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 342,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "2913:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2913:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2889:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "2947:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2941:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 345,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2941:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2941:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2956:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2941:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2965:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2941:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3014:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2941:75:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 355,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2983:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 356,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "2992:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3000:8:4",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1556,
																	"src": "2992:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2992:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2969:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 352,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2969:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2976:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2969:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2969:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 335,
												"id": 362,
												"nodeType": "Return",
												"src": "2934:82:4"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "2701:57:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2773:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2790:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2782:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:17:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2828:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 333,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2828:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:15:4"
									},
									"scope": 1177,
									"src": "2764:260:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "3339:28:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3357:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 369,
												"id": 371,
												"nodeType": "Return",
												"src": "3350:9:4"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "3032:235:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3282:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3290:2:4"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3324:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3324:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:15:4"
									},
									"scope": 1177,
									"src": "3273:94:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1267
									],
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "3490:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3510:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 384,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "3523:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3523:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															980,
															1046
														],
														"referencedDeclaration": 980,
														"src": "3501:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "3501:35:4"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "3375:48:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3438:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3454:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3446:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3466:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3458:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:29:4"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3490:0:4"
									},
									"scope": 1177,
									"src": "3429:115:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1283
									],
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "3686:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3711:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "3697:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "3697:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3752:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 401,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "3739:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 396,
												"id": 404,
												"nodeType": "Return",
												"src": "3732:28:4"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "3552:52:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3619:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3639:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3631:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:17:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3677:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3676:9:4"
									},
									"scope": 1177,
									"src": "3610:158:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "3915:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 415,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "3945:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3945:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "3959:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "3969:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 414,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3926:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "3926:52:4"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "3776:58:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3849:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3890:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3885:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3885:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3866:33:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3915:0:4"
									},
									"scope": 1177,
									"src": "3840:146:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "4151:61:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 432,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "4169:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 434,
														"indexExpression": {
															"id": 433,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4188:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4169:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 436,
													"indexExpression": {
														"id": 435,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "4195:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4169:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 431,
												"id": 437,
												"nodeType": "Return",
												"src": "4162:42:4"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "3994:57:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4066:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4091:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4083:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4106:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4098:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4098:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4082:33:4"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4145:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4145:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4144:6:4"
									},
									"scope": 1177,
									"src": "4057:155:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1259
									],
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "4359:508:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 449,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "4374:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4388:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4380:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 450,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4380:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4380:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4374:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "4370:89:4",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "4392:67:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4444:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4436:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 456,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4436:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4436:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 455,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "4414:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4414:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 461,
															"nodeType": "RevertStatement",
															"src": "4407:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4688:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "4680:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 464,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4680:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"arguments": [
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "4712:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4716:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 469,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "4725:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4725:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 466,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "4704:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4680:58:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "4753:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 474,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "4770:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4753:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 483,
												"nodeType": "IfStatement",
												"src": "4749:111:4",
												"trueBody": {
													"id": 482,
													"nodeType": "Block",
													"src": "4776:84:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 477,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "4819:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 478,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "4825:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 479,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "4834:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 476,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "4798:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4798:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 481,
															"nodeType": "RevertStatement",
															"src": "4791:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "4220:53:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4288:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4309:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4301:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4323:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4315:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4315:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4300:43:4"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4359:0:4"
									},
									"scope": 1177,
									"src": "4279:588:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1249
									],
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "5014:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "5042:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "5048:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "5052:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5061:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 495,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															529
														],
														"referencedDeclaration": 529,
														"src": "5025:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5025:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "5025:39:4"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "4875:57:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4947:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4972:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4964:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4986:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4978:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4998:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4990:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:43:4"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5014:0:4"
									},
									"scope": 1177,
									"src": "4938:134:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1239
									],
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5246:108:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5270:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5276:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5280:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5257:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5257:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "5257:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5322:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5328:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "5341:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 521,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "5299:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5299:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5299:47:4"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "5080:57:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5152:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5177:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5169:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5191:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5183:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5225:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5212:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5212:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:62:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5246:0:4"
									},
									"scope": 1177,
									"src": "5143:211:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "5953:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 537,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "5971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 539,
													"indexExpression": {
														"id": 538,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "5979:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5971:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 536,
												"id": 540,
												"nodeType": "Return",
												"src": "5964:23:4"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5362:510:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5887:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5904:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "5896:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:17:4"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "5944:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5943:9:4"
									},
									"scope": 1177,
									"src": "5878:117:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "6195:50:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 550,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "6213:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "6229:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6213:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 549,
												"id": 553,
												"nodeType": "Return",
												"src": "6206:31:4"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "6003:107:4",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "6125:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6146:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6138:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6138:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6137:17:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6186:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:9:4"
									},
									"scope": 1177,
									"src": "6116:129:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "6674:167:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "6705:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6724:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6716:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 568,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6716:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6716:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6705:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 573,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "6744:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 574,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "6753:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6744:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 577,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "6781:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 578,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 560,
																				"src": "6788:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 576,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "6764:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6764:32:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6744:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 582,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 562,
																				"src": "6813:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 581,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6800:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6800:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 584,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "6825:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6800:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6744:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 587,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6743:90:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6705:128:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 566,
												"id": 589,
												"nodeType": "Return",
												"src": "6685:148:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "6253:306:4",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6574:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6596:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6588:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6611:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6603:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6628:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6620:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6587:49:4"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6668:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:4"
									},
									"scope": 1177,
									"src": "6565:276:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "7382:279:4",
										"statements": [
											{
												"condition": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7397:39:4",
													"subExpression": {
														"arguments": [
															{
																"id": 602,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "7412:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 603,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "7419:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 604,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "7428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 601,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7398:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7398:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "7393:261:4",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "7438:216:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 607,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "7457:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7474:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7466:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 608,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7466:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7466:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7457:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 623,
																"nodeType": "Block",
																"src": "7557:86:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 619,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 596,
																					"src": "7610:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 620,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7619:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 618,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "7583:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7583:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 622,
																		"nodeType": "RevertStatement",
																		"src": "7576:51:4"
																	}
																]
															},
															"id": 624,
															"nodeType": "IfStatement",
															"src": "7453:190:4",
															"trueBody": {
																"id": 617,
																"nodeType": "Block",
																"src": "7478:73:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 614,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7527:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 613,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 84,
																				"src": "7504:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7504:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 616,
																		"nodeType": "RevertStatement",
																		"src": "7497:38:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "6849:430:4",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7294:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7319:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7311:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7311:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7351:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7343:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7310:49:4"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7382:0:4"
									},
									"scope": 1177,
									"src": "7285:376:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "8390:82:4",
										"statements": [
											{
												"id": 642,
												"nodeType": "UncheckedBlock",
												"src": "8401:64:4",
												"statements": [
													{
														"expression": {
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 636,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "8426:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 638,
																"indexExpression": {
																	"id": 637,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "8436:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8426:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 639,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "8448:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8426:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 641,
														"nodeType": "ExpressionStatement",
														"src": "8426:27:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "7669:640:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8324:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8349:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8341:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8341:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8366:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8358:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 632,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:32:4"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8390:0:4"
									},
									"scope": 1177,
									"src": "8315:157:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "9173:729:4",
										"statements": [
											{
												"assignments": [
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "9192:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 733,
														"src": "9184:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 656,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9184:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"arguments": [
														{
															"id": 659,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9208:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 658,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "9199:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9199:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9184:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "9279:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9295:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9287:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 663,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9287:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9287:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9279:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "9275:88:4",
												"trueBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "9299:64:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 669,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "9331:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 670,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "9337:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 671,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9343:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 668,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "9314:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9314:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 673,
															"nodeType": "ExpressionStatement",
															"src": "9314:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "9410:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9426:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9418:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 677,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9418:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9418:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9410:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "9406:263:4",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "9430:239:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9545:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9537:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 683,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9537:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9537:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 687,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9549:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9566:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9558:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 688,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9558:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9558:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9570:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 682,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		980,
																		1046
																	],
																	"referencedDeclaration": 1046,
																	"src": "9528:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9528:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 694,
															"nodeType": "ExpressionStatement",
															"src": "9528:48:4"
														},
														{
															"id": 701,
															"nodeType": "UncheckedBlock",
															"src": "9593:65:4",
															"statements": [
																{
																	"expression": {
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 695,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "9622:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 697,
																			"indexExpression": {
																				"id": 696,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 657,
																				"src": "9632:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9622:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9641:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9622:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 700,
																	"nodeType": "ExpressionStatement",
																	"src": "9622:20:4"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9685:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9699:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9691:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9691:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9691:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9685:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "IfStatement",
												"src": "9681:111:4",
												"trueBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "9703:89:4",
													"statements": [
														{
															"id": 716,
															"nodeType": "UncheckedBlock",
															"src": "9718:63:4",
															"statements": [
																{
																	"expression": {
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 710,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "9747:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 712,
																			"indexExpression": {
																				"id": 711,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "9757:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9747:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9764:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9747:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 715,
																	"nodeType": "ExpressionStatement",
																	"src": "9747:18:4"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 719,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "9804:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 721,
														"indexExpression": {
															"id": 720,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9812:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9804:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 722,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9823:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9804:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "9804:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 726,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "9852:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "9858:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9862:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "9843:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9843:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "EmitStatement",
												"src": "9838:32:4"
											},
											{
												"expression": {
													"id": 731,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 657,
													"src": "9890:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 655,
												"id": 732,
												"nodeType": "Return",
												"src": "9883:11:4"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "8480:592:4",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "9087:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9103:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9095:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9095:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9115:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9107:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "9132:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9124:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9124:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9094:43:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9164:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9164:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9163:9:4"
									},
									"scope": 1177,
									"src": "9078:824:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "10291:282:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 742,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "10306:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10320:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10312:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 743,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10312:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10312:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10306:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "IfStatement",
												"src": "10302:89:4",
												"trueBody": {
													"id": 755,
													"nodeType": "Block",
													"src": "10324:67:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10376:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10368:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 749,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10368:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10368:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 748,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "10346:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10346:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 754,
															"nodeType": "RevertStatement",
															"src": "10339:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10409:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "10401:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 757,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10401:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"initialValue": {
													"arguments": [
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "10433:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "10437:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10454:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10446:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10446:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10446:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 759,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "10425:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10425:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10401:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "10472:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10497:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10489:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 769,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10489:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10489:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10472:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"nodeType": "IfStatement",
												"src": "10468:98:4",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "10501:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10543:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 775,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10543:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10543:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 774,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "10523:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10523:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 780,
															"nodeType": "RevertStatement",
															"src": "10516:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "9910:322:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10247:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10261:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "10253:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10253:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10273:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "10265:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10265:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10252:29:4"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10291:0:4"
									},
									"scope": 1177,
									"src": "10238:335:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "10993:45:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "11014:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "11018:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11027:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 792,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															799,
															825
														],
														"referencedDeclaration": 825,
														"src": "11004:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11004:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "11004:26:4"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "10581:349:4",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10945:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10963:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10955:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10955:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10975:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10967:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10954:29:4"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10993:0:4"
									},
									"scope": 1177,
									"src": "10936:102:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "11349:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 810,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11366:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "11370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "11360:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11360:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "11360:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11420:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11412:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 815,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11412:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11412:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11424:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "11428:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 821,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "11437:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 814,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "11389:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11389:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "11389:53:4"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "11046:213:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11274:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11292:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "11284:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11284:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11304:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "11296:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11296:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11326:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "11313:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 805,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11313:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11283:48:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11349:0:4"
									},
									"scope": 1177,
									"src": "11265:185:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "11830:191:4",
										"statements": [
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11849:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "11841:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 831,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11841:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11881:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11873:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11873:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11873:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "11885:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11902:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11894:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 839,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11894:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11894:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 833,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "11865:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11865:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11841:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "11920:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11945:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11937:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11937:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11937:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11920:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "11916:98:4",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "11949:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 852,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "11994:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 851,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "11971:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11971:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "RevertStatement",
															"src": "11964:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "11458:325:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11798:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11812:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "11804:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11804:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11803:17:4"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11830:0:4"
									},
									"scope": 1177,
									"src": "11789:232:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "12429:399:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 868,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "12444:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12458:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12450:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 869,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12450:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12450:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12444:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "12440:89:4",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "12462:67:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12514:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12506:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 875,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12506:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12506:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 874,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "12484:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12484:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "RevertStatement",
															"src": "12477:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12547:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "12539:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 883,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12539:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"arguments": [
														{
															"id": 886,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "12571:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "12575:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12592:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12584:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12584:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12584:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 885,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "12563:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12563:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12539:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 894,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "12610:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12635:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12627:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 895,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12627:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12627:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12610:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 905,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "12714:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 906,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "12731:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12714:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 915,
													"nodeType": "IfStatement",
													"src": "12710:111:4",
													"trueBody": {
														"id": 914,
														"nodeType": "Block",
														"src": "12737:84:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 909,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "12780:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 910,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 865,
																			"src": "12786:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 911,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "12795:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 908,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 93,
																		"src": "12759:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12759:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 913,
																"nodeType": "RevertStatement",
																"src": "12752:57:4"
															}
														]
													}
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "12606:215:4",
												"trueBody": {
													"id": 904,
													"nodeType": "Block",
													"src": "12639:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 901,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "12684:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 900,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "12661:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12661:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 903,
															"nodeType": "RevertStatement",
															"src": "12654:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "12029:323:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12367:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12385:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12377:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12377:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12399:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12391:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12391:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12411:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12403:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12403:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12376:43:4"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12429:0:4"
									},
									"scope": 1177,
									"src": "12358:470:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "13857:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13882:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "13888:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "13892:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13901:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 928,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															936,
															962
														],
														"referencedDeclaration": 962,
														"src": "13868:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13868:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "13868:36:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "12836:940:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13791:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13813:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13805:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13805:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13827:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13819:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13839:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13831:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13831:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13804:43:4"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13857:0:4"
									},
									"scope": 1177,
									"src": "13782:130:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "14257:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 949,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "14278:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "14284:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "14288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 948,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "14268:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14268:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "14268:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "14330:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "14336:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "14340:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 958,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "14349:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 954,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "14307:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14307:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "14307:47:4"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "13920:229:4",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14164:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14186:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "14178:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14200:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "14192:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14212:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "14204:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14204:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14234:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "14221:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 944,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14221:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14177:62:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14257:0:4"
									},
									"scope": 1177,
									"src": "14155:207:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "14887:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 973,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "14907:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "14911:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 975,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "14920:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14926:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 972,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															980,
															1046
														],
														"referencedDeclaration": 1046,
														"src": "14898:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14898:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "14898:33:4"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "14370:441:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14826:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14843:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14835:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14835:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14855:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14847:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14847:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14872:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14864:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14864:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14834:43:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14887:0:4"
									},
									"scope": 1177,
									"src": "14817:122:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "15221:584:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "15289:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 993,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "15302:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15318:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15310:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15310:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15310:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15302:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15289:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "15285:471:4",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "15322:434:4",
													"statements": [
														{
															"assignments": [
																1001
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1001,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "15345:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1037,
																	"src": "15337:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15337:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1005,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1003,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "15367:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1002,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "15353:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15353:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15337:38:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1006,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "15506:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15522:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15514:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1007,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15514:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15514:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15506:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1012,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "15528:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1013,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "15537:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15528:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15506:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15545:30:4",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1001,
																				"src": "15563:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 987,
																				"src": "15570:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1016,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "15546:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15546:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15506:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1027,
															"nodeType": "IfStatement",
															"src": "15502:144:4",
															"trueBody": {
																"id": 1026,
																"nodeType": "Block",
																"src": "15577:69:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1023,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 987,
																					"src": "15625:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1022,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 115,
																				"src": "15603:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15603:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1025,
																		"nodeType": "RevertStatement",
																		"src": "15596:34:4"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1028,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "15666:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1036,
															"nodeType": "IfStatement",
															"src": "15662:83:4",
															"trueBody": {
																"id": 1035,
																"nodeType": "Block",
																"src": "15677:68:4",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1030,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "15710:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1031,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "15717:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1032,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 985,
																					"src": "15721:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1029,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1202,
																				"src": "15701:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15701:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1034,
																		"nodeType": "EmitStatement",
																		"src": "15696:33:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1039,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "15768:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1041,
														"indexExpression": {
															"id": 1040,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "15784:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15768:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1042,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "15795:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15768:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "15768:29:4"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "14947:174:4",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15136:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15153:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "15145:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15145:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15165:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "15157:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "15182:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "15174:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15174:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "15193:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "15188:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15188:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15144:59:4"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15221:0:4"
									},
									"scope": 1177,
									"src": "15127:678:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "16117:225:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "16132:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16152:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16144:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1057,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16144:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16144:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16132:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "IfStatement",
												"src": "16128:93:4",
												"trueBody": {
													"id": 1066,
													"nodeType": "Block",
													"src": "16156:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1063,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "16200:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1062,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "16178:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16178:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1065,
															"nodeType": "RevertStatement",
															"src": "16171:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1068,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "16231:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1071,
															"indexExpression": {
																"id": 1069,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "16250:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16231:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1072,
														"indexExpression": {
															"id": 1070,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "16257:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16231:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1073,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "16269:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16231:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "16231:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1077,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "16308:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "16315:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "16325:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1076,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "16293:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16293:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "EmitStatement",
												"src": "16288:46:4"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "15813:205:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "16033:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16060:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "16052:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16052:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16075:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "16067:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16090:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "16085:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16085:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16051:48:4"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16117:0:4"
									},
									"scope": 1177,
									"src": "16024:318:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "16657:175:4",
										"statements": [
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16676:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1111,
														"src": "16668:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1091,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16668:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"id": 1094,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "16693:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "16684:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16684:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16668:33:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1097,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "16716:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16725:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1098,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16725:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16725:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16716:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "16712:90:4",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "16737:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "16782:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1103,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "16759:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16759:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1106,
															"nodeType": "RevertStatement",
															"src": "16752:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1109,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1092,
													"src": "16819:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1110,
												"nodeType": "Return",
												"src": "16812:12:4"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "16350:229:4",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16594:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16616:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "16608:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16608:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16607:17:4"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "16648:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16648:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16647:9:4"
									},
									"scope": 1177,
									"src": "16585:247:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "17484:697:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1124,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "17499:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17502:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17499:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17507:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17499:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17516:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17499:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "17495:679:4",
												"trueBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "17519:655:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1153,
																		"nodeType": "Block",
																		"src": "17634:166:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1142,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "17657:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1143,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1312,
																								"src": "17667:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1144,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17683:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1311,
																							"src": "17667:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1145,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17700:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17667:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17657:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1152,
																				"nodeType": "IfStatement",
																				"src": "17653:132:4",
																				"trueBody": {
																					"id": 1151,
																					"nodeType": "Block",
																					"src": "17710:75:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1148,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1117,
																										"src": "17762:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1147,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17740:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1149,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17740:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1150,
																							"nodeType": "RevertStatement",
																							"src": "17733:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1154,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1141,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1140,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17626:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1154,
																				"src": "17619:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1139,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17619:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17618:15:4"
																	},
																	"src": "17610:190:4"
																},
																{
																	"block": {
																		"id": 1170,
																		"nodeType": "Block",
																		"src": "17829:334:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1158,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1156,
																							"src": "17852:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17859:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17852:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1160,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17869:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17852:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1168,
																					"nodeType": "Block",
																					"src": "17953:195:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "18041:88:4",
																								"nodeType": "YulBlock",
																								"src": "18041:88:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "18079:2:4",
																															"nodeType": "YulLiteral",
																															"src": "18079:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "18083:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "18083:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "18075:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "18075:3:4"
																													},
																													"nativeSrc": "18075:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "18075:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "18098:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "18098:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "18092:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "18092:5:4"
																													},
																													"nativeSrc": "18092:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "18092:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "18068:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "18068:6:4"
																											},
																											"nativeSrc": "18068:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "18068:38:4"
																										},
																										"nativeSrc": "18068:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "18068:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1156,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18083:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1156,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18098:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1167,
																							"nodeType": "InlineAssembly",
																							"src": "18032:97:4"
																						}
																					]
																				},
																				"id": 1169,
																				"nodeType": "IfStatement",
																				"src": "17848:300:4",
																				"trueBody": {
																					"id": 1166,
																					"nodeType": "Block",
																					"src": "17872:75:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1163,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1117,
																										"src": "17924:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1162,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17902:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1164,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17902:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1165,
																							"nodeType": "RevertStatement",
																							"src": "17895:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1171,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1157,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1156,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17821:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1171,
																				"src": "17808:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17808:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17807:21:4"
																	},
																	"src": "17801:362:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1133,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "17575:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17575:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1135,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "17589:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1136,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "17595:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1137,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "17604:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1130,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "17554:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1129,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1312,
																			"src": "17538:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17538:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1312",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17558:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1311,
																	"src": "17538:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17538:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1172,
															"nodeType": "TryStatement",
															"src": "17534:629:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "16840:536:4",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "17391:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "17414:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17436:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "17428:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17448:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "17440:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17470:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "17457:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17457:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17413:62:4"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17484:0:4"
									},
									"scope": 1177,
									"src": "17382:799:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1178,
							"src": "794:17390:4",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "110:18076:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1779
						],
						"IERC721": [
							1294
						]
					},
					"id": 1295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1295,
							"sourceUnit": 1780,
							"src": "139:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1180,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1779,
										"src": "147:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1183,
										"name": "IERC165",
										"nameLocations": [
											"297:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1779,
										"src": "297:7:5"
									},
									"id": 1184,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1182,
								"nodeType": "StructuredDocumentation",
								"src": "205:69:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1294,
							"linearizedBaseContracts": [
								1294,
								1779
							],
							"name": "IERC721",
							"nameLocation": "286:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "312:90:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1193,
									"name": "Transfer",
									"nameLocation": "414:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "439:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "423:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "461:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "445:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "481:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "465:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:67:5"
									},
									"src": "408:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "498:96:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1202,
									"name": "Approval",
									"nameLocation": "606:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "631:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "615:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "654:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "638:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "680:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "664:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:74:5"
									},
									"src": "600:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "697:119:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1211,
									"name": "ApprovalForAll",
									"nameLocation": "828:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "859:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "843:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "882:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "866:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "897:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "892:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "892:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "842:64:5"
									},
									"src": "822:85:5"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "915:78:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1026:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1018:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:15:5"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1064:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1056:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:17:5"
									},
									"scope": 1294,
									"src": "999:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "1081:137:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1233:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1249:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1241:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:17:5"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1289:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1281:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:15:5"
									},
									"scope": 1294,
									"src": "1224:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "1304:578:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1897:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1922:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1914:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1936:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1928:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1948:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1940:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1972:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1957:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1957:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:64:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:0:5"
									},
									"scope": 1294,
									"src": "1888:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1995:720:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2730:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2755:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2747:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2769:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2761:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2781:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2773:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:43:5"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2798:0:5"
									},
									"scope": 1294,
									"src": "2721:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "2807:747:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3569:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3590:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3582:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3596:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3616:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3608:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:43:5"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3633:0:5"
									},
									"scope": 1294,
									"src": "3560:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "3642:464:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4121:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4137:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4129:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4149:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4141:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4141:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4128:29:5"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4166:0:5"
									},
									"scope": 1294,
									"src": "4112:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "4175:324:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4514:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4540:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4532:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4532:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4555:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4550:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4550:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4531:33:5"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4573:0:5"
									},
									"scope": 1294,
									"src": "4505:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "4582:145:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4742:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4762:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4754:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4754:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:17:5"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4802:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4794:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4793:18:5"
									},
									"scope": 1294,
									"src": "4733:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "4820:142:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4977:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5017:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "5009:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5009:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:33:5"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "5050:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5050:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:6:5"
									},
									"scope": 1294,
									"src": "4968:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1295,
							"src": "276:4783:5",
							"usedErrors": [],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "111:4950:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1312
						]
					},
					"id": 1313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "119:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1297,
								"nodeType": "StructuredDocumentation",
								"src": "147:156:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1312,
							"linearizedBaseContracts": [
								1312
							],
							"name": "IERC721Receiver",
							"nameLocation": "315:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "338:509:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "862:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "897:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "889:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "924:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "916:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "947:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "939:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "980:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "965:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "965:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:113:6"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1010:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1010:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:8:6"
									},
									"scope": 1312,
									"src": "853:165:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1313,
							"src": "305:716:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "119:904:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1177
						],
						"ERC721URIStorage": [
							1438
						],
						"IERC165": [
							1779
						],
						"IERC4906": [
							27
						],
						"Strings": [
							1743
						]
					},
					"id": 1439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "131:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 1178,
							"src": "159:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1315,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1177,
										"src": "167:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 1744,
							"src": "198:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1317,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1743,
										"src": "206:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 28,
							"src": "251:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1319,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 27,
										"src": "259:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 4,
							"src": "311:56:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1321,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1779,
										"src": "319:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1324,
										"name": "IERC4906",
										"nameLocations": [
											"482:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 27,
										"src": "482:8:7"
									},
									"id": 1325,
									"nodeType": "InheritanceSpecifier",
									"src": "482:8:7"
								},
								{
									"baseName": {
										"id": 1326,
										"name": "ERC721",
										"nameLocations": [
											"492:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1177,
										"src": "492:6:7"
									},
									"id": 1327,
									"nodeType": "InheritanceSpecifier",
									"src": "492:6:7"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1323,
								"nodeType": "StructuredDocumentation",
								"src": "371:71:7",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1438,
							"linearizedBaseContracts": [
								1438,
								1177,
								121,
								1466,
								27,
								1294,
								1767,
								1779,
								1488
							],
							"name": "ERC721URIStorage",
							"nameLocation": "462:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1330,
									"libraryName": {
										"id": 1328,
										"name": "Strings",
										"nameLocations": [
											"512:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1743,
										"src": "512:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "506:26:7",
									"typeName": {
										"id": 1329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "524:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1336,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "748:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1438,
									"src": "724:65:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1331,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "724:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1334,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "778:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1333,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "771:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1332,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "771:6:7",
												"typeDescriptions": {}
											}
										},
										"id": 1335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "771:18:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1340,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "881:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1438,
									"src": "838:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1339,
										"keyName": "tokenId",
										"keyNameLocation": "854:7:7",
										"keyType": {
											"id": 1337,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "846:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "838:34:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1338,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "865:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										269,
										1778
									],
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "1071:101:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1351,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "1089:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1352,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "1104:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1089:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "1152:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1354,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1128:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1438_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1134:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 269,
															"src": "1128:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1128:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1089:75:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1359,
												"nodeType": "Return",
												"src": "1082:82:7"
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "900:57:7",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "972:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1347,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1345,
												"name": "ERC721",
												"nameLocations": [
													"1039:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "1039:6:7"
											},
											{
												"id": 1346,
												"name": "IERC165",
												"nameLocations": [
													"1047:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1779,
												"src": "1047:7:7"
											}
										],
										"src": "1030:25:7"
									},
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "997:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "990:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1342,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "990:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:20:7"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1065:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1065:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1064:6:7"
									},
									"scope": 1438,
									"src": "963:209:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										364
									],
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "1331:521:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1371,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "1356:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1370,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1342:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1342:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "1342:22:7"
											},
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1391:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "1377:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1374,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1377:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"baseExpression": {
														"id": 1376,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "1403:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1378,
													"indexExpression": {
														"id": 1377,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "1414:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1403:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:45:7"
											},
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1447:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "1433:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1380,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1433:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1382,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "1454:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1454:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1433:31:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1387,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "1546:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1540:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1385,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1540:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1540:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1552:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1540:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1562:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1540:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1395,
												"nodeType": "IfStatement",
												"src": "1536:72:7",
												"trueBody": {
													"id": 1394,
													"nodeType": "Block",
													"src": "1565:43:7",
													"statements": [
														{
															"expression": {
																"id": 1392,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "1587:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1369,
															"id": 1393,
															"nodeType": "Return",
															"src": "1580:16:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1398,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "1715:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1709:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1396,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1709:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1709:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1709:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1709:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "1705:97:7",
												"trueBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "1738:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1406,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "1774:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1407,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "1780:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1760:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1403,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1760:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1767:6:7",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1760:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1760:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1369,
															"id": 1409,
															"nodeType": "Return",
															"src": "1753:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1414,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "1836:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1412,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1821:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1438_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1827:8:7",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "1821:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1821:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1416,
												"nodeType": "Return",
												"src": "1814:30:7"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "1180:57:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1252:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1298:8:7"
									},
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1269:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1261:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:17:7"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1316:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1316:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1315:15:7"
									},
									"scope": 1438,
									"src": "1243:609:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "2059:89:7",
										"statements": [
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1426,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2070:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1428,
														"indexExpression": {
															"id": 1427,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "2081:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2070:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1429,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "2092:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2070:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "2070:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1433,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "2132:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1432,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2117:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2117:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "EmitStatement",
												"src": "2112:28:7"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "1860:112:7",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1987:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2008:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "2000:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "2031:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "2017:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2017:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:42:7"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2059:0:7"
									},
									"scope": 1438,
									"src": "1978:170:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1439,
							"src": "444:1707:7",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "131:2022:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1294
						],
						"IERC721Metadata": [
							1466
						]
					},
					"id": 1467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1440,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "130:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 1295,
							"src": "158:39:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1441,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "166:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1444,
										"name": "IERC721",
										"nameLocations": [
											"368:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "368:7:8"
									},
									"id": 1445,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:8"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1443,
								"nodeType": "StructuredDocumentation",
								"src": "201:136:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1466,
							"linearizedBaseContracts": [
								1466,
								1294,
								1779
							],
							"name": "IERC721Metadata",
							"nameLocation": "349:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "383:60:8",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "458:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:8"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "488:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "488:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:15:8"
									},
									"scope": 1466,
									"src": "449:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "511:62:8",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "588:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:8"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "620:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "620:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:15:8"
									},
									"scope": 1466,
									"src": "579:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "643:92:8",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "750:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "767:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "759:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:17:8"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "799:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:15:8"
									},
									"scope": 1466,
									"src": "741:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "339:478:8",
							"usedErrors": [],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "130:689:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1488
						]
					},
					"id": 1489,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1469,
								"nodeType": "StructuredDocumentation",
								"src": "132:505:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1488,
							"linearizedBaseContracts": [
								1488
							],
							"name": "Context",
							"nameLocation": "657:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "734:36:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1474,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "752:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "756:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "752:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1473,
												"id": 1476,
												"nodeType": "Return",
												"src": "745:17:9"
											}
										]
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "681:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:9"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "725:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:9"
									},
									"scope": 1488,
									"src": "672:98:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "845:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1483,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "863:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "867:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "863:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1485,
												"nodeType": "Return",
												"src": "856:15:9"
											}
										]
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "787:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:9"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "829:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:9"
									},
									"scope": 1488,
									"src": "778:101:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1489,
							"src": "639:243:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:780:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2833
						],
						"SignedMath": [
							2938
						],
						"Strings": [
							1743
						]
					},
					"id": 1744,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1490,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1492,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1744,
							"sourceUnit": 2834,
							"src": "132:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1491,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2833,
										"src": "140:4:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1744,
							"sourceUnit": 2939,
							"src": "171:49:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1493,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2938,
										"src": "179:10:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1495,
								"nodeType": "StructuredDocumentation",
								"src": "224:36:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1743,
							"linearizedBaseContracts": [
								1743
							],
							"name": "Strings",
							"nameLocation": "270:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1498,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "310:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1743,
									"src": "285:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1496,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1497,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "323:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1501,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "371:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1743,
									"src": "348:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1499,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "348:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1500,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "388:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "399:83:10",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1508,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "494:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "531:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "523:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "546:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "538:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:31:10"
									},
									"src": "488:66:10"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "731:647:10",
										"statements": [
											{
												"id": 1554,
												"nodeType": "UncheckedBlock",
												"src": "742:629:10",
												"statements": [
													{
														"assignments": [
															1517
														],
														"declarations": [
															{
																"constant": false,
																"id": 1517,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "775:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1554,
																"src": "767:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1516,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "767:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1524,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1520,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1511,
																		"src": "795:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1518,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2833,
																		"src": "784:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2833_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "789:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2653,
																	"src": "784:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "784:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "804:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "784:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "767:38:10"
													},
													{
														"assignments": [
															1526
														],
														"declarations": [
															{
																"constant": false,
																"id": 1526,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "834:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1554,
																"src": "820:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1525,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "820:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1531,
														"initialValue": {
															"arguments": [
																{
																	"id": 1529,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "854:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "843:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1527,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "847:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "843:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "820:41:10"
													},
													{
														"assignments": [
															1533
														],
														"declarations": [
															{
																"constant": false,
																"id": 1533,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "884:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1554,
																"src": "876:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1532,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "876:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1534,
														"nodeType": "VariableDeclarationStatement",
														"src": "876:11:10"
													},
													{
														"AST": {
															"nativeSrc": "959:69:10",
															"nodeType": "YulBlock",
															"src": "959:69:10",
															"statements": [
																{
																	"nativeSrc": "978:35:10",
																	"nodeType": "YulAssignment",
																	"src": "978:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "989:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "989:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1001:2:10",
																						"nodeType": "YulLiteral",
																						"src": "1001:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1005:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1005:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "997:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "997:3:10"
																				},
																				"nativeSrc": "997:15:10",
																				"nodeType": "YulFunctionCall",
																				"src": "997:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "985:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:10"
																		},
																		"nativeSrc": "985:28:10",
																		"nodeType": "YulFunctionCall",
																		"src": "985:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "978:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1526,
																"isOffset": false,
																"isSlot": false,
																"src": "989:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1517,
																"isOffset": false,
																"isSlot": false,
																"src": "1005:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "978:3:10",
																"valueSize": 1
															}
														],
														"id": 1535,
														"nodeType": "InlineAssembly",
														"src": "950:78:10"
													},
													{
														"body": {
															"id": 1550,
															"nodeType": "Block",
															"src": "1055:277:10",
															"statements": [
																{
																	"expression": {
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1074:5:10",
																		"subExpression": {
																			"id": 1537,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "1074:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1539,
																	"nodeType": "ExpressionStatement",
																	"src": "1074:5:10"
																},
																{
																	"AST": {
																		"nativeSrc": "1159:88:10",
																		"nodeType": "YulBlock",
																		"src": "1159:88:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1190:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1190:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1204:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "1204:5:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1211:2:10",
																											"nodeType": "YulLiteral",
																											"src": "1211:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1200:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1200:3:10"
																									},
																									"nativeSrc": "1200:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "1200:14:10"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1216:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "1216:10:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1195:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "1195:4:10"
																							},
																							"nativeSrc": "1195:32:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1195:32:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1182:7:10",
																						"nodeType": "YulIdentifier",
																						"src": "1182:7:10"
																					},
																					"nativeSrc": "1182:46:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1182:46:10"
																				},
																				"nativeSrc": "1182:46:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "1182:46:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1498,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1216:10:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1533,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1190:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1511,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1204:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 1540,
																	"nodeType": "InlineAssembly",
																	"src": "1150:97:10"
																},
																{
																	"expression": {
																		"id": 1543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1541,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1511,
																			"src": "1265:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1274:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1265:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1544,
																	"nodeType": "ExpressionStatement",
																	"src": "1265:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1545,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1511,
																			"src": "1299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1308:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1299:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1549,
																	"nodeType": "IfStatement",
																	"src": "1295:21:10",
																	"trueBody": {
																		"id": 1548,
																		"nodeType": "Break",
																		"src": "1311:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1049:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1551,
														"nodeType": "WhileStatement",
														"src": "1042:290:10"
													},
													{
														"expression": {
															"id": 1552,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "1353:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1515,
														"id": 1553,
														"nodeType": "Return",
														"src": "1346:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "562:92:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "669:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "686:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "678:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:15:10"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "716:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1513,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "716:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:15:10"
									},
									"scope": 1743,
									"src": "660:718:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "1559:94:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1567,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "1591:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1599:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1591:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1609:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1591:20:10",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1603:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1576,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1559,
																			"src": "1637:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1574,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2938,
																			"src": "1622:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2938_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1633:3:10",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2937,
																		"src": "1622:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1622:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1573,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1556,
																"src": "1613:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1577:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1564,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1577:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1584:6:10",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1577:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1580,
												"nodeType": "Return",
												"src": "1570:75:10"
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "1386:91:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1492:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1514:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "1507:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1558,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:14:10"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "1544:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:15:10"
									},
									"scope": 1743,
									"src": "1483:170:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "1837:104:10",
										"statements": [
											{
												"id": 1600,
												"nodeType": "UncheckedBlock",
												"src": "1848:86:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "1892:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1594,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1585,
																				"src": "1911:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1592,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2833,
																				"src": "1899:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2833_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1904:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2775,
																			"src": "1899:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1899:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1920:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1899:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1590,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1602,
																	1685,
																	1705
																],
																"referencedDeclaration": 1685,
																"src": "1880:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1880:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1589,
														"id": 1599,
														"nodeType": "Return",
														"src": "1873:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "1661:96:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1772:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1792:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "1784:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:15:10"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "1822:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1587,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1822:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:15:10"
									},
									"scope": 1743,
									"src": "1763:178:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "2159:448:10",
										"statements": [
											{
												"assignments": [
													1613
												],
												"declarations": [
													{
														"constant": false,
														"id": 1613,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2178:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1684,
														"src": "2170:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2170:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1615,
												"initialValue": {
													"id": 1614,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1605,
													"src": "2191:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2170:26:10"
											},
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2220:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1684,
														"src": "2207:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2207:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1626,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2239:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1621,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1607,
																	"src": "2243:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2239:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2239:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2229:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1618,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2233:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2229:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2207:47:10"
											},
											{
												"expression": {
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1627,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "2265:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1629,
														"indexExpression": {
															"hexValue": "30",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2272:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2265:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2277:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2265:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "2265:15:10"
											},
											{
												"expression": {
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1633,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "2291:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1635,
														"indexExpression": {
															"hexValue": "31",
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2291:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2303:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2291:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1638,
												"nodeType": "ExpressionStatement",
												"src": "2291:15:10"
											},
											{
												"body": {
													"id": 1667,
													"nodeType": "Block",
													"src": "2362:98:10",
													"statements": [
														{
															"expression": {
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1653,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1617,
																		"src": "2377:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1655,
																	"indexExpression": {
																		"id": 1654,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "2384:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2377:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1656,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1498,
																		"src": "2389:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1660,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1657,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1613,
																			"src": "2400:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2413:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2400:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2389:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2377:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1662,
															"nodeType": "ExpressionStatement",
															"src": "2377:40:10"
														},
														{
															"expression": {
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1663,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "2432:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2447:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2432:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1666,
															"nodeType": "ExpressionStatement",
															"src": "2432:16:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1647,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "2350:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2354:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2350:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1668,
												"initializationExpression": {
													"assignments": [
														1640
													],
													"declarations": [
														{
															"constant": false,
															"id": 1640,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2330:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1668,
															"src": "2322:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1639,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2322:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1646,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2334:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1642,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1607,
																"src": "2338:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2334:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2347:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2334:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2322:26:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2357:3:10",
														"subExpression": {
															"id": 1650,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "2359:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1652,
													"nodeType": "ExpressionStatement",
													"src": "2357:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2317:143:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1669,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "2474:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2488:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2474:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1678,
												"nodeType": "IfStatement",
												"src": "2470:98:10",
												"trueBody": {
													"id": 1677,
													"nodeType": "Block",
													"src": "2491:77:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1673,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "2542:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1674,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "2549:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1672,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "2513:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2513:43:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1676,
															"nodeType": "RevertStatement",
															"src": "2506:50:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1681,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "2592:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2585:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1679,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2585:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1611,
												"id": 1683,
												"nodeType": "Return",
												"src": "2578:21:10"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "1949:114:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2078:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2098:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "2090:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2113:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "2105:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:31:10"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "2144:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1609,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:10"
									},
									"scope": 1743,
									"src": "2069:538:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "2845:77:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1698,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1688,
																			"src": "2891:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2883:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1696,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2883:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2883:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2875:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1694,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2875:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2875:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1701,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "2899:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1693,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1602,
															1685,
															1705
														],
														"referencedDeclaration": 1685,
														"src": "2863:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2863:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1692,
												"id": 1703,
												"nodeType": "Return",
												"src": "2856:58:10"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "2615:151:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2781:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2801:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "2793:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2793:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2792:14:10"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "2830:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1690,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2830:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:15:10"
									},
									"scope": 1743,
									"src": "2772:150:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "3082:106:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1717,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "3106:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3100:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1715,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3100:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3100:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3109:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3100:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1722,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1710,
																		"src": "3125:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3119:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1720,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3119:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3119:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3128:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3119:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3100:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1729,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "3154:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3148:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1727,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3148:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3148:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1726,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3138:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3138:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1735,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1710,
																			"src": "3177:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3171:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1733,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3171:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3171:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1732,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3161:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3161:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3138:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3100:80:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1714,
												"id": 1740,
												"nodeType": "Return",
												"src": "3093:87:10"
											}
										]
									},
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "2930:68:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3013:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3033:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "3019:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1707,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3019:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3050:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "3036:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1709,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3036:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:34:10"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "3076:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:6:10"
									},
									"scope": 1743,
									"src": "3004:184:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1744,
							"src": "262:2929:10",
							"usedErrors": [
								1508
							],
							"usedEvents": []
						}
					],
					"src": "104:3089:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1767
						],
						"IERC165": [
							1779
						]
					},
					"id": 1768,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1745,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "117:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1747,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1768,
							"sourceUnit": 1780,
							"src": "145:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1746,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1779,
										"src": "153:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1749,
										"name": "IERC165",
										"nameLocations": [
											"706:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1779,
										"src": "706:7:11"
									},
									"id": 1750,
									"nodeType": "InheritanceSpecifier",
									"src": "706:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1748,
								"nodeType": "StructuredDocumentation",
								"src": "187:489:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1767,
							"linearizedBaseContracts": [
								1767,
								1779
							],
							"name": "ERC165",
							"nameLocation": "696:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1778
									],
									"body": {
										"id": 1765,
										"nodeType": "Block",
										"src": "867:66:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1758,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "885:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1760,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "905:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1779_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1779_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1759,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "900:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "900:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1779",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "914:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "900:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "885:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1757,
												"id": 1764,
												"nodeType": "Return",
												"src": "878:47:11"
											}
										]
									},
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "721:58:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "812:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:11"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1767,
									"src": "785:148:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1768,
							"src": "678:258:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "117:821:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1779
						]
					},
					"id": 1780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1769,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1770,
								"nodeType": "StructuredDocumentation",
								"src": "146:287:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1779,
							"linearizedBaseContracts": [
								1779
							],
							"name": "IERC165",
							"nameLocation": "445:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "460:347:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "822:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "847:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "840:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1772,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "840:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:20:12"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "883:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "883:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:6:12"
									},
									"scope": 1779,
									"src": "813:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1780,
							"src": "435:457:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:776:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2833
						]
					},
					"id": 2834,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1782,
								"nodeType": "StructuredDocumentation",
								"src": "134:75:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2833,
							"linearizedBaseContracts": [
								2833
							],
							"name": "Math",
							"nameLocation": "219:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "231:52:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1785,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "295:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:2:13"
									},
									"src": "289:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1790,
									"members": [
										{
											"id": 1786,
											"name": "Floor",
											"nameLocation": "351:5:13",
											"nodeType": "EnumValue",
											"src": "351:5:13"
										},
										{
											"id": 1787,
											"name": "Ceil",
											"nameLocation": "395:4:13",
											"nodeType": "EnumValue",
											"src": "395:4:13"
										},
										{
											"id": 1788,
											"name": "Trunc",
											"nameLocation": "438:5:13",
											"nodeType": "EnumValue",
											"src": "438:5:13"
										},
										{
											"id": 1789,
											"name": "Expand",
											"nameLocation": "469:6:13",
											"nodeType": "EnumValue",
											"src": "469:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "331:8:13",
									"nodeType": "EnumDefinition",
									"src": "326:174:13"
								},
								{
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "685:146:13",
										"statements": [
											{
												"id": 1820,
												"nodeType": "UncheckedBlock",
												"src": "696:128:13",
												"statements": [
													{
														"assignments": [
															1803
														],
														"declarations": [
															{
																"constant": false,
																"id": 1803,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "729:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1820,
																"src": "721:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1802,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "721:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1807,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "733:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "737:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "733:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "721:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1808,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "757:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1809,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "761:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "757:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1815,
														"nodeType": "IfStatement",
														"src": "753:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "772:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "779:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1813,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "771:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1801,
															"id": 1814,
															"nodeType": "Return",
															"src": "764:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "804:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1817,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "810:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1818,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "803:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1801,
														"id": 1819,
														"nodeType": "Return",
														"src": "796:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "508:95:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "618:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "633:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "625:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "644:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "636:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:22:13"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "670:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "670:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "676:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:15:13"
									},
									"scope": 2833,
									"src": "609:222:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "1019:118:13",
										"statements": [
											{
												"id": 1848,
												"nodeType": "UncheckedBlock",
												"src": "1030:100:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1834,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "1059:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1835,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "1063:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1059:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1841,
														"nodeType": "IfStatement",
														"src": "1055:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1074:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1839,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1073:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1833,
															"id": 1840,
															"nodeType": "Return",
															"src": "1066:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1106:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1843,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "1112:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1844,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1827,
																		"src": "1116:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1112:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1846,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1105:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1833,
														"id": 1847,
														"nodeType": "Return",
														"src": "1098:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "839:98:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "952:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "967:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "959:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "978:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "970:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:22:13"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "1004:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1829,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1004:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "1010:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:15:13"
									},
									"scope": 2833,
									"src": "943:194:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "1328:427:13",
										"statements": [
											{
												"id": 1890,
												"nodeType": "UncheckedBlock",
												"src": "1339:409:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1862,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1606:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1601:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1869,
														"nodeType": "IfStatement",
														"src": "1597:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1617:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1623:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1867,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1616:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1861,
															"id": 1868,
															"nodeType": "Return",
															"src": "1609:16:13"
														}
													},
													{
														"assignments": [
															1871
														],
														"declarations": [
															{
																"constant": false,
																"id": 1871,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1648:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1890,
																"src": "1640:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1870,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1640:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1875,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1872,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "1652:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1873,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "1656:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1652:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1640:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1876,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1871,
																	"src": "1676:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1877,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "1680:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1676:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1879,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "1685:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1676:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1885,
														"nodeType": "IfStatement",
														"src": "1672:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1703:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1695:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1861,
															"id": 1884,
															"nodeType": "Return",
															"src": "1688:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1728:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1887,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1871,
																	"src": "1734:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1888,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1727:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1861,
														"id": 1889,
														"nodeType": "Return",
														"src": "1720:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "1145:101:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1261:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1276:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "1268:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1287:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "1279:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:22:13"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "1313:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1313:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "1319:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1312:15:13"
									},
									"scope": 2833,
									"src": "1252:503:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1919,
										"nodeType": "Block",
										"src": "1947:119:13",
										"statements": [
											{
												"id": 1918,
												"nodeType": "UncheckedBlock",
												"src": "1958:101:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1904,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "1987:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1992:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1987:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1911,
														"nodeType": "IfStatement",
														"src": "1983:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2003:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2010:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1909,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2002:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1903,
															"id": 1910,
															"nodeType": "Return",
															"src": "1995:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2035:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1913,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1895,
																		"src": "2041:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1914,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "2045:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2041:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1916,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2034:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1903,
														"id": 1917,
														"nodeType": "Return",
														"src": "2027:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1893,
										"nodeType": "StructuredDocumentation",
										"src": "1763:102:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1880:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1895:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "1887:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1906:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "1898:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:22:13"
									},
									"returnParameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "1932:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1899,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1932:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "1938:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:15:13"
									},
									"scope": 2833,
									"src": "1871:195:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "2268:119:13",
										"statements": [
											{
												"id": 1946,
												"nodeType": "UncheckedBlock",
												"src": "2279:101:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1932,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "2308:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2313:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2308:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1939,
														"nodeType": "IfStatement",
														"src": "2304:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2324:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2331:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1937,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2323:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1931,
															"id": 1938,
															"nodeType": "Return",
															"src": "2316:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2356:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1941,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "2362:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1942,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "2366:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2362:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1944,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2355:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1931,
														"id": 1945,
														"nodeType": "Return",
														"src": "2348:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "2074:112:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2201:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2216:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2208:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2227:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2219:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:22:13"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2253:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2253:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2259:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:15:13"
									},
									"scope": 2833,
									"src": "2192:195:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "2529:39:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1958,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "2547:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1959,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "2551:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2547:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1962,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1953,
														"src": "2559:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2547:13:13",
													"trueExpression": {
														"id": 1961,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "2555:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1957,
												"id": 1964,
												"nodeType": "Return",
												"src": "2540:20:13"
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "2395:61:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2471:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2483:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "2475:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2494:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "2486:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:22:13"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "2520:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2519:9:13"
									},
									"scope": 2833,
									"src": "2462:106:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "2711:39:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1976,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "2729:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1977,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "2733:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2729:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1980,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "2741:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2729:13:13",
													"trueExpression": {
														"id": 1979,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "2737:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1975,
												"id": 1982,
												"nodeType": "Return",
												"src": "2722:20:13"
											}
										]
									},
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "2576:62:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2653:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2665:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2657:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2676:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2668:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:22:13"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2702:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:9:13"
									},
									"scope": 2833,
									"src": "2644:106:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "2940:85:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1994,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "2997:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1995,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1989,
																	"src": "3001:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2997:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1997,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2996:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1998,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1987,
																		"src": "3007:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1999,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1989,
																		"src": "3011:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3007:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2001,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3006:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3016:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3006:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2996:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1993,
												"id": 2005,
												"nodeType": "Return",
												"src": "2989:28:13"
											}
										]
									},
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "2758:105:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2878:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2894:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "2886:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2905:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "2897:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2897:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:22:13"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "2931:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:9:13"
									},
									"scope": 2833,
									"src": "2869:156:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2040,
										"nodeType": "Block",
										"src": "3325:268:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2017,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2012,
														"src": "3340:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3345:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2025,
												"nodeType": "IfStatement",
												"src": "3336:130:13",
												"trueBody": {
													"id": 2024,
													"nodeType": "Block",
													"src": "3348:118:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2020,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2010,
																	"src": "3449:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2021,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "3453:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3449:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2016,
															"id": 2023,
															"nodeType": "Return",
															"src": "3442:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2026,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "3557:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3562:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3557:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2030,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2010,
																			"src": "3571:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3575:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3571:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2033,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3570:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2034,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "3580:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3570:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3570:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3557:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3566:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2016,
												"id": 2039,
												"nodeType": "Return",
												"src": "3550:35:13"
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "3033:215:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3263:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3279:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "3271:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3271:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3290:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "3282:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3270:22:13"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "3316:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:13"
									},
									"scope": 2833,
									"src": "3254:339:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "4023:4097:13",
										"statements": [
											{
												"id": 2165,
												"nodeType": "UncheckedBlock",
												"src": "4034:4079:13",
												"statements": [
													{
														"assignments": [
															2054
														],
														"declarations": [
															{
																"constant": false,
																"id": 2054,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4367:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2165,
																"src": "4359:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2053,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4359:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2058,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2055,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "4375:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2056,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "4379:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4375:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4359:21:13"
													},
													{
														"assignments": [
															2060
														],
														"declarations": [
															{
																"constant": false,
																"id": 2060,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4448:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2165,
																"src": "4440:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2059,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4440:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2061,
														"nodeType": "VariableDeclarationStatement",
														"src": "4440:13:13"
													},
													{
														"AST": {
															"nativeSrc": "4521:125:13",
															"nodeType": "YulBlock",
															"src": "4521:125:13",
															"statements": [
																{
																	"nativeSrc": "4540:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4557:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4557:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4560:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4560:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4567:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4567:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4563:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4563:3:13"
																				},
																				"nativeSrc": "4563:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4563:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4550:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4550:6:13"
																		},
																		"nativeSrc": "4550:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4550:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4544:2:13",
																			"nodeType": "YulTypedName",
																			"src": "4544:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4588:43:13",
																	"nodeType": "YulAssignment",
																	"src": "4588:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4605:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4605:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4609:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4609:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4601:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4601:3:13"
																				},
																				"nativeSrc": "4601:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4601:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4620:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4620:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4624:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4624:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4617:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4617:2:13"
																				},
																				"nativeSrc": "4617:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4617:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4597:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:13"
																		},
																		"nativeSrc": "4597:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4597:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4588:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4588:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "4609:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "4624:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2060,
																"isOffset": false,
																"isSlot": false,
																"src": "4588:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "4557:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "4560:1:13",
																"valueSize": 1
															}
														],
														"id": 2062,
														"nodeType": "InlineAssembly",
														"src": "4512:134:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2063,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2060,
																"src": "4730:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4739:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4730:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2071,
														"nodeType": "IfStatement",
														"src": "4726:373:13",
														"trueBody": {
															"id": 2070,
															"nodeType": "Block",
															"src": "4742:357:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2066,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2054,
																			"src": "5064:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2067,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2048,
																			"src": "5072:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5064:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2052,
																	"id": 2069,
																	"nodeType": "Return",
																	"src": "5057:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2072,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2048,
																"src": "5208:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2073,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2060,
																"src": "5223:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5208:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2079,
														"nodeType": "IfStatement",
														"src": "5204:90:13",
														"trueBody": {
															"id": 2078,
															"nodeType": "Block",
															"src": "5230:64:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2075,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1785,
																			"src": "5256:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5256:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2077,
																	"nodeType": "RevertStatement",
																	"src": "5249:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2081
														],
														"declarations": [
															{
																"constant": false,
																"id": 2081,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5564:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2165,
																"src": "5556:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2080,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5556:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2082,
														"nodeType": "VariableDeclarationStatement",
														"src": "5556:17:13"
													},
													{
														"AST": {
															"nativeSrc": "5597:298:13",
															"nodeType": "YulBlock",
															"src": "5597:298:13",
															"statements": [
																{
																	"nativeSrc": "5668:38:13",
																	"nodeType": "YulAssignment",
																	"src": "5668:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5688:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5688:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5691:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5691:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5694:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "5694:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5681:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5681:6:13"
																		},
																		"nativeSrc": "5681:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5668:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "5668:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5791:41:13",
																	"nodeType": "YulAssignment",
																	"src": "5791:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5804:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5804:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5814:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5825:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5825:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5811:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5811:2:13"
																				},
																				"nativeSrc": "5811:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5811:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5800:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:13"
																		},
																		"nativeSrc": "5800:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5800:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5791:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5791:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5850:30:13",
																	"nodeType": "YulAssignment",
																	"src": "5850:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5863:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5863:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5870:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5859:3:13"
																		},
																		"nativeSrc": "5859:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5859:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5850:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5850:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2048,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "5825:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "5850:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "5863:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2060,
																"isOffset": false,
																"isSlot": false,
																"src": "5791:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2060,
																"isOffset": false,
																"isSlot": false,
																"src": "5804:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2081,
																"isOffset": false,
																"isSlot": false,
																"src": "5668:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2081,
																"isOffset": false,
																"isSlot": false,
																"src": "5814:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2081,
																"isOffset": false,
																"isSlot": false,
																"src": "5870:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "5688:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:1:13",
																"valueSize": 1
															}
														],
														"id": 2083,
														"nodeType": "InlineAssembly",
														"src": "5588:307:13"
													},
													{
														"assignments": [
															2085
														],
														"declarations": [
															{
																"constant": false,
																"id": 2085,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6112:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2165,
																"src": "6104:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2084,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6104:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2092,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2086,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2048,
																"src": "6119:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6134:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2088,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2048,
																			"src": "6138:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6134:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2090,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6133:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6119:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6104:46:13"
													},
													{
														"AST": {
															"nativeSrc": "6174:371:13",
															"nodeType": "YulBlock",
															"src": "6174:371:13",
															"statements": [
																{
																	"nativeSrc": "6241:37:13",
																	"nodeType": "YulAssignment",
																	"src": "6241:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6260:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6260:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6273:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6273:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6256:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:13"
																		},
																		"nativeSrc": "6256:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6256:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6241:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "6241:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6348:25:13",
																	"nodeType": "YulAssignment",
																	"src": "6348:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6361:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6361:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6368:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6368:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6357:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6357:3:13"
																		},
																		"nativeSrc": "6357:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6357:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6348:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6348:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6491:39:13",
																	"nodeType": "YulAssignment",
																	"src": "6491:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6511:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6511:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6514:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6514:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6507:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6507:3:13"
																						},
																						"nativeSrc": "6507:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6507:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6521:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6521:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6503:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6503:3:13"
																				},
																				"nativeSrc": "6503:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6503:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6528:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6528:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6499:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6499:3:13"
																		},
																		"nativeSrc": "6499:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6491:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6491:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2048,
																"isOffset": false,
																"isSlot": false,
																"src": "6241:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2048,
																"isOffset": false,
																"isSlot": false,
																"src": "6260:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "6348:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "6361:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2085,
																"isOffset": false,
																"isSlot": false,
																"src": "6273:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2085,
																"isOffset": false,
																"isSlot": false,
																"src": "6368:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2085,
																"isOffset": false,
																"isSlot": false,
																"src": "6491:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2085,
																"isOffset": false,
																"isSlot": false,
																"src": "6514:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2085,
																"isOffset": false,
																"isSlot": false,
																"src": "6521:4:13",
																"valueSize": 1
															}
														],
														"id": 2093,
														"nodeType": "InlineAssembly",
														"src": "6165:380:13"
													},
													{
														"expression": {
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2094,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2054,
																"src": "6614:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2095,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2060,
																	"src": "6623:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2096,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "6631:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6623:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6614:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2099,
														"nodeType": "ExpressionStatement",
														"src": "6614:21:13"
													},
													{
														"assignments": [
															2101
														],
														"declarations": [
															{
																"constant": false,
																"id": 2101,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6966:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2165,
																"src": "6958:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2100,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6958:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2108,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6977:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2103,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2048,
																			"src": "6981:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6977:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2105,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6976:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6996:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6976:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6958:39:13"
													},
													{
														"expression": {
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2109,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "7218:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7229:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2111,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2048,
																		"src": "7233:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2112,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2101,
																		"src": "7247:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7233:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7229:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7218:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2116,
														"nodeType": "ExpressionStatement",
														"src": "7218:36:13"
													},
													{
														"expression": {
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2117,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "7288:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7299:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2119,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2048,
																		"src": "7303:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2120,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2101,
																		"src": "7317:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7303:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7299:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7288:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2124,
														"nodeType": "ExpressionStatement",
														"src": "7288:36:13"
													},
													{
														"expression": {
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2125,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "7359:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7370:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2127,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2048,
																		"src": "7374:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2128,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2101,
																		"src": "7388:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7374:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7370:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7359:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2132,
														"nodeType": "ExpressionStatement",
														"src": "7359:36:13"
													},
													{
														"expression": {
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2133,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "7430:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7441:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2135,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2048,
																		"src": "7445:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2136,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2101,
																		"src": "7459:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7445:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7441:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7430:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2140,
														"nodeType": "ExpressionStatement",
														"src": "7430:36:13"
													},
													{
														"expression": {
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2141,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "7501:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7512:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2143,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2048,
																		"src": "7516:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2144,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2101,
																		"src": "7530:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7516:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7512:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7501:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2148,
														"nodeType": "ExpressionStatement",
														"src": "7501:36:13"
													},
													{
														"expression": {
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2149,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "7573:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7584:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2151,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2048,
																		"src": "7588:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2152,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2101,
																		"src": "7602:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7588:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7584:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7573:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2156,
														"nodeType": "ExpressionStatement",
														"src": "7573:36:13"
													},
													{
														"expression": {
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2157,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2051,
																"src": "8049:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2158,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2054,
																	"src": "8058:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2159,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "8066:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8058:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8049:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2162,
														"nodeType": "ExpressionStatement",
														"src": "8049:24:13"
													},
													{
														"expression": {
															"id": 2163,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "8095:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2052,
														"id": 2164,
														"nodeType": "Return",
														"src": "8088:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "3601:318:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3934:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3949:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "3941:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3960:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "3952:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3971:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "3963:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:43:13"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4015:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "4007:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:16:13"
									},
									"scope": 2833,
									"src": "3925:4195:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2209,
										"nodeType": "Block",
										"src": "8367:198:13",
										"statements": [
											{
												"assignments": [
													2183
												],
												"declarations": [
													{
														"constant": false,
														"id": 2183,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2209,
														"src": "8378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2189,
												"initialValue": {
													"arguments": [
														{
															"id": 2185,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "8402:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2186,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "8405:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2187,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "8408:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2184,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2167,
															2210
														],
														"referencedDeclaration": 2167,
														"src": "8395:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8378:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2191,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "8452:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1790",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1790",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2190,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2832,
															"src": "8435:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1790_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8435:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2194,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "8472:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2195,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2172,
																	"src": "8475:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2196,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "8478:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2193,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8465:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8465:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8493:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8465:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8435:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2206,
												"nodeType": "IfStatement",
												"src": "8431:103:13",
												"trueBody": {
													"id": 2205,
													"nodeType": "Block",
													"src": "8496:38:13",
													"statements": [
														{
															"expression": {
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2201,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2183,
																	"src": "8511:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8521:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8511:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2204,
															"nodeType": "ExpressionStatement",
															"src": "8511:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2207,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2183,
													"src": "8551:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2181,
												"id": 2208,
												"nodeType": "Return",
												"src": "8544:13:13"
											}
										]
									},
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "8128:123:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8266:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8281:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "8273:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8273:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8292:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "8284:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8284:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8303:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "8295:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8295:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8325:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "8316:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1790",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2176,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2175,
														"name": "Rounding",
														"nameLocations": [
															"8316:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1790,
														"src": "8316:8:13"
													},
													"referencedDeclaration": 1790,
													"src": "8316:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1790",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8272:62:13"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "8358:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8357:9:13"
									},
									"scope": 2833,
									"src": "8257:308:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "8864:1616:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2218,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "8879:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8884:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8879:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2224,
												"nodeType": "IfStatement",
												"src": "8875:47:13",
												"trueBody": {
													"id": 2223,
													"nodeType": "Block",
													"src": "8887:35:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8909:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2217,
															"id": 2222,
															"nodeType": "Return",
															"src": "8902:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2226
												],
												"declarations": [
													{
														"constant": false,
														"id": 2226,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9621:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2321,
														"src": "9613:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9613:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2235,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9630:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2229,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "9641:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2228,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2489,
																			2524
																		],
																		"referencedDeclaration": 2489,
																		"src": "9636:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9636:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9647:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9636:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2233,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9635:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9630:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9613:36:13"
											},
											{
												"id": 2320,
												"nodeType": "UncheckedBlock",
												"src": "10056:417:13",
												"statements": [
													{
														"expression": {
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2236,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "10081:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2237,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2226,
																				"src": "10091:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2238,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2213,
																					"src": "10100:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2239,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2226,
																					"src": "10104:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10100:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10091:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2242,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10090:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10115:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10090:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10081:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2246,
														"nodeType": "ExpressionStatement",
														"src": "10081:35:13"
													},
													{
														"expression": {
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2247,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "10131:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2248,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2226,
																				"src": "10141:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2249,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2213,
																					"src": "10150:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2250,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2226,
																					"src": "10154:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10150:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10141:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2253,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10140:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10165:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10140:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10131:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2257,
														"nodeType": "ExpressionStatement",
														"src": "10131:35:13"
													},
													{
														"expression": {
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2258,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "10181:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2259,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2226,
																				"src": "10191:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2260,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2213,
																					"src": "10200:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2261,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2226,
																					"src": "10204:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10200:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10191:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2264,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10190:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10215:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10190:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10181:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2268,
														"nodeType": "ExpressionStatement",
														"src": "10181:35:13"
													},
													{
														"expression": {
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2269,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "10231:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2270,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2226,
																				"src": "10241:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2271,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2213,
																					"src": "10250:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2272,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2226,
																					"src": "10254:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10250:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10241:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2275,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10240:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10265:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10240:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10231:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2279,
														"nodeType": "ExpressionStatement",
														"src": "10231:35:13"
													},
													{
														"expression": {
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2280,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "10281:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2281,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2226,
																				"src": "10291:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2282,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2213,
																					"src": "10300:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2283,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2226,
																					"src": "10304:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10300:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10291:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2286,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10290:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10290:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10281:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2290,
														"nodeType": "ExpressionStatement",
														"src": "10281:35:13"
													},
													{
														"expression": {
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2291,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "10331:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2292,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2226,
																				"src": "10341:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2293,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2213,
																					"src": "10350:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2294,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2226,
																					"src": "10354:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10350:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10341:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2297,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10340:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10340:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10331:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2301,
														"nodeType": "ExpressionStatement",
														"src": "10331:35:13"
													},
													{
														"expression": {
															"id": 2311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2302,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "10381:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2303,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2226,
																				"src": "10391:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2306,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2304,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2213,
																					"src": "10400:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2305,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2226,
																					"src": "10404:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10400:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10391:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2308,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10390:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10415:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10390:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10381:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2312,
														"nodeType": "ExpressionStatement",
														"src": "10381:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2314,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "10442:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2315,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2213,
																		"src": "10450:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2316,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2226,
																		"src": "10454:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10450:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2313,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1984,
																"src": "10438:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10438:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2217,
														"id": 2319,
														"nodeType": "Return",
														"src": "10431:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "8573:228:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8816:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8829:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "8821:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8821:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8820:11:13"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "8855:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:9:13"
									},
									"scope": 2833,
									"src": "8807:1673:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "10661:169:13",
										"statements": [
											{
												"id": 2355,
												"nodeType": "UncheckedBlock",
												"src": "10672:151:13",
												"statements": [
													{
														"assignments": [
															2334
														],
														"declarations": [
															{
																"constant": false,
																"id": 2334,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10705:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2355,
																"src": "10697:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2333,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10697:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2338,
														"initialValue": {
															"arguments": [
																{
																	"id": 2336,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2325,
																	"src": "10719:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2335,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2322,
																	2357
																],
																"referencedDeclaration": 2322,
																"src": "10714:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10714:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10697:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2339,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2334,
																"src": "10743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2341,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2328,
																						"src": "10770:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1790",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1790",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2340,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2832,
																					"src": "10753:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1790_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10753:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2345,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2343,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2334,
																						"src": "10783:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2344,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2334,
																						"src": "10792:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10783:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2346,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2325,
																					"src": "10801:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10783:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10753:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10809:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10753:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10805:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2352,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10752:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10743:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2332,
														"id": 2354,
														"nodeType": "Return",
														"src": "10736:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "10488:91:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10594:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10607:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "10599:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10599:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10619:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "10610:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1790",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2327,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2326,
														"name": "Rounding",
														"nameLocations": [
															"10610:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1790,
														"src": "10610:8:13"
													},
													"referencedDeclaration": 1790,
													"src": "10610:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1790",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10598:30:13"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "10652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:9:13"
									},
									"scope": 2833,
									"src": "10585:245:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2488,
										"nodeType": "Block",
										"src": "11027:958:13",
										"statements": [
											{
												"assignments": [
													2366
												],
												"declarations": [
													{
														"constant": false,
														"id": 2366,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11046:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2488,
														"src": "11038:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2365,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11038:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2368,
												"initialValue": {
													"hexValue": "30",
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11055:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11038:18:13"
											},
											{
												"id": 2485,
												"nodeType": "UncheckedBlock",
												"src": "11067:887:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2369,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "11096:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11105:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11096:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11111:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11096:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2383,
														"nodeType": "IfStatement",
														"src": "11092:102:13",
														"trueBody": {
															"id": 2382,
															"nodeType": "Block",
															"src": "11114:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2374,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11133:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11143:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11133:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2377,
																	"nodeType": "ExpressionStatement",
																	"src": "11133:13:13"
																},
																{
																	"expression": {
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2378,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2366,
																			"src": "11165:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11175:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11165:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2381,
																	"nodeType": "ExpressionStatement",
																	"src": "11165:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2384,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "11212:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11221:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11212:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11226:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11212:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2398,
														"nodeType": "IfStatement",
														"src": "11208:99:13",
														"trueBody": {
															"id": 2397,
															"nodeType": "Block",
															"src": "11229:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2389,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11248:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11258:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11248:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2392,
																	"nodeType": "ExpressionStatement",
																	"src": "11248:12:13"
																},
																{
																	"expression": {
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2393,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2366,
																			"src": "11279:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11289:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11279:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2396,
																	"nodeType": "ExpressionStatement",
																	"src": "11279:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2399,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "11325:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11334:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11325:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11339:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11325:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2413,
														"nodeType": "IfStatement",
														"src": "11321:99:13",
														"trueBody": {
															"id": 2412,
															"nodeType": "Block",
															"src": "11342:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2404,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11361:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11371:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11361:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2407,
																	"nodeType": "ExpressionStatement",
																	"src": "11361:12:13"
																},
																{
																	"expression": {
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2408,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2366,
																			"src": "11392:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11402:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11392:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2411,
																	"nodeType": "ExpressionStatement",
																	"src": "11392:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2414,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "11438:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11447:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11438:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11452:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11438:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2428,
														"nodeType": "IfStatement",
														"src": "11434:99:13",
														"trueBody": {
															"id": 2427,
															"nodeType": "Block",
															"src": "11455:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11474:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11484:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11474:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2422,
																	"nodeType": "ExpressionStatement",
																	"src": "11474:12:13"
																},
																{
																	"expression": {
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2423,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2366,
																			"src": "11505:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11515:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11505:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2426,
																	"nodeType": "ExpressionStatement",
																	"src": "11505:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2429,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "11551:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11560:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11551:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11564:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11551:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2443,
														"nodeType": "IfStatement",
														"src": "11547:96:13",
														"trueBody": {
															"id": 2442,
															"nodeType": "Block",
															"src": "11567:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2434,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11586:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11596:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11586:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2437,
																	"nodeType": "ExpressionStatement",
																	"src": "11586:11:13"
																},
																{
																	"expression": {
																		"id": 2440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2438,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2366,
																			"src": "11616:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11626:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11616:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2441,
																	"nodeType": "ExpressionStatement",
																	"src": "11616:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2444,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "11661:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11670:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11661:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11674:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11661:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2458,
														"nodeType": "IfStatement",
														"src": "11657:96:13",
														"trueBody": {
															"id": 2457,
															"nodeType": "Block",
															"src": "11677:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2449,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11696:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11706:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11696:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2452,
																	"nodeType": "ExpressionStatement",
																	"src": "11696:11:13"
																},
																{
																	"expression": {
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2453,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2366,
																			"src": "11726:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11736:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11726:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2456,
																	"nodeType": "ExpressionStatement",
																	"src": "11726:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2459,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "11771:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11780:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11771:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11784:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11771:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2473,
														"nodeType": "IfStatement",
														"src": "11767:96:13",
														"trueBody": {
															"id": 2472,
															"nodeType": "Block",
															"src": "11787:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2464,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11806:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11816:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11806:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2467,
																	"nodeType": "ExpressionStatement",
																	"src": "11806:11:13"
																},
																{
																	"expression": {
																		"id": 2470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2468,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2366,
																			"src": "11836:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11836:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2471,
																	"nodeType": "ExpressionStatement",
																	"src": "11836:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2474,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "11881:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11890:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11881:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11894:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11881:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2484,
														"nodeType": "IfStatement",
														"src": "11877:66:13",
														"trueBody": {
															"id": 2483,
															"nodeType": "Block",
															"src": "11897:46:13",
															"statements": [
																{
																	"expression": {
																		"id": 2481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2479,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2366,
																			"src": "11916:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11926:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11916:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2482,
																	"nodeType": "ExpressionStatement",
																	"src": "11916:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2486,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2366,
													"src": "11971:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2364,
												"id": 2487,
												"nodeType": "Return",
												"src": "11964:13:13"
											}
										]
									},
									"documentation": {
										"id": 2358,
										"nodeType": "StructuredDocumentation",
										"src": "10838:122:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10975:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10988:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "10980:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10980:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10979:15:13"
									},
									"returnParameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "11018:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11018:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11017:9:13"
									},
									"scope": 2833,
									"src": "10966:1019:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2523,
										"nodeType": "Block",
										"src": "12224:173:13",
										"statements": [
											{
												"id": 2522,
												"nodeType": "UncheckedBlock",
												"src": "12235:155:13",
												"statements": [
													{
														"assignments": [
															2501
														],
														"declarations": [
															{
																"constant": false,
																"id": 2501,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12268:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2522,
																"src": "12260:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2500,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12260:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2505,
														"initialValue": {
															"arguments": [
																{
																	"id": 2503,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "12282:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2502,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2489,
																	2524
																],
																"referencedDeclaration": 2489,
																"src": "12277:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12277:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12260:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2506,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2501,
																"src": "12310:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2508,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2495,
																						"src": "12337:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1790",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1790",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2507,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2832,
																					"src": "12320:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1790_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12320:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2512,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2510,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12350:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2511,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2501,
																						"src": "12355:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12350:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2513,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "12364:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12350:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12320:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12376:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12320:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12372:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2519,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12319:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12310:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2499,
														"id": 2521,
														"nodeType": "Return",
														"src": "12303:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2490,
										"nodeType": "StructuredDocumentation",
										"src": "11993:145:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12153:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12166:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "12158:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12158:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12182:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "12173:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1790",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2494,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2493,
														"name": "Rounding",
														"nameLocations": [
															"12173:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1790,
														"src": "12173:8:13"
													},
													"referencedDeclaration": 1790,
													"src": "12173:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1790",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12157:34:13"
									},
									"returnParameters": {
										"id": 2499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "12215:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12215:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12214:9:13"
									},
									"scope": 2833,
									"src": "12144:253:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2652,
										"nodeType": "Block",
										"src": "12596:886:13",
										"statements": [
											{
												"assignments": [
													2533
												],
												"declarations": [
													{
														"constant": false,
														"id": 2533,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12615:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2652,
														"src": "12607:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2532,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12607:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2535,
												"initialValue": {
													"hexValue": "30",
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12624:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12607:18:13"
											},
											{
												"id": 2649,
												"nodeType": "UncheckedBlock",
												"src": "12636:815:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2536,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2527,
																"src": "12665:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12674:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12680:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12674:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12665:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2552,
														"nodeType": "IfStatement",
														"src": "12661:106:13",
														"trueBody": {
															"id": 2551,
															"nodeType": "Block",
															"src": "12684:83:13",
															"statements": [
																{
																	"expression": {
																		"id": 2545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2541,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "12703:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12712:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12718:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12712:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12703:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2546,
																	"nodeType": "ExpressionStatement",
																	"src": "12703:17:13"
																},
																{
																	"expression": {
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2547,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "12739:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12749:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12739:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2550,
																	"nodeType": "ExpressionStatement",
																	"src": "12739:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2553,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2527,
																"src": "12785:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12794:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12800:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12794:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12785:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2569,
														"nodeType": "IfStatement",
														"src": "12781:106:13",
														"trueBody": {
															"id": 2568,
															"nodeType": "Block",
															"src": "12804:83:13",
															"statements": [
																{
																	"expression": {
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2558,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "12823:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12832:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12838:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12832:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12823:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2563,
																	"nodeType": "ExpressionStatement",
																	"src": "12823:17:13"
																},
																{
																	"expression": {
																		"id": 2566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2564,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "12859:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12869:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12859:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2567,
																	"nodeType": "ExpressionStatement",
																	"src": "12859:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2570,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2527,
																"src": "12905:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12914:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12920:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12914:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12905:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2586,
														"nodeType": "IfStatement",
														"src": "12901:106:13",
														"trueBody": {
															"id": 2585,
															"nodeType": "Block",
															"src": "12924:83:13",
															"statements": [
																{
																	"expression": {
																		"id": 2579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2575,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "12943:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12952:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12952:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12943:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2580,
																	"nodeType": "ExpressionStatement",
																	"src": "12943:17:13"
																},
																{
																	"expression": {
																		"id": 2583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2581,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "12979:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12989:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12979:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2584,
																	"nodeType": "ExpressionStatement",
																	"src": "12979:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2587,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2527,
																"src": "13025:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13034:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13040:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13034:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "13025:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2603,
														"nodeType": "IfStatement",
														"src": "13021:103:13",
														"trueBody": {
															"id": 2602,
															"nodeType": "Block",
															"src": "13043:81:13",
															"statements": [
																{
																	"expression": {
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2592,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "13062:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13071:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13077:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13071:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "13062:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2597,
																	"nodeType": "ExpressionStatement",
																	"src": "13062:16:13"
																},
																{
																	"expression": {
																		"id": 2600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2598,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "13097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2601,
																	"nodeType": "ExpressionStatement",
																	"src": "13097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2604,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2527,
																"src": "13142:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13151:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13157:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13151:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13142:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2620,
														"nodeType": "IfStatement",
														"src": "13138:103:13",
														"trueBody": {
															"id": 2619,
															"nodeType": "Block",
															"src": "13160:81:13",
															"statements": [
																{
																	"expression": {
																		"id": 2613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2609,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "13179:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13188:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13194:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13188:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13179:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2614,
																	"nodeType": "ExpressionStatement",
																	"src": "13179:16:13"
																},
																{
																	"expression": {
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2615,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "13214:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13224:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13214:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2618,
																	"nodeType": "ExpressionStatement",
																	"src": "13214:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2621,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2527,
																"src": "13259:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13268:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13268:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13259:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2637,
														"nodeType": "IfStatement",
														"src": "13255:103:13",
														"trueBody": {
															"id": 2636,
															"nodeType": "Block",
															"src": "13277:81:13",
															"statements": [
																{
																	"expression": {
																		"id": 2630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2626,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "13296:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13305:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13311:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13305:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13296:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2631,
																	"nodeType": "ExpressionStatement",
																	"src": "13296:16:13"
																},
																{
																	"expression": {
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2632,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "13331:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13341:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13331:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2635,
																	"nodeType": "ExpressionStatement",
																	"src": "13331:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2638,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2527,
																"src": "13376:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13385:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13391:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13385:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13376:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2648,
														"nodeType": "IfStatement",
														"src": "13372:68:13",
														"trueBody": {
															"id": 2647,
															"nodeType": "Block",
															"src": "13394:46:13",
															"statements": [
																{
																	"expression": {
																		"id": 2645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2643,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "13413:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13423:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13413:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2646,
																	"nodeType": "ExpressionStatement",
																	"src": "13413:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2650,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2533,
													"src": "13468:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2531,
												"id": 2651,
												"nodeType": "Return",
												"src": "13461:13:13"
											}
										]
									},
									"documentation": {
										"id": 2525,
										"nodeType": "StructuredDocumentation",
										"src": "12405:123:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12543:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12557:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "12549:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12549:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12548:15:13"
									},
									"returnParameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "12587:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12587:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12586:9:13"
									},
									"scope": 2833,
									"src": "12534:948:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "13723:175:13",
										"statements": [
											{
												"id": 2686,
												"nodeType": "UncheckedBlock",
												"src": "13734:157:13",
												"statements": [
													{
														"assignments": [
															2665
														],
														"declarations": [
															{
																"constant": false,
																"id": 2665,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13767:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2686,
																"src": "13759:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2664,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13759:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2669,
														"initialValue": {
															"arguments": [
																{
																	"id": 2667,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2656,
																	"src": "13782:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2666,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2653,
																	2688
																],
																"referencedDeclaration": 2653,
																"src": "13776:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13776:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13759:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2670,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2665,
																"src": "13810:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2672,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2659,
																						"src": "13837:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1790",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1790",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2671,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2832,
																					"src": "13820:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1790_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13820:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2676,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2674,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13850:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2675,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2665,
																						"src": "13856:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13850:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2677,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2656,
																					"src": "13865:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13850:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13820:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13877:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13820:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13873:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2683,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13819:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13810:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2663,
														"id": 2685,
														"nodeType": "Return",
														"src": "13803:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2654,
										"nodeType": "StructuredDocumentation",
										"src": "13490:146:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13651:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13665:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "13657:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13657:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13681:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "13672:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1790",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2658,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2657,
														"name": "Rounding",
														"nameLocations": [
															"13672:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1790,
														"src": "13672:8:13"
													},
													"referencedDeclaration": 1790,
													"src": "13672:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1790",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13656:34:13"
									},
									"returnParameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "13714:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13714:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13713:9:13"
									},
									"scope": 2833,
									"src": "13642:256:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2774,
										"nodeType": "Block",
										"src": "14226:624:13",
										"statements": [
											{
												"assignments": [
													2697
												],
												"declarations": [
													{
														"constant": false,
														"id": 2697,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14245:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2774,
														"src": "14237:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2696,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14237:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2699,
												"initialValue": {
													"hexValue": "30",
													"id": 2698,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14254:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14237:18:13"
											},
											{
												"id": 2771,
												"nodeType": "UncheckedBlock",
												"src": "14266:553:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2700,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2691,
																	"src": "14295:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14304:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14295:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14310:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14295:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2714,
														"nodeType": "IfStatement",
														"src": "14291:101:13",
														"trueBody": {
															"id": 2713,
															"nodeType": "Block",
															"src": "14313:79:13",
															"statements": [
																{
																	"expression": {
																		"id": 2707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2705,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2691,
																			"src": "14332:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14342:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14332:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2708,
																	"nodeType": "ExpressionStatement",
																	"src": "14332:13:13"
																},
																{
																	"expression": {
																		"id": 2711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2709,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2697,
																			"src": "14364:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14374:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14364:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2712,
																	"nodeType": "ExpressionStatement",
																	"src": "14364:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2715,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2691,
																	"src": "14410:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14419:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14410:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14424:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14410:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2729,
														"nodeType": "IfStatement",
														"src": "14406:98:13",
														"trueBody": {
															"id": 2728,
															"nodeType": "Block",
															"src": "14427:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2720,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2691,
																			"src": "14446:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14456:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14446:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2723,
																	"nodeType": "ExpressionStatement",
																	"src": "14446:12:13"
																},
																{
																	"expression": {
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2724,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2697,
																			"src": "14477:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14487:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14477:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2727,
																	"nodeType": "ExpressionStatement",
																	"src": "14477:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2730,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2691,
																	"src": "14522:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14531:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14522:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14536:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14522:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2744,
														"nodeType": "IfStatement",
														"src": "14518:98:13",
														"trueBody": {
															"id": 2743,
															"nodeType": "Block",
															"src": "14539:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2735,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2691,
																			"src": "14558:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14568:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14558:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2738,
																	"nodeType": "ExpressionStatement",
																	"src": "14558:12:13"
																},
																{
																	"expression": {
																		"id": 2741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2739,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2697,
																			"src": "14589:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14599:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14589:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2742,
																	"nodeType": "ExpressionStatement",
																	"src": "14589:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2745,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2691,
																	"src": "14634:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14643:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14634:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14648:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14634:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2759,
														"nodeType": "IfStatement",
														"src": "14630:98:13",
														"trueBody": {
															"id": 2758,
															"nodeType": "Block",
															"src": "14651:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2750,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2691,
																			"src": "14670:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14680:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14670:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2753,
																	"nodeType": "ExpressionStatement",
																	"src": "14670:12:13"
																},
																{
																	"expression": {
																		"id": 2756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2754,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2697,
																			"src": "14701:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14711:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14701:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2757,
																	"nodeType": "ExpressionStatement",
																	"src": "14701:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2760,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2691,
																	"src": "14746:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14755:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14746:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14759:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14746:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2770,
														"nodeType": "IfStatement",
														"src": "14742:66:13",
														"trueBody": {
															"id": 2769,
															"nodeType": "Block",
															"src": "14762:46:13",
															"statements": [
																{
																	"expression": {
																		"id": 2767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2765,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2697,
																			"src": "14781:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14791:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14781:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2768,
																	"nodeType": "ExpressionStatement",
																	"src": "14781:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2772,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2697,
													"src": "14836:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2695,
												"id": 2773,
												"nodeType": "Return",
												"src": "14829:13:13"
											}
										]
									},
									"documentation": {
										"id": 2689,
										"nodeType": "StructuredDocumentation",
										"src": "13906:251:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14172:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14187:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "14179:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:15:13"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "14217:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14217:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14216:9:13"
									},
									"scope": 2833,
									"src": "14163:687:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2812,
										"nodeType": "Block",
										"src": "15093:182:13",
										"statements": [
											{
												"id": 2811,
												"nodeType": "UncheckedBlock",
												"src": "15104:164:13",
												"statements": [
													{
														"assignments": [
															2787
														],
														"declarations": [
															{
																"constant": false,
																"id": 2787,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15137:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2811,
																"src": "15129:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2786,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15129:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2791,
														"initialValue": {
															"arguments": [
																{
																	"id": 2789,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2778,
																	"src": "15153:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2788,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2775,
																	2813
																],
																"referencedDeclaration": 2775,
																"src": "15146:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15146:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15129:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2792,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2787,
																"src": "15181:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2794,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2781,
																						"src": "15208:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1790",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1790",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2793,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2832,
																					"src": "15191:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1790_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15191:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2801,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2796,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15221:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2799,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2797,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2787,
																									"src": "15227:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2798,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15237:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15227:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2800,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15226:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15221:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2802,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2778,
																					"src": "15242:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15221:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15191:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15254:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "15191:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15250:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2808,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15190:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15181:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2785,
														"id": 2810,
														"nodeType": "Return",
														"src": "15174:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2776,
										"nodeType": "StructuredDocumentation",
										"src": "14858:147:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "15020:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15035:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "15027:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15027:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15051:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "15042:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1790",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2780,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2779,
														"name": "Rounding",
														"nameLocations": [
															"15042:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1790,
														"src": "15042:8:13"
													},
													"referencedDeclaration": 1790,
													"src": "15042:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1790",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15026:34:13"
									},
									"returnParameters": {
										"id": 2785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "15084:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15084:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15083:9:13"
									},
									"scope": 2833,
									"src": "15011:264:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2831,
										"nodeType": "Block",
										"src": "15478:50:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2824,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2817,
																	"src": "15502:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1790",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1790",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15496:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2822,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15496:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15496:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15514:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15496:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15519:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15496:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2821,
												"id": 2830,
												"nodeType": "Return",
												"src": "15489:31:13"
											}
										]
									},
									"documentation": {
										"id": 2814,
										"nodeType": "StructuredDocumentation",
										"src": "15283:115:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15413:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15439:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "15430:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1790",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2816,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2815,
														"name": "Rounding",
														"nameLocations": [
															"15430:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1790,
														"src": "15430:8:13"
													},
													"referencedDeclaration": 1790,
													"src": "15430:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1790",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15429:19:13"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "15472:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15472:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15471:6:13"
									},
									"scope": 2833,
									"src": "15404:124:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2834,
							"src": "211:15320:13",
							"usedErrors": [
								1785
							],
							"usedEvents": []
						}
					],
					"src": "106:15427:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2938
						]
					},
					"id": 2939,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2835,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2836,
								"nodeType": "StructuredDocumentation",
								"src": "140:82:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2938,
							"linearizedBaseContracts": [
								2938
							],
							"name": "SignedMath",
							"nameLocation": "232:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2853,
										"nodeType": "Block",
										"src": "388:39:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2846,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2839,
															"src": "406:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2847,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2841,
															"src": "410:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "406:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2850,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2841,
														"src": "418:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "406:13:14",
													"trueExpression": {
														"id": 2849,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "414:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2845,
												"id": 2852,
												"nodeType": "Return",
												"src": "399:20:14"
											}
										]
									},
									"documentation": {
										"id": 2837,
										"nodeType": "StructuredDocumentation",
										"src": "250:68:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "333:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "344:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "337:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2838,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "354:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "347:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2840,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:20:14"
									},
									"returnParameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "380:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2843,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:14"
									},
									"scope": 2938,
									"src": "324:103:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2871,
										"nodeType": "Block",
										"src": "574:39:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2864,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "592:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2865,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2859,
															"src": "596:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "592:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2868,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2859,
														"src": "604:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "592:13:14",
													"trueExpression": {
														"id": 2867,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "600:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2863,
												"id": 2870,
												"nodeType": "Return",
												"src": "585:20:14"
											}
										]
									},
									"documentation": {
										"id": 2855,
										"nodeType": "StructuredDocumentation",
										"src": "435:69:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "519:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "530:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "523:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2856,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "523:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "540:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "533:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2858,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "533:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:20:14"
									},
									"returnParameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "566:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2861,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "566:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:8:14"
									},
									"scope": 2938,
									"src": "510:103:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2915,
										"nodeType": "Block",
										"src": "824:166:14",
										"statements": [
											{
												"assignments": [
													2883
												],
												"declarations": [
													{
														"constant": false,
														"id": 2883,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "895:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2915,
														"src": "888:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2882,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "888:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2896,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2884,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2875,
																	"src": "900:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2885,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "904:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "900:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2887,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "899:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2888,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "911:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2889,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2877,
																				"src": "915:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "911:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2891,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "910:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "921:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "910:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2894,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "909:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "899:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "888:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2897,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2883,
														"src": "941:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2902,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2883,
																						"src": "961:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2901,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "953:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2900,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "953:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2903,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "953:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2904,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "967:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "953:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "946:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2898,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "946:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "946:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2907,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "975:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2908,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2877,
																				"src": "979:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "975:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2910,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "974:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "946:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2912,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "945:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "941:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2881,
												"id": 2914,
												"nodeType": "Return",
												"src": "934:48:14"
											}
										]
									},
									"documentation": {
										"id": 2873,
										"nodeType": "StructuredDocumentation",
										"src": "621:129:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "765:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "780:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "773:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2874,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "773:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "790:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "783:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2876,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "783:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:20:14"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "816:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2879,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "816:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:8:14"
									},
									"scope": 2938,
									"src": "756:234:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2936,
										"nodeType": "Block",
										"src": "1139:163:14",
										"statements": [
											{
												"id": 2935,
												"nodeType": "UncheckedBlock",
												"src": "1150:145:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2926,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2919,
																			"src": "1267:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1272:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1267:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1280:2:14",
																		"subExpression": {
																			"id": 2930,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2919,
																			"src": "1281:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1267:15:14",
																	"trueExpression": {
																		"id": 2929,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2919,
																		"src": "1276:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1259:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2924,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1259:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1259:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2923,
														"id": 2934,
														"nodeType": "Return",
														"src": "1252:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2917,
										"nodeType": "StructuredDocumentation",
										"src": "998:80:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1093:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2919,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1104:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "1097:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2918,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:10:14"
									},
									"returnParameters": {
										"id": 2923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "1130:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:9:14"
									},
									"scope": 2938,
									"src": "1084:218:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2939,
							"src": "224:1081:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:1195:14"
				},
				"id": 14
			},
			"contracts/Marketplace_Simple.sol": {
				"ast": {
					"absolutePath": "contracts/Marketplace_Simple.sol",
					"exportedSymbols": {
						"BoredPetsNFT": [
							3000
						],
						"Context": [
							1488
						],
						"ERC165": [
							1767
						],
						"ERC721": [
							1177
						],
						"ERC721URIStorage": [
							1438
						],
						"IERC165": [
							1779
						],
						"IERC4906": [
							27
						],
						"IERC721": [
							1294
						],
						"IERC721Errors": [
							121
						],
						"IERC721Metadata": [
							1466
						],
						"IERC721Receiver": [
							1312
						],
						"Strings": [
							1743
						]
					},
					"id": 3001,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2940,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2941,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3001,
							"sourceUnit": 1178,
							"src": "61:57:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 2942,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3001,
							"sourceUnit": 1439,
							"src": "120:78:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2943,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"227:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1438,
										"src": "227:16:15"
									},
									"id": 2944,
									"nodeType": "InheritanceSpecifier",
									"src": "227:16:15"
								}
							],
							"canonicalName": "BoredPetsNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3000,
							"linearizedBaseContracts": [
								3000,
								1438,
								1177,
								121,
								1466,
								27,
								1294,
								1767,
								1779,
								1488
							],
							"name": "BoredPetsNFT",
							"nameLocation": "211:12:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2946,
									"mutability": "mutable",
									"name": "_tokenIds",
									"nameLocation": "265:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 3000,
									"src": "249:25:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2945,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "249:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2948,
									"mutability": "mutable",
									"name": "marketplaceContract",
									"nameLocation": "287:19:15",
									"nodeType": "VariableDeclaration",
									"scope": 3000,
									"src": "279:27:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2947,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "279:7:15",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "d9dc24857f317ed9abbbb42e920ede0104231eb1d3d70236a74887ffaf159868",
									"id": 2952,
									"name": "NFTMinted",
									"nameLocation": "317:9:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2952,
												"src": "327:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:15"
									},
									"src": "311:25:15"
								},
								{
									"body": {
										"id": 2965,
										"nodeType": "Block",
										"src": "424:55:15",
										"statements": [
											{
												"expression": {
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2961,
														"name": "marketplaceContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2948,
														"src": "431:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2962,
														"name": "_marketplaceContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2954,
														"src": "453:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "431:42:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2964,
												"nodeType": "ExpressionStatement",
												"src": "431:42:15"
											}
										]
									},
									"id": 2966,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "426f726564205065747320596163687420436c7562",
													"id": 2957,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "391:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_25b00438d4f6c6bdf3b66a67adfbc8d677c96407a344772dee49a0b65f1467af",
														"typeString": "literal_string \"Bored Pets Yacht Club\""
													},
													"value": "Bored Pets Yacht Club"
												},
												{
													"hexValue": "42505943",
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "416:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d5165ada13e37d19f138f737ca73f960bf7ab267d36a310d5f20a266fbae03c4",
														"typeString": "literal_string \"BPYC\""
													},
													"value": "BPYC"
												}
											],
											"id": 2959,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2956,
												"name": "ERC721",
												"nameLocations": [
													"384:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "384:6:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "384:39:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "_marketplaceContract",
												"nameLocation": "362:20:15",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "354:28:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:30:15"
									},
									"returnParameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:0:15"
									},
									"scope": 3000,
									"src": "342:137:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2998,
										"nodeType": "Block",
										"src": "531:227:15",
										"statements": [
											{
												"expression": {
													"id": 2972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "538:11:15",
													"subExpression": {
														"id": 2971,
														"name": "_tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "538:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2973,
												"nodeType": "ExpressionStatement",
												"src": "538:11:15"
											},
											{
												"assignments": [
													2975
												],
												"declarations": [
													{
														"constant": false,
														"id": 2975,
														"mutability": "mutable",
														"name": "newTokenId",
														"nameLocation": "564:10:15",
														"nodeType": "VariableDeclaration",
														"scope": 2998,
														"src": "556:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "556:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2977,
												"initialValue": {
													"id": 2976,
													"name": "_tokenIds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2946,
													"src": "577:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "556:30:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2979,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "603:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "607:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "603:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2981,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2975,
															"src": "615:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2978,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															799,
															825
														],
														"referencedDeclaration": 799,
														"src": "593:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "593:33:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2983,
												"nodeType": "ExpressionStatement",
												"src": "593:33:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2985,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2975,
															"src": "646:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2986,
															"name": "_tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2968,
															"src": "658:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2984,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "633:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:35:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2988,
												"nodeType": "ExpressionStatement",
												"src": "633:35:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2990,
															"name": "marketplaceContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2948,
															"src": "693:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "714:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2989,
														"name": "setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "675:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "675:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2993,
												"nodeType": "ExpressionStatement",
												"src": "675:44:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2995,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2975,
															"src": "741:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2994,
														"name": "NFTMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2952,
														"src": "731:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "731:21:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2997,
												"nodeType": "EmitStatement",
												"src": "726:26:15"
											}
										]
									},
									"functionSelector": "d85d3d27",
									"id": 2999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "494:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "513:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "499:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2967,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "499:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:25:15"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "531:0:15"
									},
									"scope": 3000,
									"src": "485:273:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3001,
							"src": "202:559:15",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211,
								2952
							]
						}
					],
					"src": "33:730:15"
				},
				"id": 15
			}
		}
	}
}