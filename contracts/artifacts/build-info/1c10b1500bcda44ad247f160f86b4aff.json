{
	"id": "1c10b1500bcda44ad247f160f86b4aff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\n\r\ncontract Marketplace is ReentrancyGuard {\r\n  uint256 private _nftsSold;\r\n  uint256 private _nftCount;\r\n  uint256 public LISTING_FEE = 0;\r\n  address payable private _marketOwner;\r\n  mapping(uint256 => NFT) private _idToNFT;\r\n  struct NFT {\r\n    address nftContract;\r\n    uint256 tokenId;\r\n    address payable seller;\r\n    address payable owner;\r\n    uint256 price;\r\n    bool listed;\r\n  }\r\n  event NFTListed(\r\n    address nftContract,\r\n    uint256 tokenId,\r\n    address seller,\r\n    address owner,\r\n    uint256 price\r\n  );\r\n  event NFTSold(\r\n    address nftContract,\r\n    uint256 tokenId,\r\n    address seller,\r\n    address owner,\r\n    uint256 price\r\n  );\r\n\r\n  constructor() {\r\n    _marketOwner = payable(msg.sender);\r\n  }\r\n\r\n  // List the NFT on the marketplace\r\n  function listNft(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {\r\n    require(_price > 0, \"Price must be at least 1 wei\");\r\n    require(msg.value == LISTING_FEE, \"Not enough ether for listing fee\");\r\n\r\n    IERC721(_nftContract).transferFrom(msg.sender, address(this), _tokenId);\r\n    _marketOwner.transfer(LISTING_FEE);\r\n    _nftCount++;\r\n\r\n    _idToNFT[_tokenId] = NFT(\r\n      _nftContract,\r\n      _tokenId, \r\n      payable(msg.sender),\r\n      payable(address(this)),\r\n      _price,\r\n      true\r\n    );\r\n\r\n    emit NFTListed(_nftContract, _tokenId, msg.sender, address(this), _price);\r\n  }\r\n\r\n  // Buy an NFT\r\n  function buyNft(address _nftContract, uint256 _tokenId) public payable nonReentrant {\r\n    NFT storage nft = _idToNFT[_tokenId];\r\n    require(msg.value >= nft.price, \"Not enough ether to cover asking price\");\r\n\r\n    address payable buyer = payable(msg.sender);\r\n    payable(nft.seller).transfer(msg.value);\r\n    IERC721(_nftContract).transferFrom(address(this), buyer, nft.tokenId);\r\n    nft.owner = buyer;\r\n    nft.listed = false;\r\n\r\n    _nftsSold++;\r\n    emit NFTSold(_nftContract, nft.tokenId, nft.seller, buyer, msg.value);\r\n  }\r\n\r\n  // Resell an NFT purchased from the marketplace\r\n  function resellNft(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {\r\n    require(_price > 0, \"Price must be at least 1 wei\");\r\n    require(msg.value == LISTING_FEE, \"Not enough ether for listing fee\");\r\n\r\n    IERC721(_nftContract).transferFrom(msg.sender, address(this), _tokenId);\r\n\r\n    NFT storage nft = _idToNFT[_tokenId];\r\n    nft.seller = payable(msg.sender);\r\n    nft.owner = payable(address(this));\r\n    nft.listed = true;\r\n    nft.price = _price;\r\n\r\n    _nftsSold--;\r\n    emit NFTListed(_nftContract, _tokenId, msg.sender, address(this), _price);\r\n  }\r\n\r\n  function getListedNfts() public view returns (NFT[] memory) {\r\n    uint256 nftCount = _nftCount;\r\n    uint256 unsoldNftsCount = nftCount - _nftsSold;\r\n\r\n    NFT[] memory nfts = new NFT[](unsoldNftsCount);\r\n    uint nftsIndex = 0;\r\n    for (uint i = 0; i < nftCount; i++) {\r\n      if (_idToNFT[i + 1].listed) {\r\n        nfts[nftsIndex] = _idToNFT[i + 1];\r\n        nftsIndex++;\r\n      }\r\n    }\r\n    return nfts;\r\n  }\r\n\r\n  function getMyNfts() public view returns (NFT[] memory) {\r\n    uint nftCount = _nftCount;\r\n    uint myNftCount = 0;\r\n    for (uint i = 0; i < nftCount; i++) {\r\n      if (_idToNFT[i + 1].owner == msg.sender) {\r\n        myNftCount++;\r\n      }\r\n    }\r\n\r\n    NFT[] memory nfts = new NFT[](myNftCount);\r\n    uint nftsIndex = 0;\r\n    for (uint i = 0; i < nftCount; i++) {\r\n      if (_idToNFT[i + 1].owner == msg.sender) {\r\n        nfts[nftsIndex] = _idToNFT[i + 1];\r\n        nftsIndex++;\r\n      }\r\n    }\r\n    return nfts;\r\n  }\r\n\r\n  function getMyListedNfts() public view returns (NFT[] memory) {\r\n    uint nftCount = _nftCount;\r\n    uint myListedNftCount = 0;\r\n    for (uint i = 0; i < nftCount; i++) {\r\n      if (_idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed) {\r\n        myListedNftCount++;\r\n      }\r\n    }\r\n\r\n    NFT[] memory nfts = new NFT[](myListedNftCount);\r\n    uint nftsIndex = 0;\r\n    for (uint i = 0; i < nftCount; i++) {\r\n      if (_idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed) {\r\n        nfts[nftsIndex] = _idToNFT[i + 1];\r\n        nftsIndex++;\r\n      }\r\n    }\r\n    return nfts;\r\n  }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant NOT_ENTERED = 1;\r\n    uint256 private constant ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    /**\r\n     * @dev Unauthorized reentrant call.\r\n     */\r\n    error ReentrancyGuardReentrantCall();\r\n\r\n    constructor() {\r\n        _status = NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _nonReentrantBefore();\r\n        _;\r\n        _nonReentrantAfter();\r\n    }\r\n\r\n    function _nonReentrantBefore() private {\r\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\r\n        if (_status == ENTERED) {\r\n            revert ReentrancyGuardReentrantCall();\r\n        }\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = ENTERED;\r\n    }\r\n\r\n    function _nonReentrantAfter() private {\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\r\n     * `nonReentrant` function in the call stack.\r\n     */\r\n    function _reentrancyGuardEntered() internal view returns (bool) {\r\n        return _status == ENTERED;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"./IERC721.sol\";\r\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\r\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\r\nimport {Context} from \"../../utils/Context.sol\";\r\nimport {Strings} from \"../../utils/Strings.sol\";\r\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\r\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    mapping(uint256 tokenId => address) private _owners;\r\n\r\n    mapping(address owner => uint256) private _balances;\r\n\r\n    mapping(uint256 tokenId => address) private _tokenApprovals;\r\n\r\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual returns (uint256) {\r\n        if (owner == address(0)) {\r\n            revert ERC721InvalidOwner(address(0));\r\n        }\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\r\n        return _requireOwned(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual {\r\n        _approve(to, tokenId, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\r\n        _requireOwned(tokenId);\r\n\r\n        return _getApproved(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\r\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\r\n        address previousOwner = _update(to, tokenId, _msgSender());\r\n        if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\r\n        transferFrom(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     *\r\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\r\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\r\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\r\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\r\n        return _owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\r\n     */\r\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\r\n     * particular (ignoring whether it is owned by `owner`).\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            spender != address(0) &&\r\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\r\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\r\n     * the `spender` for the specific `tokenId`.\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\r\n        if (!_isAuthorized(owner, spender, tokenId)) {\r\n            if (owner == address(0)) {\r\n                revert ERC721NonexistentToken(tokenId);\r\n            } else {\r\n                revert ERC721InsufficientApproval(spender, tokenId);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\r\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\r\n     *\r\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\r\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\r\n     * remain consistent with one another.\r\n     */\r\n    function _increaseBalance(address account, uint128 value) internal virtual {\r\n        unchecked {\r\n            _balances[account] += value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\r\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\r\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\r\n        address from = _ownerOf(tokenId);\r\n\r\n        // Perform (optional) operator check\r\n        if (auth != address(0)) {\r\n            _checkAuthorized(from, auth, tokenId);\r\n        }\r\n\r\n        // Execute the update\r\n        if (from != address(0)) {\r\n            // Clear approval. No need to re-authorize or emit the Approval event\r\n            _approve(address(0), tokenId, address(0), false);\r\n\r\n            unchecked {\r\n                _balances[from] -= 1;\r\n            }\r\n        }\r\n\r\n        if (to != address(0)) {\r\n            unchecked {\r\n                _balances[to] += 1;\r\n            }\r\n        }\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        return from;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner != address(0)) {\r\n            revert ERC721InvalidSender(address(0));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _mint(to, tokenId);\r\n        _checkOnERC721Received(address(0), to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal {\r\n        address previousOwner = _update(address(0), tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        } else if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\r\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\r\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\r\n        _safeTransfer(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\r\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth) internal {\r\n        _approve(to, tokenId, auth, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\r\n     * emitted in the context of transfers.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\r\n        // Avoid reading the owner unless necessary\r\n        if (emitEvent || auth != address(0)) {\r\n            address owner = _requireOwned(tokenId);\r\n\r\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\r\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\r\n                revert ERC721InvalidApprover(auth);\r\n            }\r\n\r\n            if (emitEvent) {\r\n                emit Approval(owner, to, tokenId);\r\n            }\r\n        }\r\n\r\n        _tokenApprovals[tokenId] = to;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Requirements:\r\n     * - operator can't be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\r\n        if (operator == address(0)) {\r\n            revert ERC721InvalidOperator(operator);\r\n        }\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\r\n     * Returns the owner.\r\n     *\r\n     * Overrides to ownership logic should be done to {_ownerOf}.\r\n     */\r\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        if (owner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\r\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     */\r\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\r\n        if (to.code.length > 0) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                if (retval != IERC721Receiver.onERC721Received.selector) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                }\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Math} from \"./math/Math.sol\";\r\nimport {SignedMath} from \"./math/SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\r\n    uint8 private constant ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toStringSigned(int256 value) internal pure returns (string memory) {\r\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        uint256 localValue = value;\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\r\n            localValue >>= 4;\r\n        }\r\n        if (localValue != 0) {\r\n            revert StringsInsufficientHexLength(value, length);\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\r\n     * representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"../IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\r\n     * reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Muldiv operation overflow.\r\n     */\r\n    error MathOverflowedMulDiv();\r\n\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            return a / b;\r\n        }\r\n\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            if (denominator <= prod1) {\r\n                revert MathOverflowedMulDiv();\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x55c329217b55fc381f19a19007d6bcf279e3b58e9867d3e2b33f57fe8acb824b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ca5be47fdb89a89e69c8aee2eea7f27543009f95a46bb69bb65283afdaa327d\",\"dweb:/ipfs/QmVJjqVZsfQHEMRuJu6yaimvWooHu1fTW7xQwbc1gtKypw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1341,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e6bc004bbf136087562c7d50bf3be6c780373bc29497c0c13ff025ce7d73f12364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e6bc004bbf136087562c7d50bf3be6c780373bc29497c0c13ff025ce7d73f12364736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xBC STOP 0x4B 0xBF SGT PUSH1 0x87 JUMP 0x2C PUSH30 0x50BF3BE6C780373BC29497C0C13FF025CE7D73F12364736F6C6343000816 STOP CALLER ",
							"sourceMap": "262:2929:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e6bc004bbf136087562c7d50bf3be6c780373bc29497c0c13ff025ce7d73f12364736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xBC STOP 0x4B 0xBF SGT PUSH1 0x87 JUMP 0x2C PUSH30 0x50BF3BE6C780373BC29497C0C13FF025CE7D73F12364736F6C6343000816 STOP CALLER ",
							"sourceMap": "262:2929:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6bc004bbf136087562c7d50bf3be6c780373bc29497c0c13ff025ce7d73f12364736f6c63430008160033",
									".code": [
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203fcaf83cbe0c83c16a6b79352d6f6b68fab0e1b39c3c621f52a3edb095f4c0be64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203fcaf83cbe0c83c16a6b79352d6f6b68fab0e1b39c3c621f52a3edb095f4c0be64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xCA 0xF8 EXTCODECOPY 0xBE 0xC DUP4 0xC1 PUSH11 0x6B79352D6F6B68FAB0E1B3 SWAP13 EXTCODECOPY PUSH3 0x1F52A3 0xED 0xB0 SWAP6 DELEGATECALL 0xC0 0xBE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "211:15320:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203fcaf83cbe0c83c16a6b79352d6f6b68fab0e1b39c3c621f52a3edb095f4c0be64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xCA 0xF8 EXTCODECOPY 0xBE 0xC DUP4 0xC1 PUSH11 0x6B79352D6F6B68FAB0E1B3 SWAP13 EXTCODECOPY PUSH3 0x1F52A3 0xED 0xB0 SWAP6 DELEGATECALL 0xC0 0xBE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "211:15320:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203fcaf83cbe0c83c16a6b79352d6f6b68fab0e1b39c3c621f52a3edb095f4c0be64736f6c63430008160033",
									".code": [
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0237004ce14901bc17f10e85e1e76fe8ffb88d103087c00d6411ca9b5b0f28864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b0237004ce14901bc17f10e85e1e76fe8ffb88d103087c00d6411ca9b5b0f28864736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x23 PUSH17 0x4CE14901BC17F10E85E1E76FE8FFB88D1 SUB ADDMOD PUSH29 0xD6411CA9B5B0F28864736F6C63430008160033000000000000000000 ",
							"sourceMap": "224:1081:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b0237004ce14901bc17f10e85e1e76fe8ffb88d103087c00d6411ca9b5b0f28864736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x23 PUSH17 0x4CE14901BC17F10E85E1E76FE8FFB88D1 SUB ADDMOD PUSH29 0xD6411CA9B5B0F28864736F6C63430008160033000000000000000000 ",
							"sourceMap": "224:1081:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0237004ce14901bc17f10e85e1e76fe8ffb88d103087c00d6411ca9b5b0f28864736f6c63430008160033",
									".code": [
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Marketplace.sol": {
				"Marketplace": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTListed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTSold",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "LISTING_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNft",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getListedNfts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "listed",
											"type": "bool"
										}
									],
									"internalType": "struct Marketplace.NFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyListedNfts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "listed",
											"type": "bool"
										}
									],
									"internalType": "struct Marketplace.NFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyNfts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "listed",
											"type": "bool"
										}
									],
									"internalType": "struct Marketplace.NFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "listNft",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "resellNft",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Marketplace.sol\":183:4336  contract Marketplace is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Marketplace.sol\":317:318  0 */\n  0x00\n    /* \"contracts/Marketplace.sol\":288:318  uint256 public LISTING_FEE = 0 */\n  0x03\n  sstore\n    /* \"contracts/Marketplace.sol\":841:902  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1746:1747  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1961:1968  _status */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1961:1982  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Marketplace.sol\":885:895  msg.sender */\n  caller\n    /* \"contracts/Marketplace.sol\":862:874  _marketOwner */\n  0x04\n  0x00\n    /* \"contracts/Marketplace.sol\":862:896  _marketOwner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Marketplace.sol\":183:4336  contract Marketplace is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Marketplace.sol\":183:4336  contract Marketplace is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x34f5b624\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x34f5b624\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4ddf4f8f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8d6cb3fb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc922b17c\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x047b07bf\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1f4cc4db\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2b86ae38\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Marketplace.sol\":3209:3729  function getMyNfts() public view returns (NFT[] memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Marketplace.sol\":3735:4333  function getMyListedNfts() public view returns (NFT[] memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Marketplace.sol\":288:318  uint256 public LISTING_FEE = 0 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Marketplace.sol\":2186:2783  function resellNft(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/Marketplace.sol\":1597:2129  function buyNft(address _nftContract, uint256 _tokenId) public payable nonReentrant {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/Marketplace.sol\":2789:3203  function getListedNfts() public view returns (NFT[] memory) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Marketplace.sol\":946:1574  function listNft(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Marketplace.sol\":3209:3729  function getMyNfts() public view returns (NFT[] memory) {... */\n    tag_12:\n        /* \"contracts/Marketplace.sol\":3251:3263  NFT[] memory */\n      0x60\n        /* \"contracts/Marketplace.sol\":3272:3285  uint nftCount */\n      0x00\n        /* \"contracts/Marketplace.sol\":3288:3297  _nftCount */\n      sload(0x02)\n        /* \"contracts/Marketplace.sol\":3272:3297  uint nftCount = _nftCount */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":3304:3319  uint myNftCount */\n      0x00\n        /* \"contracts/Marketplace.sol\":3335:3341  uint i */\n      dup1\n        /* \"contracts/Marketplace.sol\":3330:3456  for (uint i = 0; i < nftCount; i++) {... */\n    tag_40:\n        /* \"contracts/Marketplace.sol\":3351:3359  nftCount */\n      dup3\n        /* \"contracts/Marketplace.sol\":3347:3348  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":3347:3359  i < nftCount */\n      lt\n        /* \"contracts/Marketplace.sol\":3330:3456  for (uint i = 0; i < nftCount; i++) {... */\n      iszero\n      tag_41\n      jumpi\n        /* \"contracts/Marketplace.sol\":3404:3414  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":3379:3414  _idToNFT[i + 1].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":3379:3387  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":3379:3394  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":3392:3393  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3388:3389  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":3388:3393  i + 1 */\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"contracts/Marketplace.sol\":3379:3394  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":3379:3400  _idToNFT[i + 1].owner */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":3379:3414  _idToNFT[i + 1].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Marketplace.sol\":3375:3449  if (_idToNFT[i + 1].owner == msg.sender) {... */\n      tag_45\n      jumpi\n        /* \"contracts/Marketplace.sol\":3427:3439  myNftCount++ */\n      dup2\n      dup1\n      tag_46\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      swap3\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3375:3449  if (_idToNFT[i + 1].owner == msg.sender) {... */\n    tag_45:\n        /* \"contracts/Marketplace.sol\":3361:3364  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3330:3456  for (uint i = 0; i < nftCount; i++) {... */\n      jump(tag_40)\n    tag_41:\n      pop\n        /* \"contracts/Marketplace.sol\":3464:3481  NFT[] memory nfts */\n      0x00\n        /* \"contracts/Marketplace.sol\":3494:3504  myNftCount */\n      dup2\n        /* \"contracts/Marketplace.sol\":3484:3505  new NFT[](myNftCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n    tag_48:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup2\n      0x20\n      add\n    tag_52:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_52\n      jumpi\n      swap1\n      pop\n    tag_51:\n      pop\n        /* \"contracts/Marketplace.sol\":3464:3505  NFT[] memory nfts = new NFT[](myNftCount) */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":3512:3526  uint nftsIndex */\n      0x00\n        /* \"contracts/Marketplace.sol\":3542:3548  uint i */\n      dup1\n        /* \"contracts/Marketplace.sol\":3537:3706  for (uint i = 0; i < nftCount; i++) {... */\n    tag_55:\n        /* \"contracts/Marketplace.sol\":3558:3566  nftCount */\n      dup5\n        /* \"contracts/Marketplace.sol\":3554:3555  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":3554:3566  i < nftCount */\n      lt\n        /* \"contracts/Marketplace.sol\":3537:3706  for (uint i = 0; i < nftCount; i++) {... */\n      iszero\n      tag_56\n      jumpi\n        /* \"contracts/Marketplace.sol\":3611:3621  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":3586:3621  _idToNFT[i + 1].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":3586:3594  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":3586:3601  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":3599:3600  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3595:3596  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":3595:3600  i + 1 */\n      tag_58\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_58:\n        /* \"contracts/Marketplace.sol\":3586:3601  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":3586:3607  _idToNFT[i + 1].owner */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":3586:3621  _idToNFT[i + 1].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Marketplace.sol\":3582:3699  if (_idToNFT[i + 1].owner == msg.sender) {... */\n      tag_59\n      jumpi\n        /* \"contracts/Marketplace.sol\":3652:3660  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":3652:3667  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":3665:3666  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3661:3662  i */\n      dup4\n        /* \"contracts/Marketplace.sol\":3661:3666  i + 1 */\n      tag_60\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_60:\n        /* \"contracts/Marketplace.sol\":3652:3667  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":3634:3667  nfts[nftsIndex] = _idToNFT[i + 1] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3634:3638  nfts */\n      dup4\n        /* \"contracts/Marketplace.sol\":3639:3648  nftsIndex */\n      dup4\n        /* \"contracts/Marketplace.sol\":3634:3649  nfts[nftsIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_61\n      jumpi\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n    tag_61:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Marketplace.sol\":3634:3667  nfts[nftsIndex] = _idToNFT[i + 1] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Marketplace.sol\":3678:3689  nftsIndex++ */\n      dup2\n      dup1\n      tag_64\n      swap1\n      tag_47\n      jump\t// in\n    tag_64:\n      swap3\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3582:3699  if (_idToNFT[i + 1].owner == msg.sender) {... */\n    tag_59:\n        /* \"contracts/Marketplace.sol\":3568:3571  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3537:3706  for (uint i = 0; i < nftCount; i++) {... */\n      jump(tag_55)\n    tag_56:\n      pop\n        /* \"contracts/Marketplace.sol\":3719:3723  nfts */\n      dup2\n        /* \"contracts/Marketplace.sol\":3712:3723  return nfts */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3209:3729  function getMyNfts() public view returns (NFT[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":3735:4333  function getMyListedNfts() public view returns (NFT[] memory) {... */\n    tag_17:\n        /* \"contracts/Marketplace.sol\":3783:3795  NFT[] memory */\n      0x60\n        /* \"contracts/Marketplace.sol\":3804:3817  uint nftCount */\n      0x00\n        /* \"contracts/Marketplace.sol\":3820:3829  _nftCount */\n      sload(0x02)\n        /* \"contracts/Marketplace.sol\":3804:3829  uint nftCount = _nftCount */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":3836:3857  uint myListedNftCount */\n      0x00\n        /* \"contracts/Marketplace.sol\":3873:3879  uint i */\n      dup1\n        /* \"contracts/Marketplace.sol\":3868:4027  for (uint i = 0; i < nftCount; i++) {... */\n    tag_66:\n        /* \"contracts/Marketplace.sol\":3889:3897  nftCount */\n      dup3\n        /* \"contracts/Marketplace.sol\":3885:3886  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":3885:3897  i < nftCount */\n      lt\n        /* \"contracts/Marketplace.sol\":3868:4027  for (uint i = 0; i < nftCount; i++) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"contracts/Marketplace.sol\":3943:3953  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":3917:3953  _idToNFT[i + 1].seller == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":3917:3925  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":3917:3932  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":3930:3931  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3926:3927  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":3926:3931  i + 1 */\n      tag_69\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"contracts/Marketplace.sol\":3917:3932  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":3917:3939  _idToNFT[i + 1].seller */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":3917:3953  _idToNFT[i + 1].seller == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Marketplace.sol\":3917:3979  _idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed */\n      dup1\n      iszero\n      tag_70\n      jumpi\n      pop\n        /* \"contracts/Marketplace.sol\":3957:3965  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":3957:3972  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":3970:3971  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3966:3967  i */\n      dup4\n        /* \"contracts/Marketplace.sol\":3966:3971  i + 1 */\n      tag_71\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_71:\n        /* \"contracts/Marketplace.sol\":3957:3972  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":3957:3979  _idToNFT[i + 1].listed */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Marketplace.sol\":3917:3979  _idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed */\n    tag_70:\n        /* \"contracts/Marketplace.sol\":3913:4020  if (_idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"contracts/Marketplace.sol\":3992:4010  myListedNftCount++ */\n      dup2\n      dup1\n      tag_73\n      swap1\n      tag_47\n      jump\t// in\n    tag_73:\n      swap3\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3913:4020  if (_idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed) {... */\n    tag_72:\n        /* \"contracts/Marketplace.sol\":3899:3902  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3868:4027  for (uint i = 0; i < nftCount; i++) {... */\n      jump(tag_66)\n    tag_67:\n      pop\n        /* \"contracts/Marketplace.sol\":4035:4052  NFT[] memory nfts */\n      0x00\n        /* \"contracts/Marketplace.sol\":4065:4081  myListedNftCount */\n      dup2\n        /* \"contracts/Marketplace.sol\":4055:4082  new NFT[](myListedNftCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_74\n      jumpi\n      tag_75\n      tag_50\n      jump\t// in\n    tag_75:\n    tag_74:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_76\n      jumpi\n      dup2\n      0x20\n      add\n    tag_77:\n      tag_78\n      tag_54\n      jump\t// in\n    tag_78:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_77\n      jumpi\n      swap1\n      pop\n    tag_76:\n      pop\n        /* \"contracts/Marketplace.sol\":4035:4082  NFT[] memory nfts = new NFT[](myListedNftCount) */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":4089:4103  uint nftsIndex */\n      0x00\n        /* \"contracts/Marketplace.sol\":4119:4125  uint i */\n      dup1\n        /* \"contracts/Marketplace.sol\":4114:4310  for (uint i = 0; i < nftCount; i++) {... */\n    tag_79:\n        /* \"contracts/Marketplace.sol\":4135:4143  nftCount */\n      dup5\n        /* \"contracts/Marketplace.sol\":4131:4132  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":4131:4143  i < nftCount */\n      lt\n        /* \"contracts/Marketplace.sol\":4114:4310  for (uint i = 0; i < nftCount; i++) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"contracts/Marketplace.sol\":4189:4199  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":4163:4199  _idToNFT[i + 1].seller == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":4163:4171  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":4163:4178  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":4176:4177  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":4172:4173  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":4172:4177  i + 1 */\n      tag_82\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_82:\n        /* \"contracts/Marketplace.sol\":4163:4178  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":4163:4185  _idToNFT[i + 1].seller */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":4163:4199  _idToNFT[i + 1].seller == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Marketplace.sol\":4163:4225  _idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed */\n      dup1\n      iszero\n      tag_83\n      jumpi\n      pop\n        /* \"contracts/Marketplace.sol\":4203:4211  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":4203:4218  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":4216:4217  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":4212:4213  i */\n      dup4\n        /* \"contracts/Marketplace.sol\":4212:4217  i + 1 */\n      tag_84\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_84:\n        /* \"contracts/Marketplace.sol\":4203:4218  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":4203:4225  _idToNFT[i + 1].listed */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Marketplace.sol\":4163:4225  _idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed */\n    tag_83:\n        /* \"contracts/Marketplace.sol\":4159:4303  if (_idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"contracts/Marketplace.sol\":4256:4264  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":4256:4271  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":4269:4270  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":4265:4266  i */\n      dup4\n        /* \"contracts/Marketplace.sol\":4265:4270  i + 1 */\n      tag_86\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_86:\n        /* \"contracts/Marketplace.sol\":4256:4271  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":4238:4271  nfts[nftsIndex] = _idToNFT[i + 1] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":4238:4242  nfts */\n      dup4\n        /* \"contracts/Marketplace.sol\":4243:4252  nftsIndex */\n      dup4\n        /* \"contracts/Marketplace.sol\":4238:4253  nfts[nftsIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_87\n      jumpi\n      tag_88\n      tag_63\n      jump\t// in\n    tag_88:\n    tag_87:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Marketplace.sol\":4238:4271  nfts[nftsIndex] = _idToNFT[i + 1] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Marketplace.sol\":4282:4293  nftsIndex++ */\n      dup2\n      dup1\n      tag_89\n      swap1\n      tag_47\n      jump\t// in\n    tag_89:\n      swap3\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":4159:4303  if (_idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed) {... */\n    tag_85:\n        /* \"contracts/Marketplace.sol\":4145:4148  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":4114:4310  for (uint i = 0; i < nftCount; i++) {... */\n      jump(tag_79)\n    tag_80:\n      pop\n        /* \"contracts/Marketplace.sol\":4323:4327  nfts */\n      dup2\n        /* \"contracts/Marketplace.sol\":4316:4327  return nfts */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3735:4333  function getMyListedNfts() public view returns (NFT[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":288:318  uint256 public LISTING_FEE = 0 */\n    tag_21:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":2186:2783  function resellNft(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2411:2432  _nonReentrantBefore() */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2411:2430  _nonReentrantBefore */\n      tag_92\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2411:2432  _nonReentrantBefore() */\n      jump\t// in\n    tag_91:\n        /* \"contracts/Marketplace.sol\":2313:2314  0 */\n      0x00\n        /* \"contracts/Marketplace.sol\":2304:2310  _price */\n      dup2\n        /* \"contracts/Marketplace.sol\":2304:2314  _price > 0 */\n      gt\n        /* \"contracts/Marketplace.sol\":2296:2347  require(_price > 0, \"Price must be at least 1 wei\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/Marketplace.sol\":2375:2386  LISTING_FEE */\n      sload(0x03)\n        /* \"contracts/Marketplace.sol\":2362:2371  msg.value */\n      callvalue\n        /* \"contracts/Marketplace.sol\":2362:2386  msg.value == LISTING_FEE */\n      eq\n        /* \"contracts/Marketplace.sol\":2354:2423  require(msg.value == LISTING_FEE, \"Not enough ether for listing fee\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/Marketplace.sol\":2440:2452  _nftContract */\n      dup3\n        /* \"contracts/Marketplace.sol\":2432:2466  IERC721(_nftContract).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Marketplace.sol\":2467:2477  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":2487:2491  this */\n      address\n        /* \"contracts/Marketplace.sol\":2494:2502  _tokenId */\n      dup6\n        /* \"contracts/Marketplace.sol\":2432:2503  IERC721(_nftContract).transferFrom(msg.sender, address(this), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":2512:2527  NFT storage nft */\n      0x00\n        /* \"contracts/Marketplace.sol\":2530:2538  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":2530:2548  _idToNFT[_tokenId] */\n      0x00\n        /* \"contracts/Marketplace.sol\":2539:2547  _tokenId */\n      dup5\n        /* \"contracts/Marketplace.sol\":2530:2548  _idToNFT[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":2512:2548  NFT storage nft = _idToNFT[_tokenId] */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":2576:2586  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":2555:2558  nft */\n      dup2\n        /* \"contracts/Marketplace.sol\":2555:2565  nft.seller */\n      0x02\n      add\n      0x00\n        /* \"contracts/Marketplace.sol\":2555:2587  nft.seller = payable(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Marketplace.sol\":2622:2626  this */\n      address\n        /* \"contracts/Marketplace.sol\":2594:2597  nft */\n      dup2\n        /* \"contracts/Marketplace.sol\":2594:2603  nft.owner */\n      0x03\n      add\n      0x00\n        /* \"contracts/Marketplace.sol\":2594:2628  nft.owner = payable(address(this)) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Marketplace.sol\":2648:2652  true */\n      0x01\n        /* \"contracts/Marketplace.sol\":2635:2638  nft */\n      dup2\n        /* \"contracts/Marketplace.sol\":2635:2645  nft.listed */\n      0x05\n      add\n      0x00\n        /* \"contracts/Marketplace.sol\":2635:2652  nft.listed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Marketplace.sol\":2671:2677  _price */\n      dup2\n        /* \"contracts/Marketplace.sol\":2659:2662  nft */\n      dup2\n        /* \"contracts/Marketplace.sol\":2659:2668  nft.price */\n      0x04\n      add\n        /* \"contracts/Marketplace.sol\":2659:2677  nft.price = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Marketplace.sol\":2686:2695  _nftsSold */\n      0x01\n      0x00\n        /* \"contracts/Marketplace.sol\":2686:2697  _nftsSold-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Marketplace.sol\":2709:2777  NFTListed(_nftContract, _tokenId, msg.sender, address(this), _price) */\n      0xa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d19\n        /* \"contracts/Marketplace.sol\":2719:2731  _nftContract */\n      dup5\n        /* \"contracts/Marketplace.sol\":2733:2741  _tokenId */\n      dup5\n        /* \"contracts/Marketplace.sol\":2743:2753  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":2763:2767  this */\n      address\n        /* \"contracts/Marketplace.sol\":2770:2776  _price */\n      dup7\n        /* \"contracts/Marketplace.sol\":2709:2777  NFTListed(_nftContract, _tokenId, msg.sender, address(this), _price) */\n      mload(0x40)\n      tag_107\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Marketplace.sol\":2289:2783  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2455:2475  _nonReentrantAfter() */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2455:2473  _nonReentrantAfter */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2455:2475  _nonReentrantAfter() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/Marketplace.sol\":2186:2783  function resellNft(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":1597:2129  function buyNft(address _nftContract, uint256 _tokenId) public payable nonReentrant {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2411:2432  _nonReentrantBefore() */\n      tag_112\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2411:2430  _nonReentrantBefore */\n      tag_92\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2411:2432  _nonReentrantBefore() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/Marketplace.sol\":1688:1703  NFT storage nft */\n      0x00\n        /* \"contracts/Marketplace.sol\":1706:1714  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":1706:1724  _idToNFT[_tokenId] */\n      0x00\n        /* \"contracts/Marketplace.sol\":1715:1723  _tokenId */\n      dup4\n        /* \"contracts/Marketplace.sol\":1706:1724  _idToNFT[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":1688:1724  NFT storage nft = _idToNFT[_tokenId] */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":1752:1755  nft */\n      dup1\n        /* \"contracts/Marketplace.sol\":1752:1761  nft.price */\n      0x04\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":1739:1748  msg.value */\n      callvalue\n        /* \"contracts/Marketplace.sol\":1739:1761  msg.value >= nft.price */\n      lt\n      iszero\n        /* \"contracts/Marketplace.sol\":1731:1804  require(msg.value >= nft.price, \"Not enough ether to cover asking price\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/Marketplace.sol\":1813:1834  address payable buyer */\n      0x00\n        /* \"contracts/Marketplace.sol\":1845:1855  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":1813:1856  address payable buyer = payable(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":1871:1874  nft */\n      dup2\n        /* \"contracts/Marketplace.sol\":1871:1881  nft.seller */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":1863:1891  payable(nft.seller).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":1863:1902  payable(nft.seller).transfer(msg.value) */\n      0x08fc\n        /* \"contracts/Marketplace.sol\":1892:1901  msg.value */\n      callvalue\n        /* \"contracts/Marketplace.sol\":1863:1902  payable(nft.seller).transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n        /* \"contracts/Marketplace.sol\":1917:1929  _nftContract */\n      dup4\n        /* \"contracts/Marketplace.sol\":1909:1943  IERC721(_nftContract).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Marketplace.sol\":1952:1956  this */\n      address\n        /* \"contracts/Marketplace.sol\":1959:1964  buyer */\n      dup4\n        /* \"contracts/Marketplace.sol\":1966:1969  nft */\n      dup6\n        /* \"contracts/Marketplace.sol\":1966:1977  nft.tokenId */\n      0x01\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":1909:1978  IERC721(_nftContract).transferFrom(address(this), buyer, nft.tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":1997:2002  buyer */\n      dup1\n        /* \"contracts/Marketplace.sol\":1985:1988  nft */\n      dup3\n        /* \"contracts/Marketplace.sol\":1985:1994  nft.owner */\n      0x03\n      add\n      0x00\n        /* \"contracts/Marketplace.sol\":1985:2002  nft.owner = buyer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Marketplace.sol\":2022:2027  false */\n      0x00\n        /* \"contracts/Marketplace.sol\":2009:2012  nft */\n      dup3\n        /* \"contracts/Marketplace.sol\":2009:2019  nft.listed */\n      0x05\n      add\n      0x00\n        /* \"contracts/Marketplace.sol\":2009:2027  nft.listed = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Marketplace.sol\":2036:2045  _nftsSold */\n      0x01\n      0x00\n        /* \"contracts/Marketplace.sol\":2036:2047  _nftsSold++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_124\n      swap1\n      tag_47\n      jump\t// in\n    tag_124:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Marketplace.sol\":2059:2123  NFTSold(_nftContract, nft.tokenId, nft.seller, buyer, msg.value) */\n      0x16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd2\n        /* \"contracts/Marketplace.sol\":2067:2079  _nftContract */\n      dup5\n        /* \"contracts/Marketplace.sol\":2081:2084  nft */\n      dup4\n        /* \"contracts/Marketplace.sol\":2081:2092  nft.tokenId */\n      0x01\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":2094:2097  nft */\n      dup5\n        /* \"contracts/Marketplace.sol\":2094:2104  nft.seller */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":2106:2111  buyer */\n      dup5\n        /* \"contracts/Marketplace.sol\":2113:2122  msg.value */\n      callvalue\n        /* \"contracts/Marketplace.sol\":2059:2123  NFTSold(_nftContract, nft.tokenId, nft.seller, buyer, msg.value) */\n      mload(0x40)\n      tag_125\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Marketplace.sol\":1681:2129  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2455:2475  _nonReentrantAfter() */\n      tag_127\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2455:2473  _nonReentrantAfter */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2455:2475  _nonReentrantAfter() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/Marketplace.sol\":1597:2129  function buyNft(address _nftContract, uint256 _tokenId) public payable nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":2789:3203  function getListedNfts() public view returns (NFT[] memory) {... */\n    tag_34:\n        /* \"contracts/Marketplace.sol\":2835:2847  NFT[] memory */\n      0x60\n        /* \"contracts/Marketplace.sol\":2856:2872  uint256 nftCount */\n      0x00\n        /* \"contracts/Marketplace.sol\":2875:2884  _nftCount */\n      sload(0x02)\n        /* \"contracts/Marketplace.sol\":2856:2884  uint256 nftCount = _nftCount */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":2891:2914  uint256 unsoldNftsCount */\n      0x00\n        /* \"contracts/Marketplace.sol\":2928:2937  _nftsSold */\n      sload(0x01)\n        /* \"contracts/Marketplace.sol\":2917:2925  nftCount */\n      dup3\n        /* \"contracts/Marketplace.sol\":2917:2937  nftCount - _nftsSold */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/Marketplace.sol\":2891:2937  uint256 unsoldNftsCount = nftCount - _nftsSold */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":2946:2963  NFT[] memory nfts */\n      0x00\n        /* \"contracts/Marketplace.sol\":2976:2991  unsoldNftsCount */\n      dup2\n        /* \"contracts/Marketplace.sol\":2966:2992  new NFT[](unsoldNftsCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_131\n      jumpi\n      tag_132\n      tag_50\n      jump\t// in\n    tag_132:\n    tag_131:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_133\n      jumpi\n      dup2\n      0x20\n      add\n    tag_134:\n      tag_135\n      tag_54\n      jump\t// in\n    tag_135:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_134\n      jumpi\n      swap1\n      pop\n    tag_133:\n      pop\n        /* \"contracts/Marketplace.sol\":2946:2992  NFT[] memory nfts = new NFT[](unsoldNftsCount) */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":2999:3013  uint nftsIndex */\n      0x00\n        /* \"contracts/Marketplace.sol\":3029:3035  uint i */\n      dup1\n        /* \"contracts/Marketplace.sol\":3024:3180  for (uint i = 0; i < nftCount; i++) {... */\n    tag_136:\n        /* \"contracts/Marketplace.sol\":3045:3053  nftCount */\n      dup5\n        /* \"contracts/Marketplace.sol\":3041:3042  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":3041:3053  i < nftCount */\n      lt\n        /* \"contracts/Marketplace.sol\":3024:3180  for (uint i = 0; i < nftCount; i++) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"contracts/Marketplace.sol\":3073:3081  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":3073:3088  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":3086:3087  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3082:3083  i */\n      dup4\n        /* \"contracts/Marketplace.sol\":3082:3087  i + 1 */\n      tag_139\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_139:\n        /* \"contracts/Marketplace.sol\":3073:3088  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":3073:3095  _idToNFT[i + 1].listed */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Marketplace.sol\":3069:3173  if (_idToNFT[i + 1].listed) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contracts/Marketplace.sol\":3126:3134  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":3126:3141  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":3139:3140  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3135:3136  i */\n      dup4\n        /* \"contracts/Marketplace.sol\":3135:3140  i + 1 */\n      tag_141\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_141:\n        /* \"contracts/Marketplace.sol\":3126:3141  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":3108:3141  nfts[nftsIndex] = _idToNFT[i + 1] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3108:3112  nfts */\n      dup4\n        /* \"contracts/Marketplace.sol\":3113:3122  nftsIndex */\n      dup4\n        /* \"contracts/Marketplace.sol\":3108:3123  nfts[nftsIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_142\n      jumpi\n      tag_143\n      tag_63\n      jump\t// in\n    tag_143:\n    tag_142:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Marketplace.sol\":3108:3141  nfts[nftsIndex] = _idToNFT[i + 1] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Marketplace.sol\":3152:3163  nftsIndex++ */\n      dup2\n      dup1\n      tag_144\n      swap1\n      tag_47\n      jump\t// in\n    tag_144:\n      swap3\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3069:3173  if (_idToNFT[i + 1].listed) {... */\n    tag_140:\n        /* \"contracts/Marketplace.sol\":3055:3058  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3024:3180  for (uint i = 0; i < nftCount; i++) {... */\n      jump(tag_136)\n    tag_137:\n      pop\n        /* \"contracts/Marketplace.sol\":3193:3197  nfts */\n      dup2\n        /* \"contracts/Marketplace.sol\":3186:3197  return nfts */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":2789:3203  function getListedNfts() public view returns (NFT[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":946:1574  function listNft(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2411:2432  _nonReentrantBefore() */\n      tag_146\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2411:2430  _nonReentrantBefore */\n      tag_92\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2411:2432  _nonReentrantBefore() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/Marketplace.sol\":1071:1072  0 */\n      0x00\n        /* \"contracts/Marketplace.sol\":1062:1068  _price */\n      dup2\n        /* \"contracts/Marketplace.sol\":1062:1072  _price > 0 */\n      gt\n        /* \"contracts/Marketplace.sol\":1054:1105  require(_price > 0, \"Price must be at least 1 wei\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_96\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/Marketplace.sol\":1133:1144  LISTING_FEE */\n      sload(0x03)\n        /* \"contracts/Marketplace.sol\":1120:1129  msg.value */\n      callvalue\n        /* \"contracts/Marketplace.sol\":1120:1144  msg.value == LISTING_FEE */\n      eq\n        /* \"contracts/Marketplace.sol\":1112:1181  require(msg.value == LISTING_FEE, \"Not enough ether for listing fee\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_99\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/Marketplace.sol\":1198:1210  _nftContract */\n      dup3\n        /* \"contracts/Marketplace.sol\":1190:1224  IERC721(_nftContract).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Marketplace.sol\":1225:1235  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":1245:1249  this */\n      address\n        /* \"contracts/Marketplace.sol\":1252:1260  _tokenId */\n      dup6\n        /* \"contracts/Marketplace.sol\":1190:1261  IERC721(_nftContract).transferFrom(msg.sender, address(this), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_152:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":1268:1280  _marketOwner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":1268:1289  _marketOwner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Marketplace.sol\":1268:1302  _marketOwner.transfer(LISTING_FEE) */\n      0x08fc\n        /* \"contracts/Marketplace.sol\":1290:1301  LISTING_FEE */\n      sload(0x03)\n        /* \"contracts/Marketplace.sol\":1268:1302  _marketOwner.transfer(LISTING_FEE) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n        /* \"contracts/Marketplace.sol\":1309:1318  _nftCount */\n      0x02\n      0x00\n        /* \"contracts/Marketplace.sol\":1309:1320  _nftCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_158\n      swap1\n      tag_47\n      jump\t// in\n    tag_158:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Marketplace.sol\":1350:1486  NFT(... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Marketplace.sol\":1362:1374  _nftContract */\n      dup5\n        /* \"contracts/Marketplace.sol\":1350:1486  NFT(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Marketplace.sol\":1383:1391  _tokenId */\n      dup4\n        /* \"contracts/Marketplace.sol\":1350:1486  NFT(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Marketplace.sol\":1409:1419  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":1350:1486  NFT(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Marketplace.sol\":1445:1449  this */\n      address\n        /* \"contracts/Marketplace.sol\":1350:1486  NFT(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Marketplace.sol\":1460:1466  _price */\n      dup3\n        /* \"contracts/Marketplace.sol\":1350:1486  NFT(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Marketplace.sol\":1475:1479  true */\n      0x01\n        /* \"contracts/Marketplace.sol\":1350:1486  NFT(... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Marketplace.sol\":1329:1337  _idToNFT */\n      0x05\n        /* \"contracts/Marketplace.sol\":1329:1347  _idToNFT[_tokenId] */\n      0x00\n        /* \"contracts/Marketplace.sol\":1338:1346  _tokenId */\n      dup5\n        /* \"contracts/Marketplace.sol\":1329:1347  _idToNFT[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":1329:1486  _idToNFT[_tokenId] = NFT(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":1500:1568  NFTListed(_nftContract, _tokenId, msg.sender, address(this), _price) */\n      0xa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d19\n        /* \"contracts/Marketplace.sol\":1510:1522  _nftContract */\n      dup4\n        /* \"contracts/Marketplace.sol\":1524:1532  _tokenId */\n      dup4\n        /* \"contracts/Marketplace.sol\":1534:1544  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":1554:1558  this */\n      address\n        /* \"contracts/Marketplace.sol\":1561:1567  _price */\n      dup6\n        /* \"contracts/Marketplace.sol\":1500:1568  NFTListed(_nftContract, _tokenId, msg.sender, address(this), _price) */\n      mload(0x40)\n      tag_159\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2455:2475  _nonReentrantAfter() */\n      tag_160\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2455:2473  _nonReentrantAfter */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2455:2475  _nonReentrantAfter() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/Marketplace.sol\":946:1574  function listNft(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2491:2806  function _nonReentrantBefore() private {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1789:1790  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2620:2627  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2620:2638  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2616:2704  if (_status == ENTERED) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2662:2692  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2616:2704  if (_status == ENTERED) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1789:1790  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2781:2788  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2781:2798  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2491:2806  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2814:3026  function _nonReentrantAfter() private {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1746:1747  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2997:3004  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2997:3018  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2814:3026  function _nonReentrantAfter() private {... */\n      jump\t// out\n    tag_54:\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:142   */\n    tag_164:\n        /* \"#utility.yul\":95:101   */\n      0x00\n        /* \"#utility.yul\":129:134   */\n      dup2\n        /* \"#utility.yul\":123:135   */\n      mload\n        /* \"#utility.yul\":113:135   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":148:353   */\n    tag_165:\n        /* \"#utility.yul\":268:279   */\n      0x00\n        /* \"#utility.yul\":302:308   */\n      dup3\n        /* \"#utility.yul\":297:300   */\n      dup3\n        /* \"#utility.yul\":290:309   */\n      mstore\n        /* \"#utility.yul\":342:346   */\n      0x20\n        /* \"#utility.yul\":337:340   */\n      dup3\n        /* \"#utility.yul\":333:347   */\n      add\n        /* \"#utility.yul\":318:347   */\n      swap1\n      pop\n        /* \"#utility.yul\":148:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:512   */\n    tag_166:\n        /* \"#utility.yul\":447:451   */\n      0x00\n        /* \"#utility.yul\":470:473   */\n      dup2\n        /* \"#utility.yul\":462:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":500:504   */\n      0x20\n        /* \"#utility.yul\":495:498   */\n      dup3\n        /* \"#utility.yul\":491:505   */\n      add\n        /* \"#utility.yul\":483:505   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":518:644   */\n    tag_167:\n        /* \"#utility.yul\":555:562   */\n      0x00\n        /* \"#utility.yul\":595:637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":588:593   */\n      dup3\n        /* \"#utility.yul\":584:638   */\n      and\n        /* \"#utility.yul\":573:638   */\n      swap1\n      pop\n        /* \"#utility.yul\":518:644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":650:746   */\n    tag_168:\n        /* \"#utility.yul\":687:694   */\n      0x00\n        /* \"#utility.yul\":716:740   */\n      tag_208\n        /* \"#utility.yul\":734:739   */\n      dup3\n        /* \"#utility.yul\":716:740   */\n      tag_167\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":705:740   */\n      swap1\n      pop\n        /* \"#utility.yul\":650:746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:860   */\n    tag_169:\n        /* \"#utility.yul\":829:853   */\n      tag_210\n        /* \"#utility.yul\":847:852   */\n      dup2\n        /* \"#utility.yul\":829:853   */\n      tag_168\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":824:827   */\n      dup3\n        /* \"#utility.yul\":817:854   */\n      mstore\n        /* \"#utility.yul\":752:860   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":866:943   */\n    tag_170:\n        /* \"#utility.yul\":903:910   */\n      0x00\n        /* \"#utility.yul\":932:937   */\n      dup2\n        /* \"#utility.yul\":921:937   */\n      swap1\n      pop\n        /* \"#utility.yul\":866:943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":949:1057   */\n    tag_171:\n        /* \"#utility.yul\":1026:1050   */\n      tag_213\n        /* \"#utility.yul\":1044:1049   */\n      dup2\n        /* \"#utility.yul\":1026:1050   */\n      tag_170\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1021:1024   */\n      dup3\n        /* \"#utility.yul\":1014:1051   */\n      mstore\n        /* \"#utility.yul\":949:1057   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1063:1167   */\n    tag_172:\n        /* \"#utility.yul\":1108:1115   */\n      0x00\n        /* \"#utility.yul\":1137:1161   */\n      tag_215\n        /* \"#utility.yul\":1155:1160   */\n      dup3\n        /* \"#utility.yul\":1137:1161   */\n      tag_167\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1126:1161   */\n      swap1\n      pop\n        /* \"#utility.yul\":1063:1167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1305   */\n    tag_173:\n        /* \"#utility.yul\":1266:1298   */\n      tag_217\n        /* \"#utility.yul\":1292:1297   */\n      dup2\n        /* \"#utility.yul\":1266:1298   */\n      tag_172\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1261:1264   */\n      dup3\n        /* \"#utility.yul\":1254:1299   */\n      mstore\n        /* \"#utility.yul\":1173:1305   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1311:1401   */\n    tag_174:\n        /* \"#utility.yul\":1345:1352   */\n      0x00\n        /* \"#utility.yul\":1388:1393   */\n      dup2\n        /* \"#utility.yul\":1381:1394   */\n      iszero\n        /* \"#utility.yul\":1374:1395   */\n      iszero\n        /* \"#utility.yul\":1363:1395   */\n      swap1\n      pop\n        /* \"#utility.yul\":1311:1401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1407:1506   */\n    tag_175:\n        /* \"#utility.yul\":1478:1499   */\n      tag_220\n        /* \"#utility.yul\":1493:1498   */\n      dup2\n        /* \"#utility.yul\":1478:1499   */\n      tag_174\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1473:1476   */\n      dup3\n        /* \"#utility.yul\":1466:1500   */\n      mstore\n        /* \"#utility.yul\":1407:1506   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1568:2795   */\n    tag_176:\n        /* \"#utility.yul\":1697:1701   */\n      0xc0\n        /* \"#utility.yul\":1692:1695   */\n      dup3\n        /* \"#utility.yul\":1688:1702   */\n      add\n        /* \"#utility.yul\":1791:1795   */\n      0x00\n        /* \"#utility.yul\":1784:1789   */\n      dup3\n        /* \"#utility.yul\":1780:1796   */\n      add\n        /* \"#utility.yul\":1774:1797   */\n      mload\n        /* \"#utility.yul\":1810:1873   */\n      tag_222\n        /* \"#utility.yul\":1867:1871   */\n      0x00\n        /* \"#utility.yul\":1862:1865   */\n      dup6\n        /* \"#utility.yul\":1858:1872   */\n      add\n        /* \"#utility.yul\":1844:1856   */\n      dup3\n        /* \"#utility.yul\":1810:1873   */\n      tag_169\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1712:1883   */\n      pop\n        /* \"#utility.yul\":1968:1972   */\n      0x20\n        /* \"#utility.yul\":1961:1966   */\n      dup3\n        /* \"#utility.yul\":1957:1973   */\n      add\n        /* \"#utility.yul\":1951:1974   */\n      mload\n        /* \"#utility.yul\":1987:2050   */\n      tag_223\n        /* \"#utility.yul\":2044:2048   */\n      0x20\n        /* \"#utility.yul\":2039:2042   */\n      dup6\n        /* \"#utility.yul\":2035:2049   */\n      add\n        /* \"#utility.yul\":2021:2033   */\n      dup3\n        /* \"#utility.yul\":1987:2050   */\n      tag_171\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1893:2060   */\n      pop\n        /* \"#utility.yul\":2144:2148   */\n      0x40\n        /* \"#utility.yul\":2137:2142   */\n      dup3\n        /* \"#utility.yul\":2133:2149   */\n      add\n        /* \"#utility.yul\":2127:2150   */\n      mload\n        /* \"#utility.yul\":2163:2242   */\n      tag_224\n        /* \"#utility.yul\":2236:2240   */\n      0x40\n        /* \"#utility.yul\":2231:2234   */\n      dup6\n        /* \"#utility.yul\":2227:2241   */\n      add\n        /* \"#utility.yul\":2213:2225   */\n      dup3\n        /* \"#utility.yul\":2163:2242   */\n      tag_173\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2070:2252   */\n      pop\n        /* \"#utility.yul\":2335:2339   */\n      0x60\n        /* \"#utility.yul\":2328:2333   */\n      dup3\n        /* \"#utility.yul\":2324:2340   */\n      add\n        /* \"#utility.yul\":2318:2341   */\n      mload\n        /* \"#utility.yul\":2354:2433   */\n      tag_225\n        /* \"#utility.yul\":2427:2431   */\n      0x60\n        /* \"#utility.yul\":2422:2425   */\n      dup6\n        /* \"#utility.yul\":2418:2432   */\n      add\n        /* \"#utility.yul\":2404:2416   */\n      dup3\n        /* \"#utility.yul\":2354:2433   */\n      tag_173\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2262:2443   */\n      pop\n        /* \"#utility.yul\":2526:2530   */\n      0x80\n        /* \"#utility.yul\":2519:2524   */\n      dup3\n        /* \"#utility.yul\":2515:2531   */\n      add\n        /* \"#utility.yul\":2509:2532   */\n      mload\n        /* \"#utility.yul\":2545:2608   */\n      tag_226\n        /* \"#utility.yul\":2602:2606   */\n      0x80\n        /* \"#utility.yul\":2597:2600   */\n      dup6\n        /* \"#utility.yul\":2593:2607   */\n      add\n        /* \"#utility.yul\":2579:2591   */\n      dup3\n        /* \"#utility.yul\":2545:2608   */\n      tag_171\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2453:2618   */\n      pop\n        /* \"#utility.yul\":2702:2706   */\n      0xa0\n        /* \"#utility.yul\":2695:2700   */\n      dup3\n        /* \"#utility.yul\":2691:2707   */\n      add\n        /* \"#utility.yul\":2685:2708   */\n      mload\n        /* \"#utility.yul\":2721:2778   */\n      tag_227\n        /* \"#utility.yul\":2772:2776   */\n      0xa0\n        /* \"#utility.yul\":2767:2770   */\n      dup6\n        /* \"#utility.yul\":2763:2777   */\n      add\n        /* \"#utility.yul\":2749:2761   */\n      dup3\n        /* \"#utility.yul\":2721:2778   */\n      tag_175\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2628:2788   */\n      pop\n        /* \"#utility.yul\":1666:2795   */\n      pop\n        /* \"#utility.yul\":1568:2795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2801:3064   */\n    tag_177:\n        /* \"#utility.yul\":2912:2922   */\n      0x00\n        /* \"#utility.yul\":2933:3021   */\n      tag_229\n        /* \"#utility.yul\":3017:3020   */\n      dup4\n        /* \"#utility.yul\":3009:3015   */\n      dup4\n        /* \"#utility.yul\":2933:3021   */\n      tag_176\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3053:3057   */\n      0xc0\n        /* \"#utility.yul\":3048:3051   */\n      dup4\n        /* \"#utility.yul\":3044:3058   */\n      add\n        /* \"#utility.yul\":3030:3058   */\n      swap1\n      pop\n        /* \"#utility.yul\":2801:3064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3070:3204   */\n    tag_178:\n        /* \"#utility.yul\":3161:3165   */\n      0x00\n        /* \"#utility.yul\":3193:3197   */\n      0x20\n        /* \"#utility.yul\":3188:3191   */\n      dup3\n        /* \"#utility.yul\":3184:3198   */\n      add\n        /* \"#utility.yul\":3176:3198   */\n      swap1\n      pop\n        /* \"#utility.yul\":3070:3204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3270:4170   */\n    tag_179:\n        /* \"#utility.yul\":3431:3434   */\n      0x00\n        /* \"#utility.yul\":3460:3535   */\n      tag_232\n        /* \"#utility.yul\":3529:3534   */\n      dup3\n        /* \"#utility.yul\":3460:3535   */\n      tag_164\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3551:3658   */\n      tag_233\n        /* \"#utility.yul\":3651:3657   */\n      dup2\n        /* \"#utility.yul\":3646:3649   */\n      dup6\n        /* \"#utility.yul\":3551:3658   */\n      tag_165\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3544:3658   */\n      swap4\n      pop\n        /* \"#utility.yul\":3682:3759   */\n      tag_234\n        /* \"#utility.yul\":3753:3758   */\n      dup4\n        /* \"#utility.yul\":3682:3759   */\n      tag_166\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3782:3789   */\n      dup1\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3798:4145   */\n    tag_235:\n        /* \"#utility.yul\":3823:3829   */\n      dup4\n        /* \"#utility.yul\":3820:3821   */\n      dup2\n        /* \"#utility.yul\":3817:3830   */\n      lt\n        /* \"#utility.yul\":3798:4145   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":3899:3905   */\n      dup2\n        /* \"#utility.yul\":3893:3906   */\n      mload\n        /* \"#utility.yul\":3926:4031   */\n      tag_238\n        /* \"#utility.yul\":4027:4030   */\n      dup9\n        /* \"#utility.yul\":4012:4025   */\n      dup3\n        /* \"#utility.yul\":3926:4031   */\n      tag_177\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3919:4031   */\n      swap8\n      pop\n        /* \"#utility.yul\":4054:4135   */\n      tag_239\n        /* \"#utility.yul\":4128:4134   */\n      dup4\n        /* \"#utility.yul\":4054:4135   */\n      tag_178\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4044:4135   */\n      swap3\n      pop\n        /* \"#utility.yul\":3858:4145   */\n      pop\n        /* \"#utility.yul\":3845:3846   */\n      0x01\n        /* \"#utility.yul\":3842:3843   */\n      dup2\n        /* \"#utility.yul\":3838:3847   */\n      add\n        /* \"#utility.yul\":3833:3847   */\n      swap1\n      pop\n        /* \"#utility.yul\":3798:4145   */\n      jump(tag_235)\n    tag_237:\n        /* \"#utility.yul\":3802:3816   */\n      pop\n        /* \"#utility.yul\":4161:4164   */\n      dup6\n        /* \"#utility.yul\":4154:4164   */\n      swap4\n      pop\n        /* \"#utility.yul\":3436:4170   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3270:4170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4176:4633   */\n    tag_14:\n        /* \"#utility.yul\":4361:4365   */\n      0x00\n        /* \"#utility.yul\":4399:4401   */\n      0x20\n        /* \"#utility.yul\":4388:4397   */\n      dup3\n        /* \"#utility.yul\":4384:4402   */\n      add\n        /* \"#utility.yul\":4376:4402   */\n      swap1\n      pop\n        /* \"#utility.yul\":4448:4457   */\n      dup2\n        /* \"#utility.yul\":4442:4446   */\n      dup2\n        /* \"#utility.yul\":4438:4458   */\n      sub\n        /* \"#utility.yul\":4434:4435   */\n      0x00\n        /* \"#utility.yul\":4423:4432   */\n      dup4\n        /* \"#utility.yul\":4419:4436   */\n      add\n        /* \"#utility.yul\":4412:4459   */\n      mstore\n        /* \"#utility.yul\":4476:4626   */\n      tag_241\n        /* \"#utility.yul\":4621:4625   */\n      dup2\n        /* \"#utility.yul\":4612:4618   */\n      dup5\n        /* \"#utility.yul\":4476:4626   */\n      tag_179\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4468:4626   */\n      swap1\n      pop\n        /* \"#utility.yul\":4176:4633   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4639:4757   */\n    tag_180:\n        /* \"#utility.yul\":4726:4750   */\n      tag_243\n        /* \"#utility.yul\":4744:4749   */\n      dup2\n        /* \"#utility.yul\":4726:4750   */\n      tag_170\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4721:4724   */\n      dup3\n        /* \"#utility.yul\":4714:4751   */\n      mstore\n        /* \"#utility.yul\":4639:4757   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4763:4985   */\n    tag_23:\n        /* \"#utility.yul\":4856:4860   */\n      0x00\n        /* \"#utility.yul\":4894:4896   */\n      0x20\n        /* \"#utility.yul\":4883:4892   */\n      dup3\n        /* \"#utility.yul\":4879:4897   */\n      add\n        /* \"#utility.yul\":4871:4897   */\n      swap1\n      pop\n        /* \"#utility.yul\":4907:4978   */\n      tag_245\n        /* \"#utility.yul\":4975:4976   */\n      0x00\n        /* \"#utility.yul\":4964:4973   */\n      dup4\n        /* \"#utility.yul\":4960:4977   */\n      add\n        /* \"#utility.yul\":4951:4957   */\n      dup5\n        /* \"#utility.yul\":4907:4978   */\n      tag_180\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4763:4985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5072:5189   */\n    tag_182:\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5178:5179   */\n      dup1\n        /* \"#utility.yul\":5171:5183   */\n      revert\n        /* \"#utility.yul\":5318:5440   */\n    tag_184:\n        /* \"#utility.yul\":5391:5415   */\n      tag_250\n        /* \"#utility.yul\":5409:5414   */\n      dup2\n        /* \"#utility.yul\":5391:5415   */\n      tag_168\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5384:5389   */\n      dup2\n        /* \"#utility.yul\":5381:5416   */\n      eq\n        /* \"#utility.yul\":5371:5434   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":5430:5431   */\n      0x00\n        /* \"#utility.yul\":5427:5428   */\n      dup1\n        /* \"#utility.yul\":5420:5432   */\n      revert\n        /* \"#utility.yul\":5371:5434   */\n    tag_251:\n        /* \"#utility.yul\":5318:5440   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5446:5585   */\n    tag_185:\n        /* \"#utility.yul\":5492:5497   */\n      0x00\n        /* \"#utility.yul\":5530:5536   */\n      dup2\n        /* \"#utility.yul\":5517:5537   */\n      calldataload\n        /* \"#utility.yul\":5508:5537   */\n      swap1\n      pop\n        /* \"#utility.yul\":5546:5579   */\n      tag_253\n        /* \"#utility.yul\":5573:5578   */\n      dup2\n        /* \"#utility.yul\":5546:5579   */\n      tag_184\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5446:5585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5591:5713   */\n    tag_186:\n        /* \"#utility.yul\":5664:5688   */\n      tag_255\n        /* \"#utility.yul\":5682:5687   */\n      dup2\n        /* \"#utility.yul\":5664:5688   */\n      tag_170\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5657:5662   */\n      dup2\n        /* \"#utility.yul\":5654:5689   */\n      eq\n        /* \"#utility.yul\":5644:5707   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":5703:5704   */\n      0x00\n        /* \"#utility.yul\":5700:5701   */\n      dup1\n        /* \"#utility.yul\":5693:5705   */\n      revert\n        /* \"#utility.yul\":5644:5707   */\n    tag_256:\n        /* \"#utility.yul\":5591:5713   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5719:5858   */\n    tag_187:\n        /* \"#utility.yul\":5765:5770   */\n      0x00\n        /* \"#utility.yul\":5803:5809   */\n      dup2\n        /* \"#utility.yul\":5790:5810   */\n      calldataload\n        /* \"#utility.yul\":5781:5810   */\n      swap1\n      pop\n        /* \"#utility.yul\":5819:5852   */\n      tag_258\n        /* \"#utility.yul\":5846:5851   */\n      dup2\n        /* \"#utility.yul\":5819:5852   */\n      tag_186\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5719:5858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5864:6483   */\n    tag_26:\n        /* \"#utility.yul\":5941:5947   */\n      0x00\n        /* \"#utility.yul\":5949:5955   */\n      dup1\n        /* \"#utility.yul\":5957:5963   */\n      0x00\n        /* \"#utility.yul\":6006:6008   */\n      0x60\n        /* \"#utility.yul\":5994:6003   */\n      dup5\n        /* \"#utility.yul\":5985:5992   */\n      dup7\n        /* \"#utility.yul\":5981:6004   */\n      sub\n        /* \"#utility.yul\":5977:6009   */\n      slt\n        /* \"#utility.yul\":5974:6093   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":6012:6091   */\n      tag_261\n      tag_182\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5974:6093   */\n    tag_260:\n        /* \"#utility.yul\":6132:6133   */\n      0x00\n        /* \"#utility.yul\":6157:6210   */\n      tag_262\n        /* \"#utility.yul\":6202:6209   */\n      dup7\n        /* \"#utility.yul\":6193:6199   */\n      dup3\n        /* \"#utility.yul\":6182:6191   */\n      dup8\n        /* \"#utility.yul\":6178:6200   */\n      add\n        /* \"#utility.yul\":6157:6210   */\n      tag_185\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6147:6210   */\n      swap4\n      pop\n        /* \"#utility.yul\":6103:6220   */\n      pop\n        /* \"#utility.yul\":6259:6261   */\n      0x20\n        /* \"#utility.yul\":6285:6338   */\n      tag_263\n        /* \"#utility.yul\":6330:6337   */\n      dup7\n        /* \"#utility.yul\":6321:6327   */\n      dup3\n        /* \"#utility.yul\":6310:6319   */\n      dup8\n        /* \"#utility.yul\":6306:6328   */\n      add\n        /* \"#utility.yul\":6285:6338   */\n      tag_187\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6275:6338   */\n      swap3\n      pop\n        /* \"#utility.yul\":6230:6348   */\n      pop\n        /* \"#utility.yul\":6387:6389   */\n      0x40\n        /* \"#utility.yul\":6413:6466   */\n      tag_264\n        /* \"#utility.yul\":6458:6465   */\n      dup7\n        /* \"#utility.yul\":6449:6455   */\n      dup3\n        /* \"#utility.yul\":6438:6447   */\n      dup8\n        /* \"#utility.yul\":6434:6456   */\n      add\n        /* \"#utility.yul\":6413:6466   */\n      tag_187\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6403:6466   */\n      swap2\n      pop\n        /* \"#utility.yul\":6358:6476   */\n      pop\n        /* \"#utility.yul\":5864:6483   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6489:6963   */\n    tag_30:\n        /* \"#utility.yul\":6557:6563   */\n      0x00\n        /* \"#utility.yul\":6565:6571   */\n      dup1\n        /* \"#utility.yul\":6614:6616   */\n      0x40\n        /* \"#utility.yul\":6602:6611   */\n      dup4\n        /* \"#utility.yul\":6593:6600   */\n      dup6\n        /* \"#utility.yul\":6589:6612   */\n      sub\n        /* \"#utility.yul\":6585:6617   */\n      slt\n        /* \"#utility.yul\":6582:6701   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":6620:6699   */\n      tag_267\n      tag_182\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6582:6701   */\n    tag_266:\n        /* \"#utility.yul\":6740:6741   */\n      0x00\n        /* \"#utility.yul\":6765:6818   */\n      tag_268\n        /* \"#utility.yul\":6810:6817   */\n      dup6\n        /* \"#utility.yul\":6801:6807   */\n      dup3\n        /* \"#utility.yul\":6790:6799   */\n      dup7\n        /* \"#utility.yul\":6786:6808   */\n      add\n        /* \"#utility.yul\":6765:6818   */\n      tag_185\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6755:6818   */\n      swap3\n      pop\n        /* \"#utility.yul\":6711:6828   */\n      pop\n        /* \"#utility.yul\":6867:6869   */\n      0x20\n        /* \"#utility.yul\":6893:6946   */\n      tag_269\n        /* \"#utility.yul\":6938:6945   */\n      dup6\n        /* \"#utility.yul\":6929:6935   */\n      dup3\n        /* \"#utility.yul\":6918:6927   */\n      dup7\n        /* \"#utility.yul\":6914:6936   */\n      add\n        /* \"#utility.yul\":6893:6946   */\n      tag_187\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6883:6946   */\n      swap2\n      pop\n        /* \"#utility.yul\":6838:6956   */\n      pop\n        /* \"#utility.yul\":6489:6963   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6969:7149   */\n    tag_188:\n        /* \"#utility.yul\":7017:7094   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7014:7015   */\n      0x00\n        /* \"#utility.yul\":7007:7095   */\n      mstore\n        /* \"#utility.yul\":7114:7118   */\n      0x11\n        /* \"#utility.yul\":7111:7112   */\n      0x04\n        /* \"#utility.yul\":7104:7119   */\n      mstore\n        /* \"#utility.yul\":7138:7142   */\n      0x24\n        /* \"#utility.yul\":7135:7136   */\n      0x00\n        /* \"#utility.yul\":7128:7143   */\n      revert\n        /* \"#utility.yul\":7155:7346   */\n    tag_44:\n        /* \"#utility.yul\":7195:7198   */\n      0x00\n        /* \"#utility.yul\":7214:7234   */\n      tag_272\n        /* \"#utility.yul\":7232:7233   */\n      dup3\n        /* \"#utility.yul\":7214:7234   */\n      tag_170\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7209:7234   */\n      swap2\n      pop\n        /* \"#utility.yul\":7248:7268   */\n      tag_273\n        /* \"#utility.yul\":7266:7267   */\n      dup4\n        /* \"#utility.yul\":7248:7268   */\n      tag_170\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7243:7268   */\n      swap3\n      pop\n        /* \"#utility.yul\":7291:7292   */\n      dup3\n        /* \"#utility.yul\":7288:7289   */\n      dup3\n        /* \"#utility.yul\":7284:7293   */\n      add\n        /* \"#utility.yul\":7277:7293   */\n      swap1\n      pop\n        /* \"#utility.yul\":7312:7315   */\n      dup1\n        /* \"#utility.yul\":7309:7310   */\n      dup3\n        /* \"#utility.yul\":7306:7316   */\n      gt\n        /* \"#utility.yul\":7303:7339   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":7319:7337   */\n      tag_275\n      tag_188\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7303:7339   */\n    tag_274:\n        /* \"#utility.yul\":7155:7346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7352:7585   */\n    tag_47:\n        /* \"#utility.yul\":7391:7394   */\n      0x00\n        /* \"#utility.yul\":7414:7438   */\n      tag_277\n        /* \"#utility.yul\":7432:7437   */\n      dup3\n        /* \"#utility.yul\":7414:7438   */\n      tag_170\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":7405:7438   */\n      swap2\n      pop\n        /* \"#utility.yul\":7460:7526   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7453:7458   */\n      dup3\n        /* \"#utility.yul\":7450:7527   */\n      sub\n        /* \"#utility.yul\":7447:7550   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":7530:7548   */\n      tag_279\n      tag_188\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7447:7550   */\n    tag_278:\n        /* \"#utility.yul\":7577:7578   */\n      0x01\n        /* \"#utility.yul\":7570:7575   */\n      dup3\n        /* \"#utility.yul\":7566:7579   */\n      add\n        /* \"#utility.yul\":7559:7579   */\n      swap1\n      pop\n        /* \"#utility.yul\":7352:7585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7591:7771   */\n    tag_50:\n        /* \"#utility.yul\":7639:7716   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7636:7637   */\n      0x00\n        /* \"#utility.yul\":7629:7717   */\n      mstore\n        /* \"#utility.yul\":7736:7740   */\n      0x41\n        /* \"#utility.yul\":7733:7734   */\n      0x04\n        /* \"#utility.yul\":7726:7741   */\n      mstore\n        /* \"#utility.yul\":7760:7764   */\n      0x24\n        /* \"#utility.yul\":7757:7758   */\n      0x00\n        /* \"#utility.yul\":7750:7765   */\n      revert\n        /* \"#utility.yul\":7777:7957   */\n    tag_63:\n        /* \"#utility.yul\":7825:7902   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7822:7823   */\n      0x00\n        /* \"#utility.yul\":7815:7903   */\n      mstore\n        /* \"#utility.yul\":7922:7926   */\n      0x32\n        /* \"#utility.yul\":7919:7920   */\n      0x04\n        /* \"#utility.yul\":7912:7927   */\n      mstore\n        /* \"#utility.yul\":7946:7950   */\n      0x24\n        /* \"#utility.yul\":7943:7944   */\n      0x00\n        /* \"#utility.yul\":7936:7951   */\n      revert\n        /* \"#utility.yul\":7963:8132   */\n    tag_189:\n        /* \"#utility.yul\":8047:8058   */\n      0x00\n        /* \"#utility.yul\":8081:8087   */\n      dup3\n        /* \"#utility.yul\":8076:8079   */\n      dup3\n        /* \"#utility.yul\":8069:8088   */\n      mstore\n        /* \"#utility.yul\":8121:8125   */\n      0x20\n        /* \"#utility.yul\":8116:8119   */\n      dup3\n        /* \"#utility.yul\":8112:8126   */\n      add\n        /* \"#utility.yul\":8097:8126   */\n      swap1\n      pop\n        /* \"#utility.yul\":7963:8132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8138:8316   */\n    tag_190:\n        /* \"#utility.yul\":8278:8308   */\n      0x5072696365206d757374206265206174206c6561737420312077656900000000\n        /* \"#utility.yul\":8274:8275   */\n      0x00\n        /* \"#utility.yul\":8266:8272   */\n      dup3\n        /* \"#utility.yul\":8262:8276   */\n      add\n        /* \"#utility.yul\":8255:8309   */\n      mstore\n        /* \"#utility.yul\":8138:8316   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8322:8688   */\n    tag_191:\n        /* \"#utility.yul\":8464:8467   */\n      0x00\n        /* \"#utility.yul\":8485:8552   */\n      tag_285\n        /* \"#utility.yul\":8549:8551   */\n      0x1c\n        /* \"#utility.yul\":8544:8547   */\n      dup4\n        /* \"#utility.yul\":8485:8552   */\n      tag_189\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8478:8552   */\n      swap2\n      pop\n        /* \"#utility.yul\":8561:8654   */\n      tag_286\n        /* \"#utility.yul\":8650:8653   */\n      dup3\n        /* \"#utility.yul\":8561:8654   */\n      tag_190\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8679:8681   */\n      0x20\n        /* \"#utility.yul\":8674:8677   */\n      dup3\n        /* \"#utility.yul\":8670:8682   */\n      add\n        /* \"#utility.yul\":8663:8682   */\n      swap1\n      pop\n        /* \"#utility.yul\":8322:8688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8694:9113   */\n    tag_96:\n        /* \"#utility.yul\":8860:8864   */\n      0x00\n        /* \"#utility.yul\":8898:8900   */\n      0x20\n        /* \"#utility.yul\":8887:8896   */\n      dup3\n        /* \"#utility.yul\":8883:8901   */\n      add\n        /* \"#utility.yul\":8875:8901   */\n      swap1\n      pop\n        /* \"#utility.yul\":8947:8956   */\n      dup2\n        /* \"#utility.yul\":8941:8945   */\n      dup2\n        /* \"#utility.yul\":8937:8957   */\n      sub\n        /* \"#utility.yul\":8933:8934   */\n      0x00\n        /* \"#utility.yul\":8922:8931   */\n      dup4\n        /* \"#utility.yul\":8918:8935   */\n      add\n        /* \"#utility.yul\":8911:8958   */\n      mstore\n        /* \"#utility.yul\":8975:9106   */\n      tag_288\n        /* \"#utility.yul\":9101:9105   */\n      dup2\n        /* \"#utility.yul\":8975:9106   */\n      tag_191\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":8967:9106   */\n      swap1\n      pop\n        /* \"#utility.yul\":8694:9113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9119:9301   */\n    tag_192:\n        /* \"#utility.yul\":9259:9293   */\n      0x4e6f7420656e6f75676820657468657220666f72206c697374696e6720666565\n        /* \"#utility.yul\":9255:9256   */\n      0x00\n        /* \"#utility.yul\":9247:9253   */\n      dup3\n        /* \"#utility.yul\":9243:9257   */\n      add\n        /* \"#utility.yul\":9236:9294   */\n      mstore\n        /* \"#utility.yul\":9119:9301   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9307:9673   */\n    tag_193:\n        /* \"#utility.yul\":9449:9452   */\n      0x00\n        /* \"#utility.yul\":9470:9537   */\n      tag_291\n        /* \"#utility.yul\":9534:9536   */\n      0x20\n        /* \"#utility.yul\":9529:9532   */\n      dup4\n        /* \"#utility.yul\":9470:9537   */\n      tag_189\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9463:9537   */\n      swap2\n      pop\n        /* \"#utility.yul\":9546:9639   */\n      tag_292\n        /* \"#utility.yul\":9635:9638   */\n      dup3\n        /* \"#utility.yul\":9546:9639   */\n      tag_192\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":9664:9666   */\n      0x20\n        /* \"#utility.yul\":9659:9662   */\n      dup3\n        /* \"#utility.yul\":9655:9667   */\n      add\n        /* \"#utility.yul\":9648:9667   */\n      swap1\n      pop\n        /* \"#utility.yul\":9307:9673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9679:10098   */\n    tag_99:\n        /* \"#utility.yul\":9845:9849   */\n      0x00\n        /* \"#utility.yul\":9883:9885   */\n      0x20\n        /* \"#utility.yul\":9872:9881   */\n      dup3\n        /* \"#utility.yul\":9868:9886   */\n      add\n        /* \"#utility.yul\":9860:9886   */\n      swap1\n      pop\n        /* \"#utility.yul\":9932:9941   */\n      dup2\n        /* \"#utility.yul\":9926:9930   */\n      dup2\n        /* \"#utility.yul\":9922:9942   */\n      sub\n        /* \"#utility.yul\":9918:9919   */\n      0x00\n        /* \"#utility.yul\":9907:9916   */\n      dup4\n        /* \"#utility.yul\":9903:9920   */\n      add\n        /* \"#utility.yul\":9896:9943   */\n      mstore\n        /* \"#utility.yul\":9960:10091   */\n      tag_294\n        /* \"#utility.yul\":10086:10090   */\n      dup2\n        /* \"#utility.yul\":9960:10091   */\n      tag_193\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":9952:10091   */\n      swap1\n      pop\n        /* \"#utility.yul\":9679:10098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10104:10222   */\n    tag_194:\n        /* \"#utility.yul\":10191:10215   */\n      tag_296\n        /* \"#utility.yul\":10209:10214   */\n      dup2\n        /* \"#utility.yul\":10191:10215   */\n      tag_168\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":10186:10189   */\n      dup3\n        /* \"#utility.yul\":10179:10216   */\n      mstore\n        /* \"#utility.yul\":10104:10222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10228:10670   */\n    tag_101:\n        /* \"#utility.yul\":10377:10381   */\n      0x00\n        /* \"#utility.yul\":10415:10417   */\n      0x60\n        /* \"#utility.yul\":10404:10413   */\n      dup3\n        /* \"#utility.yul\":10400:10418   */\n      add\n        /* \"#utility.yul\":10392:10418   */\n      swap1\n      pop\n        /* \"#utility.yul\":10428:10499   */\n      tag_298\n        /* \"#utility.yul\":10496:10497   */\n      0x00\n        /* \"#utility.yul\":10485:10494   */\n      dup4\n        /* \"#utility.yul\":10481:10498   */\n      add\n        /* \"#utility.yul\":10472:10478   */\n      dup7\n        /* \"#utility.yul\":10428:10499   */\n      tag_194\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10509:10581   */\n      tag_299\n        /* \"#utility.yul\":10577:10579   */\n      0x20\n        /* \"#utility.yul\":10566:10575   */\n      dup4\n        /* \"#utility.yul\":10562:10580   */\n      add\n        /* \"#utility.yul\":10553:10559   */\n      dup6\n        /* \"#utility.yul\":10509:10581   */\n      tag_194\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":10591:10663   */\n      tag_300\n        /* \"#utility.yul\":10659:10661   */\n      0x40\n        /* \"#utility.yul\":10648:10657   */\n      dup4\n        /* \"#utility.yul\":10644:10662   */\n      add\n        /* \"#utility.yul\":10635:10641   */\n      dup5\n        /* \"#utility.yul\":10591:10663   */\n      tag_180\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":10228:10670   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10676:10847   */\n    tag_106:\n        /* \"#utility.yul\":10715:10718   */\n      0x00\n        /* \"#utility.yul\":10738:10762   */\n      tag_302\n        /* \"#utility.yul\":10756:10761   */\n      dup3\n        /* \"#utility.yul\":10738:10762   */\n      tag_170\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10729:10762   */\n      swap2\n      pop\n        /* \"#utility.yul\":10784:10788   */\n      0x00\n        /* \"#utility.yul\":10777:10782   */\n      dup3\n        /* \"#utility.yul\":10774:10789   */\n      sub\n        /* \"#utility.yul\":10771:10812   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":10792:10810   */\n      tag_304\n      tag_188\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":10771:10812   */\n    tag_303:\n        /* \"#utility.yul\":10839:10840   */\n      0x01\n        /* \"#utility.yul\":10832:10837   */\n      dup3\n        /* \"#utility.yul\":10828:10841   */\n      sub\n        /* \"#utility.yul\":10821:10841   */\n      swap1\n      pop\n        /* \"#utility.yul\":10676:10847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10853:11517   */\n    tag_108:\n        /* \"#utility.yul\":11058:11062   */\n      0x00\n        /* \"#utility.yul\":11096:11099   */\n      0xa0\n        /* \"#utility.yul\":11085:11094   */\n      dup3\n        /* \"#utility.yul\":11081:11100   */\n      add\n        /* \"#utility.yul\":11073:11100   */\n      swap1\n      pop\n        /* \"#utility.yul\":11110:11181   */\n      tag_306\n        /* \"#utility.yul\":11178:11179   */\n      0x00\n        /* \"#utility.yul\":11167:11176   */\n      dup4\n        /* \"#utility.yul\":11163:11180   */\n      add\n        /* \"#utility.yul\":11154:11160   */\n      dup9\n        /* \"#utility.yul\":11110:11181   */\n      tag_194\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":11191:11263   */\n      tag_307\n        /* \"#utility.yul\":11259:11261   */\n      0x20\n        /* \"#utility.yul\":11248:11257   */\n      dup4\n        /* \"#utility.yul\":11244:11262   */\n      add\n        /* \"#utility.yul\":11235:11241   */\n      dup8\n        /* \"#utility.yul\":11191:11263   */\n      tag_180\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":11273:11345   */\n      tag_308\n        /* \"#utility.yul\":11341:11343   */\n      0x40\n        /* \"#utility.yul\":11330:11339   */\n      dup4\n        /* \"#utility.yul\":11326:11344   */\n      add\n        /* \"#utility.yul\":11317:11323   */\n      dup7\n        /* \"#utility.yul\":11273:11345   */\n      tag_194\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":11355:11427   */\n      tag_309\n        /* \"#utility.yul\":11423:11425   */\n      0x60\n        /* \"#utility.yul\":11412:11421   */\n      dup4\n        /* \"#utility.yul\":11408:11426   */\n      add\n        /* \"#utility.yul\":11399:11405   */\n      dup6\n        /* \"#utility.yul\":11355:11427   */\n      tag_194\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":11437:11510   */\n      tag_310\n        /* \"#utility.yul\":11505:11508   */\n      0x80\n        /* \"#utility.yul\":11494:11503   */\n      dup4\n        /* \"#utility.yul\":11490:11509   */\n      add\n        /* \"#utility.yul\":11481:11487   */\n      dup5\n        /* \"#utility.yul\":11437:11510   */\n      tag_180\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":10853:11517   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11523:11748   */\n    tag_195:\n        /* \"#utility.yul\":11663:11697   */\n      0x4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67\n        /* \"#utility.yul\":11659:11660   */\n      0x00\n        /* \"#utility.yul\":11651:11657   */\n      dup3\n        /* \"#utility.yul\":11647:11661   */\n      add\n        /* \"#utility.yul\":11640:11698   */\n      mstore\n        /* \"#utility.yul\":11732:11740   */\n      0x2070726963650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11727:11729   */\n      0x20\n        /* \"#utility.yul\":11719:11725   */\n      dup3\n        /* \"#utility.yul\":11715:11730   */\n      add\n        /* \"#utility.yul\":11708:11741   */\n      mstore\n        /* \"#utility.yul\":11523:11748   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11754:12120   */\n    tag_196:\n        /* \"#utility.yul\":11896:11899   */\n      0x00\n        /* \"#utility.yul\":11917:11984   */\n      tag_313\n        /* \"#utility.yul\":11981:11983   */\n      0x26\n        /* \"#utility.yul\":11976:11979   */\n      dup4\n        /* \"#utility.yul\":11917:11984   */\n      tag_189\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":11910:11984   */\n      swap2\n      pop\n        /* \"#utility.yul\":11993:12086   */\n      tag_314\n        /* \"#utility.yul\":12082:12085   */\n      dup3\n        /* \"#utility.yul\":11993:12086   */\n      tag_195\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":12111:12113   */\n      0x40\n        /* \"#utility.yul\":12106:12109   */\n      dup3\n        /* \"#utility.yul\":12102:12114   */\n      add\n        /* \"#utility.yul\":12095:12114   */\n      swap1\n      pop\n        /* \"#utility.yul\":11754:12120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12126:12545   */\n    tag_116:\n        /* \"#utility.yul\":12292:12296   */\n      0x00\n        /* \"#utility.yul\":12330:12332   */\n      0x20\n        /* \"#utility.yul\":12319:12328   */\n      dup3\n        /* \"#utility.yul\":12315:12333   */\n      add\n        /* \"#utility.yul\":12307:12333   */\n      swap1\n      pop\n        /* \"#utility.yul\":12379:12388   */\n      dup2\n        /* \"#utility.yul\":12373:12377   */\n      dup2\n        /* \"#utility.yul\":12369:12389   */\n      sub\n        /* \"#utility.yul\":12365:12366   */\n      0x00\n        /* \"#utility.yul\":12354:12363   */\n      dup4\n        /* \"#utility.yul\":12350:12367   */\n      add\n        /* \"#utility.yul\":12343:12390   */\n      mstore\n        /* \"#utility.yul\":12407:12538   */\n      tag_316\n        /* \"#utility.yul\":12533:12537   */\n      dup2\n        /* \"#utility.yul\":12407:12538   */\n      tag_196\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":12399:12538   */\n      swap1\n      pop\n        /* \"#utility.yul\":12126:12545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12551:12611   */\n    tag_197:\n        /* \"#utility.yul\":12579:12582   */\n      0x00\n        /* \"#utility.yul\":12600:12605   */\n      dup2\n        /* \"#utility.yul\":12593:12605   */\n      swap1\n      pop\n        /* \"#utility.yul\":12551:12611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12617:12759   */\n    tag_198:\n        /* \"#utility.yul\":12667:12676   */\n      0x00\n        /* \"#utility.yul\":12700:12753   */\n      tag_319\n        /* \"#utility.yul\":12718:12752   */\n      tag_320\n        /* \"#utility.yul\":12727:12751   */\n      tag_321\n        /* \"#utility.yul\":12745:12750   */\n      dup5\n        /* \"#utility.yul\":12727:12751   */\n      tag_167\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":12718:12752   */\n      tag_197\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12700:12753   */\n      tag_167\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":12687:12753   */\n      swap1\n      pop\n        /* \"#utility.yul\":12617:12759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12765:12891   */\n    tag_199:\n        /* \"#utility.yul\":12815:12824   */\n      0x00\n        /* \"#utility.yul\":12848:12885   */\n      tag_323\n        /* \"#utility.yul\":12879:12884   */\n      dup3\n        /* \"#utility.yul\":12848:12885   */\n      tag_198\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":12835:12885   */\n      swap1\n      pop\n        /* \"#utility.yul\":12765:12891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12897:13031   */\n    tag_200:\n        /* \"#utility.yul\":12955:12964   */\n      0x00\n        /* \"#utility.yul\":12988:13025   */\n      tag_325\n        /* \"#utility.yul\":13019:13024   */\n      dup3\n        /* \"#utility.yul\":12988:13025   */\n      tag_199\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":12975:13025   */\n      swap1\n      pop\n        /* \"#utility.yul\":12897:13031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13037:13184   */\n    tag_201:\n        /* \"#utility.yul\":13132:13177   */\n      tag_327\n        /* \"#utility.yul\":13171:13176   */\n      dup2\n        /* \"#utility.yul\":13132:13177   */\n      tag_200\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":13127:13130   */\n      dup3\n        /* \"#utility.yul\":13120:13178   */\n      mstore\n        /* \"#utility.yul\":13037:13184   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13190:13648   */\n    tag_120:\n        /* \"#utility.yul\":13347:13351   */\n      0x00\n        /* \"#utility.yul\":13385:13387   */\n      0x60\n        /* \"#utility.yul\":13374:13383   */\n      dup3\n        /* \"#utility.yul\":13370:13388   */\n      add\n        /* \"#utility.yul\":13362:13388   */\n      swap1\n      pop\n        /* \"#utility.yul\":13398:13469   */\n      tag_329\n        /* \"#utility.yul\":13466:13467   */\n      0x00\n        /* \"#utility.yul\":13455:13464   */\n      dup4\n        /* \"#utility.yul\":13451:13468   */\n      add\n        /* \"#utility.yul\":13442:13448   */\n      dup7\n        /* \"#utility.yul\":13398:13469   */\n      tag_194\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":13479:13559   */\n      tag_330\n        /* \"#utility.yul\":13555:13557   */\n      0x20\n        /* \"#utility.yul\":13544:13553   */\n      dup4\n        /* \"#utility.yul\":13540:13558   */\n      add\n        /* \"#utility.yul\":13531:13537   */\n      dup6\n        /* \"#utility.yul\":13479:13559   */\n      tag_201\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":13569:13641   */\n      tag_331\n        /* \"#utility.yul\":13637:13639   */\n      0x40\n        /* \"#utility.yul\":13626:13635   */\n      dup4\n        /* \"#utility.yul\":13622:13640   */\n      add\n        /* \"#utility.yul\":13613:13619   */\n      dup5\n        /* \"#utility.yul\":13569:13641   */\n      tag_180\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13190:13648   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13654:14350   */\n    tag_126:\n        /* \"#utility.yul\":13875:13879   */\n      0x00\n        /* \"#utility.yul\":13913:13916   */\n      0xa0\n        /* \"#utility.yul\":13902:13911   */\n      dup3\n        /* \"#utility.yul\":13898:13917   */\n      add\n        /* \"#utility.yul\":13890:13917   */\n      swap1\n      pop\n        /* \"#utility.yul\":13927:13998   */\n      tag_333\n        /* \"#utility.yul\":13995:13996   */\n      0x00\n        /* \"#utility.yul\":13984:13993   */\n      dup4\n        /* \"#utility.yul\":13980:13997   */\n      add\n        /* \"#utility.yul\":13971:13977   */\n      dup9\n        /* \"#utility.yul\":13927:13998   */\n      tag_194\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":14008:14080   */\n      tag_334\n        /* \"#utility.yul\":14076:14078   */\n      0x20\n        /* \"#utility.yul\":14065:14074   */\n      dup4\n        /* \"#utility.yul\":14061:14079   */\n      add\n        /* \"#utility.yul\":14052:14058   */\n      dup8\n        /* \"#utility.yul\":14008:14080   */\n      tag_180\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":14090:14170   */\n      tag_335\n        /* \"#utility.yul\":14166:14168   */\n      0x40\n        /* \"#utility.yul\":14155:14164   */\n      dup4\n        /* \"#utility.yul\":14151:14169   */\n      add\n        /* \"#utility.yul\":14142:14148   */\n      dup7\n        /* \"#utility.yul\":14090:14170   */\n      tag_201\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":14180:14260   */\n      tag_336\n        /* \"#utility.yul\":14256:14258   */\n      0x60\n        /* \"#utility.yul\":14245:14254   */\n      dup4\n        /* \"#utility.yul\":14241:14259   */\n      add\n        /* \"#utility.yul\":14232:14238   */\n      dup6\n        /* \"#utility.yul\":14180:14260   */\n      tag_201\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":14270:14343   */\n      tag_337\n        /* \"#utility.yul\":14338:14341   */\n      0x80\n        /* \"#utility.yul\":14327:14336   */\n      dup4\n        /* \"#utility.yul\":14323:14342   */\n      add\n        /* \"#utility.yul\":14314:14320   */\n      dup5\n        /* \"#utility.yul\":14270:14343   */\n      tag_180\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13654:14350   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14356:14550   */\n    tag_130:\n        /* \"#utility.yul\":14396:14400   */\n      0x00\n        /* \"#utility.yul\":14416:14436   */\n      tag_339\n        /* \"#utility.yul\":14434:14435   */\n      dup3\n        /* \"#utility.yul\":14416:14436   */\n      tag_170\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":14411:14436   */\n      swap2\n      pop\n        /* \"#utility.yul\":14450:14470   */\n      tag_340\n        /* \"#utility.yul\":14468:14469   */\n      dup4\n        /* \"#utility.yul\":14450:14470   */\n      tag_170\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":14445:14470   */\n      swap3\n      pop\n        /* \"#utility.yul\":14494:14495   */\n      dup3\n        /* \"#utility.yul\":14491:14492   */\n      dup3\n        /* \"#utility.yul\":14487:14496   */\n      sub\n        /* \"#utility.yul\":14479:14496   */\n      swap1\n      pop\n        /* \"#utility.yul\":14518:14519   */\n      dup2\n        /* \"#utility.yul\":14512:14516   */\n      dup2\n        /* \"#utility.yul\":14509:14520   */\n      gt\n        /* \"#utility.yul\":14506:14543   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":14523:14541   */\n      tag_342\n      tag_188\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":14506:14543   */\n    tag_341:\n        /* \"#utility.yul\":14356:14550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e4ffa062a6d229a4c5913d3c5afc5982a845a7443aea272a1183b48a92a3c31464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1352": {
									"entryPoint": null,
									"id": 1352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2918": {
									"entryPoint": null,
									"id": 2918,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040525f600355348015610013575f80fd5b5060015f819055503360045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119e3806100685f395ff3fe60806040526004361061006f575f3560e01c806334f5b6241161004d57806334f5b624146100f15780634ddf4f8f1461010d5780638d6cb3fb14610129578063c922b17c146101535761006f565b8063047b07bf146100735780631f4cc4db1461009d5780632b86ae38146100c7575b5f80fd5b34801561007e575f80fd5b5061008761016f565b6040516100949190611440565b60405180910390f35b3480156100a8575f80fd5b506100b161047e565b6040516100be9190611440565b60405180910390f35b3480156100d2575f80fd5b506100db6107f9565b6040516100e8919061146f565b60405180910390f35b61010b600480360381019061010691906114e0565b6107ff565b005b61012760048036038101906101229190611530565b610a18565b005b348015610134575f80fd5b5061013d610c3c565b60405161014a9190611440565b60405180910390f35b61016d600480360381019061016891906114e0565b610e82565b005b60605f60025490505f805b82811015610210573373ffffffffffffffffffffffffffffffffffffffff1660055f6001846101a9919061159b565b81526020019081526020015f206003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102035781806101ff906115ce565b9250505b808060010191505061017a565b505f8167ffffffffffffffff81111561022c5761022b611615565b5b60405190808252806020026020018201604052801561026557816020015b61025261121a565b81526020019060019003908161024a5790505b5090505f805b84811015610473573373ffffffffffffffffffffffffffffffffffffffff1660055f60018461029a919061159b565b81526020019081526020015f206003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104665760055f6001836102f5919061159b565b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015f9054906101000a900460ff16151515158152505083838151811061044c5761044b611642565b5b60200260200101819052508180610462906115ce565b9250505b808060010191505061026b565b508194505050505090565b60605f60025490505f805b82811015610555573373ffffffffffffffffffffffffffffffffffffffff1660055f6001846104b8919061159b565b81526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610534575060055f600183610516919061159b565b81526020019081526020015f206005015f9054906101000a900460ff165b15610548578180610544906115ce565b9250505b8080600101915050610489565b505f8167ffffffffffffffff81111561057157610570611615565b5b6040519080825280602002602001820160405280156105aa57816020015b61059761121a565b81526020019060019003908161058f5790505b5090505f805b848110156107ee573373ffffffffffffffffffffffffffffffffffffffff1660055f6001846105df919061159b565b81526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561065b575060055f60018361063d919061159b565b81526020019081526020015f206005015f9054906101000a900460ff165b156107e15760055f600183610670919061159b565b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015f9054906101000a900460ff1615151515815250508383815181106107c7576107c6611642565b5b602002602001018190525081806107dd906115ce565b9250505b80806001019150506105b0565b508194505050505090565b60035481565b6108076111cd565b5f8111610849576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610840906116c9565b60405180910390fd5b600354341461088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088490611731565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016108ca9392919061175e565b5f604051808303815f87803b1580156108e1575f80fd5b505af11580156108f3573d5f803e3d5ffd5b505050505f60055f8481526020019081526020015f20905033816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555030816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001816005015f6101000a81548160ff02191690831515021790555081816004018190555060015f8154809291906109c690611793565b91905055507fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d198484333086604051610a029594939291906117ba565b60405180910390a150610a13611211565b505050565b610a206111cd565b5f60055f8381526020019081526020015f2090508060040154341015610a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a729061187b565b60405180910390fd5b5f339050816002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f19350505050158015610ae5573d5f803e3d5ffd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd308385600101546040518463ffffffff1660e01b8152600401610b27939291906118f4565b5f604051808303815f87803b158015610b3e575f80fd5b505af1158015610b50573d5f803e3d5ffd5b5050505080826003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f826005015f6101000a81548160ff02191690831515021790555060015f815480929190610bc3906115ce565b91905055507f16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd2848360010154846002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168434604051610c26959493929190611929565b60405180910390a15050610c38611211565b5050565b60605f60025490505f60015482610c53919061197a565b90505f8167ffffffffffffffff811115610c7057610c6f611615565b5b604051908082528060200260200182016040528015610ca957816020015b610c9661121a565b815260200190600190039081610c8e5790505b5090505f805b84811015610e775760055f600183610cc7919061159b565b81526020019081526020015f206005015f9054906101000a900460ff1615610e6a5760055f600183610cf9919061159b565b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015f9054906101000a900460ff161515151581525050838381518110610e5057610e4f611642565b5b60200260200101819052508180610e66906115ce565b9250505b8080600101915050610caf565b508194505050505090565b610e8a6111cd565b5f8111610ecc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec3906116c9565b60405180910390fd5b6003543414610f10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0790611731565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610f4d9392919061175e565b5f604051808303815f87803b158015610f64575f80fd5b505af1158015610f76573d5f803e3d5ffd5b5050505060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60035490811502906040515f60405180830381858888f19350505050158015610fe0573d5f803e3d5ffd5b5060025f815480929190610ff3906115ce565b91905055506040518060c001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016001151581525060055f8481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015f6101000a81548160ff0219169083151502179055509050507fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d1983833330856040516111b89594939291906117ba565b60405180910390a16111c8611211565b505050565b60025f5403611208576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b60015f81905550565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112e0826112b7565b9050919050565b6112f0816112d6565b82525050565b5f819050919050565b611308816112f6565b82525050565b5f611318826112b7565b9050919050565b6113288161130e565b82525050565b5f8115159050919050565b6113428161132e565b82525050565b60c082015f82015161135c5f8501826112e7565b50602082015161136f60208501826112ff565b506040820151611382604085018261131f565b506060820151611395606085018261131f565b5060808201516113a860808501826112ff565b5060a08201516113bb60a0850182611339565b50505050565b5f6113cc8383611348565b60c08301905092915050565b5f602082019050919050565b5f6113ee8261128e565b6113f88185611298565b9350611403836112a8565b805f5b8381101561143357815161141a88826113c1565b9750611425836113d8565b925050600181019050611406565b5085935050505092915050565b5f6020820190508181035f83015261145881846113e4565b905092915050565b611469816112f6565b82525050565b5f6020820190506114825f830184611460565b92915050565b5f80fd5b611495816112d6565b811461149f575f80fd5b50565b5f813590506114b08161148c565b92915050565b6114bf816112f6565b81146114c9575f80fd5b50565b5f813590506114da816114b6565b92915050565b5f805f606084860312156114f7576114f6611488565b5b5f611504868287016114a2565b9350506020611515868287016114cc565b9250506040611526868287016114cc565b9150509250925092565b5f806040838503121561154657611545611488565b5b5f611553858286016114a2565b9250506020611564858286016114cc565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115a5826112f6565b91506115b0836112f6565b92508282019050808211156115c8576115c761156e565b5b92915050565b5f6115d8826112f6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361160a5761160961156e565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f5072696365206d757374206265206174206c65617374203120776569000000005f82015250565b5f6116b3601c8361166f565b91506116be8261167f565b602082019050919050565b5f6020820190508181035f8301526116e0816116a7565b9050919050565b7f4e6f7420656e6f75676820657468657220666f72206c697374696e67206665655f82015250565b5f61171b60208361166f565b9150611726826116e7565b602082019050919050565b5f6020820190508181035f8301526117488161170f565b9050919050565b611758816112d6565b82525050565b5f6060820190506117715f83018661174f565b61177e602083018561174f565b61178b6040830184611460565b949350505050565b5f61179d826112f6565b91505f82036117af576117ae61156e565b5b600182039050919050565b5f60a0820190506117cd5f83018861174f565b6117da6020830187611460565b6117e7604083018661174f565b6117f4606083018561174f565b6118016080830184611460565b9695505050505050565b7f4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e675f8201527f2070726963650000000000000000000000000000000000000000000000000000602082015250565b5f61186560268361166f565b91506118708261180b565b604082019050919050565b5f6020820190508181035f83015261189281611859565b9050919050565b5f819050919050565b5f6118bc6118b76118b2846112b7565b611899565b6112b7565b9050919050565b5f6118cd826118a2565b9050919050565b5f6118de826118c3565b9050919050565b6118ee816118d4565b82525050565b5f6060820190506119075f83018661174f565b61191460208301856118e5565b6119216040830184611460565b949350505050565b5f60a08201905061193c5f83018861174f565b6119496020830187611460565b61195660408301866118e5565b61196360608301856118e5565b6119706080830184611460565b9695505050505050565b5f611984826112f6565b915061198f836112f6565b92508282039050818111156119a7576119a661156e565b5b9291505056fea2646970667358221220e4ffa062a6d229a4c5913d3c5afc5982a845a7443aea272a1183b48a92a3c31464736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x19E3 DUP1 PUSH2 0x68 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34F5B624 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x34F5B624 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x4DDF4F8F EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x8D6CB3FB EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xC922B17C EQ PUSH2 0x153 JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x47B07BF EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x1F4CC4DB EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x2B86AE38 EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x16F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x210 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x203 JUMPI DUP2 DUP1 PUSH2 0x1FF SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x17A JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C JUMPI PUSH2 0x22B PUSH2 0x1615 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x265 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x252 PUSH2 0x121A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x24A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x473 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x466 JUMPI PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x44C JUMPI PUSH2 0x44B PUSH2 0x1642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x462 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x26B JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x555 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x534 JUMPI POP PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x548 JUMPI DUP2 DUP1 PUSH2 0x544 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x489 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1615 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5AA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x597 PUSH2 0x121A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x58F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7EE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x65B JUMPI POP PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7C7 JUMPI PUSH2 0x7C6 PUSH2 0x1642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x7DD SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5B0 JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x807 PUSH2 0x11CD JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x840 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x884 SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP ADDRESS DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x9C6 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 DUP5 DUP5 CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD PUSH2 0xA02 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0xA13 PUSH2 0x1211 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA20 PUSH2 0x11CD JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA72 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP DUP2 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAE5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP4 DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB27 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB3E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB50 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xBC3 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x16F1DBD97E6BF646D429ED186CCE832F1F7FD9907814293B83181E9970AB7BD2 DUP5 DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xC26 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0xC38 PUSH2 0x1211 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 SLOAD DUP3 PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x197A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC70 JUMPI PUSH2 0xC6F PUSH2 0x1615 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCA9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xC96 PUSH2 0x121A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC8E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE77 JUMPI PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0xCC7 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE6A JUMPI PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE50 JUMPI PUSH2 0xE4F PUSH2 0x1642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xE66 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xCAF JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xE8A PUSH2 0x11CD JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xECC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC3 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF07 SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF76 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFE0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFF3 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 DUP4 DUP4 CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD PUSH2 0x11B8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x11C8 PUSH2 0x1211 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12E0 DUP3 PUSH2 0x12B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F0 DUP2 PUSH2 0x12D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1308 DUP2 PUSH2 0x12F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1318 DUP3 PUSH2 0x12B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1328 DUP2 PUSH2 0x130E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1342 DUP2 PUSH2 0x132E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x135C PUSH0 DUP6 ADD DUP3 PUSH2 0x12E7 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x136F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x12FF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1382 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x131F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1395 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x131F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x13A8 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x12FF JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x13BB PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1339 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13CC DUP4 DUP4 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13EE DUP3 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x13F8 DUP2 DUP6 PUSH2 0x1298 JUMP JUMPDEST SWAP4 POP PUSH2 0x1403 DUP4 PUSH2 0x12A8 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1433 JUMPI DUP2 MLOAD PUSH2 0x141A DUP9 DUP3 PUSH2 0x13C1 JUMP JUMPDEST SWAP8 POP PUSH2 0x1425 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1406 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1458 DUP2 DUP5 PUSH2 0x13E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1469 DUP2 PUSH2 0x12F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1482 PUSH0 DUP4 ADD DUP5 PUSH2 0x1460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1495 DUP2 PUSH2 0x12D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x149F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B0 DUP2 PUSH2 0x148C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14BF DUP2 PUSH2 0x12F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x14C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DA DUP2 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F7 JUMPI PUSH2 0x14F6 PUSH2 0x1488 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1504 DUP7 DUP3 DUP8 ADD PUSH2 0x14A2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1515 DUP7 DUP3 DUP8 ADD PUSH2 0x14CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1526 DUP7 DUP3 DUP8 ADD PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1546 JUMPI PUSH2 0x1545 PUSH2 0x1488 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1553 DUP6 DUP3 DUP7 ADD PUSH2 0x14A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1564 DUP6 DUP3 DUP7 ADD PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15A5 DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B0 DUP4 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15C8 JUMPI PUSH2 0x15C7 PUSH2 0x156E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15D8 DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x160A JUMPI PUSH2 0x1609 PUSH2 0x156E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16B3 PUSH1 0x1C DUP4 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP PUSH2 0x16BE DUP3 PUSH2 0x167F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16E0 DUP2 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820657468657220666F72206C697374696E6720666565 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x171B PUSH1 0x20 DUP4 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP PUSH2 0x1726 DUP3 PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1748 DUP2 PUSH2 0x170F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1758 DUP2 PUSH2 0x12D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1771 PUSH0 DUP4 ADD DUP7 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x177E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x178B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1460 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x179D DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x17AF JUMPI PUSH2 0x17AE PUSH2 0x156E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x17CD PUSH0 DUP4 ADD DUP9 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x17DA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x17E7 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x17F4 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x1801 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1460 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67 PUSH0 DUP3 ADD MSTORE PUSH32 0x2070726963650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1865 PUSH1 0x26 DUP4 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP PUSH2 0x1870 DUP3 PUSH2 0x180B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1892 DUP2 PUSH2 0x1859 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18BC PUSH2 0x18B7 PUSH2 0x18B2 DUP5 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x1899 JUMP JUMPDEST PUSH2 0x12B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18CD DUP3 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18DE DUP3 PUSH2 0x18C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EE DUP2 PUSH2 0x18D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1907 PUSH0 DUP4 ADD DUP7 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x1914 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1921 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1460 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x193C PUSH0 DUP4 ADD DUP9 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x1949 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x1956 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1963 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1970 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1460 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1984 DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x198F DUP4 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19A7 JUMPI PUSH2 0x19A6 PUSH2 0x156E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SELFDESTRUCT LOG0 PUSH3 0xA6D229 LOG4 0xC5 SWAP2 RETURNDATASIZE EXTCODECOPY GAS 0xFC MSIZE DUP3 0xA8 GASLIMIT 0xA7 PREVRANDAO GASPRICE 0xEA 0x27 0x2A GT DUP4 0xB4 DUP11 SWAP3 LOG3 0xC3 EQ PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "183:4153:12:-:0;;;317:1;288:30;;841:61;;;;;;;;;;1746:1:6;1961:7;:21;;;;885:10:12;862:12;;:34;;;;;;;;;;;;;;;;;;183:4153;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@LISTING_FEE_2862": {
									"entryPoint": 2041,
									"id": 2862,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_1387": {
									"entryPoint": 4625,
									"id": 1387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1379": {
									"entryPoint": 4557,
									"id": 1379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyNft_3085": {
									"entryPoint": 2584,
									"id": 3085,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getListedNfts_3250": {
									"entryPoint": 3132,
									"id": 3250,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMyListedNfts_3456": {
									"entryPoint": 1150,
									"id": 3456,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMyNfts_3346": {
									"entryPoint": 367,
									"id": 3346,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@listNft_3002": {
									"entryPoint": 3714,
									"id": 3002,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@resellNft_3181": {
									"entryPoint": 2047,
									"id": 3181,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_struct$_NFT_$2882_memory_ptr_to_t_struct$_NFT_$2882_memory_ptr": {
									"entryPoint": 5057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_payable_to_t_address_payable": {
									"entryPoint": 4895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 4921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_NFT_$2882_memory_ptr_to_t_struct$_NFT_$2882_memory_ptr": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6441,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_address_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 6356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 6035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5653,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5256,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e": {
									"entryPoint": 6155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f": {
									"entryPoint": 5863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9": {
									"entryPoint": 5759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14553:13",
										"nodeType": "YulBlock",
										"src": "0:14553:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "102:40:13",
													"nodeType": "YulBlock",
													"src": "102:40:13",
													"statements": [
														{
															"nativeSrc": "113:22:13",
															"nodeType": "YulAssignment",
															"src": "113:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "129:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "129:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "123:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "123:5:13"
																},
																"nativeSrc": "123:12:13",
																"nodeType": "YulFunctionCall",
																"src": "123:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "113:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "7:135:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "85:5:13",
														"nodeType": "YulTypedName",
														"src": "85:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "95:6:13",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"src": "7:135:13"
											},
											{
												"body": {
													"nativeSrc": "280:73:13",
													"nodeType": "YulBlock",
													"src": "280:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "297:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "297:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "302:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "302:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "290:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "290:6:13"
																},
																"nativeSrc": "290:19:13",
																"nodeType": "YulFunctionCall",
																"src": "290:19:13"
															},
															"nativeSrc": "290:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "290:19:13"
														},
														{
															"nativeSrc": "318:29:13",
															"nodeType": "YulAssignment",
															"src": "318:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "337:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "337:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:4:13",
																		"nodeType": "YulLiteral",
																		"src": "342:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "333:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "333:3:13"
																},
																"nativeSrc": "333:14:13",
																"nodeType": "YulFunctionCall",
																"src": "333:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "318:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "318:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "148:205:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "252:3:13",
														"nodeType": "YulTypedName",
														"src": "252:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "257:6:13",
														"nodeType": "YulTypedName",
														"src": "257:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "268:11:13",
														"nodeType": "YulTypedName",
														"src": "268:11:13",
														"type": ""
													}
												],
												"src": "148:205:13"
											},
											{
												"body": {
													"nativeSrc": "452:60:13",
													"nodeType": "YulBlock",
													"src": "452:60:13",
													"statements": [
														{
															"nativeSrc": "462:11:13",
															"nodeType": "YulAssignment",
															"src": "462:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "470:3:13",
																"nodeType": "YulIdentifier",
																"src": "470:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "462:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "462:4:13"
																}
															]
														},
														{
															"nativeSrc": "483:22:13",
															"nodeType": "YulAssignment",
															"src": "483:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "495:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "495:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "500:4:13",
																		"nodeType": "YulLiteral",
																		"src": "500:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "491:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "491:3:13"
																},
																"nativeSrc": "491:14:13",
																"nodeType": "YulFunctionCall",
																"src": "491:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "483:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "483:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "359:153:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "439:3:13",
														"nodeType": "YulTypedName",
														"src": "439:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "447:4:13",
														"nodeType": "YulTypedName",
														"src": "447:4:13",
														"type": ""
													}
												],
												"src": "359:153:13"
											},
											{
												"body": {
													"nativeSrc": "563:81:13",
													"nodeType": "YulBlock",
													"src": "563:81:13",
													"statements": [
														{
															"nativeSrc": "573:65:13",
															"nodeType": "YulAssignment",
															"src": "573:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "588:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "588:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "595:42:13",
																		"nodeType": "YulLiteral",
																		"src": "595:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "584:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "584:3:13"
																},
																"nativeSrc": "584:54:13",
																"nodeType": "YulFunctionCall",
																"src": "584:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "573:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "573:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "518:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "545:5:13",
														"nodeType": "YulTypedName",
														"src": "545:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "555:7:13",
														"nodeType": "YulTypedName",
														"src": "555:7:13",
														"type": ""
													}
												],
												"src": "518:126:13"
											},
											{
												"body": {
													"nativeSrc": "695:51:13",
													"nodeType": "YulBlock",
													"src": "695:51:13",
													"statements": [
														{
															"nativeSrc": "705:35:13",
															"nodeType": "YulAssignment",
															"src": "705:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "734:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "734:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "716:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "716:17:13"
																},
																"nativeSrc": "716:24:13",
																"nodeType": "YulFunctionCall",
																"src": "716:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "705:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "705:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "650:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "677:5:13",
														"nodeType": "YulTypedName",
														"src": "677:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "687:7:13",
														"nodeType": "YulTypedName",
														"src": "687:7:13",
														"type": ""
													}
												],
												"src": "650:96:13"
											},
											{
												"body": {
													"nativeSrc": "807:53:13",
													"nodeType": "YulBlock",
													"src": "807:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "824:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "824:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "847:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "847:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "829:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "829:17:13"
																		},
																		"nativeSrc": "829:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "829:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "817:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "817:6:13"
																},
																"nativeSrc": "817:37:13",
																"nodeType": "YulFunctionCall",
																"src": "817:37:13"
															},
															"nativeSrc": "817:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "817:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "752:108:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "795:5:13",
														"nodeType": "YulTypedName",
														"src": "795:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "802:3:13",
														"nodeType": "YulTypedName",
														"src": "802:3:13",
														"type": ""
													}
												],
												"src": "752:108:13"
											},
											{
												"body": {
													"nativeSrc": "911:32:13",
													"nodeType": "YulBlock",
													"src": "911:32:13",
													"statements": [
														{
															"nativeSrc": "921:16:13",
															"nodeType": "YulAssignment",
															"src": "921:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "932:5:13",
																"nodeType": "YulIdentifier",
																"src": "932:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "921:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "921:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "866:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "893:5:13",
														"nodeType": "YulTypedName",
														"src": "893:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "903:7:13",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"src": "866:77:13"
											},
											{
												"body": {
													"nativeSrc": "1004:53:13",
													"nodeType": "YulBlock",
													"src": "1004:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1021:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1021:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1044:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1044:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1026:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1026:17:13"
																		},
																		"nativeSrc": "1026:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1026:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1014:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1014:6:13"
																},
																"nativeSrc": "1014:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1014:37:13"
															},
															"nativeSrc": "1014:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1014:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "949:108:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "992:5:13",
														"nodeType": "YulTypedName",
														"src": "992:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "999:3:13",
														"nodeType": "YulTypedName",
														"src": "999:3:13",
														"type": ""
													}
												],
												"src": "949:108:13"
											},
											{
												"body": {
													"nativeSrc": "1116:51:13",
													"nodeType": "YulBlock",
													"src": "1116:51:13",
													"statements": [
														{
															"nativeSrc": "1126:35:13",
															"nodeType": "YulAssignment",
															"src": "1126:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1155:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1155:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1137:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1137:17:13"
																},
																"nativeSrc": "1137:24:13",
																"nodeType": "YulFunctionCall",
																"src": "1137:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1126:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1126:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "1063:104:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1098:5:13",
														"nodeType": "YulTypedName",
														"src": "1098:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1108:7:13",
														"nodeType": "YulTypedName",
														"src": "1108:7:13",
														"type": ""
													}
												],
												"src": "1063:104:13"
											},
											{
												"body": {
													"nativeSrc": "1244:61:13",
													"nodeType": "YulBlock",
													"src": "1244:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1261:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1261:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1292:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1292:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "1266:25:13",
																			"nodeType": "YulIdentifier",
																			"src": "1266:25:13"
																		},
																		"nativeSrc": "1266:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1266:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1254:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:13"
																},
																"nativeSrc": "1254:45:13",
																"nodeType": "YulFunctionCall",
																"src": "1254:45:13"
															},
															"nativeSrc": "1254:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "1254:45:13"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable",
												"nativeSrc": "1173:132:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1232:5:13",
														"nodeType": "YulTypedName",
														"src": "1232:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1239:3:13",
														"nodeType": "YulTypedName",
														"src": "1239:3:13",
														"type": ""
													}
												],
												"src": "1173:132:13"
											},
											{
												"body": {
													"nativeSrc": "1353:48:13",
													"nodeType": "YulBlock",
													"src": "1353:48:13",
													"statements": [
														{
															"nativeSrc": "1363:32:13",
															"nodeType": "YulAssignment",
															"src": "1363:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1388:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1388:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1381:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1381:6:13"
																		},
																		"nativeSrc": "1381:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1381:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1374:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1374:6:13"
																},
																"nativeSrc": "1374:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1374:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1363:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1363:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1311:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1335:5:13",
														"nodeType": "YulTypedName",
														"src": "1335:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1345:7:13",
														"nodeType": "YulTypedName",
														"src": "1345:7:13",
														"type": ""
													}
												],
												"src": "1311:90:13"
											},
											{
												"body": {
													"nativeSrc": "1456:50:13",
													"nodeType": "YulBlock",
													"src": "1456:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1473:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1473:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1493:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1493:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1478:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1478:14:13"
																		},
																		"nativeSrc": "1478:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1478:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1466:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:13"
																},
																"nativeSrc": "1466:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1466:34:13"
															},
															"nativeSrc": "1466:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1466:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "1407:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1444:5:13",
														"nodeType": "YulTypedName",
														"src": "1444:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1451:3:13",
														"nodeType": "YulTypedName",
														"src": "1451:3:13",
														"type": ""
													}
												],
												"src": "1407:99:13"
											},
											{
												"body": {
													"nativeSrc": "1666:1129:13",
													"nodeType": "YulBlock",
													"src": "1666:1129:13",
													"statements": [
														{
															"nativeSrc": "1676:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1676:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1692:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1692:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1697:4:13",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1688:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1688:3:13"
																},
																"nativeSrc": "1688:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1688:14:13"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "1680:4:13",
																	"nodeType": "YulTypedName",
																	"src": "1680:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1712:171:13",
															"nodeType": "YulBlock",
															"src": "1712:171:13",
															"statements": [
																{
																	"nativeSrc": "1754:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1754:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1784:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1784:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1791:4:13",
																						"nodeType": "YulLiteral",
																						"src": "1791:4:13",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1780:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1780:3:13"
																				},
																				"nativeSrc": "1780:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1780:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1774:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "1774:5:13"
																		},
																		"nativeSrc": "1774:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1774:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "1758:12:13",
																			"nodeType": "YulTypedName",
																			"src": "1758:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "1844:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "1844:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1862:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1862:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1867:4:13",
																						"nodeType": "YulLiteral",
																						"src": "1867:4:13",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1858:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:13"
																				},
																				"nativeSrc": "1858:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1858:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "1810:33:13",
																			"nodeType": "YulIdentifier",
																			"src": "1810:33:13"
																		},
																		"nativeSrc": "1810:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1810:63:13"
																	},
																	"nativeSrc": "1810:63:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "1810:63:13"
																}
															]
														},
														{
															"nativeSrc": "1893:167:13",
															"nodeType": "YulBlock",
															"src": "1893:167:13",
															"statements": [
																{
																	"nativeSrc": "1931:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1931:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1961:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1961:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1968:4:13",
																						"nodeType": "YulLiteral",
																						"src": "1968:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1957:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1957:3:13"
																				},
																				"nativeSrc": "1957:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1957:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1951:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "1951:5:13"
																		},
																		"nativeSrc": "1951:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1951:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "1935:12:13",
																			"nodeType": "YulTypedName",
																			"src": "1935:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2021:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "2021:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2039:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2039:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2044:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2044:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2035:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2035:3:13"
																				},
																				"nativeSrc": "2035:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2035:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "1987:33:13",
																			"nodeType": "YulIdentifier",
																			"src": "1987:33:13"
																		},
																		"nativeSrc": "1987:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:63:13"
																	},
																	"nativeSrc": "1987:63:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "1987:63:13"
																}
															]
														},
														{
															"nativeSrc": "2070:182:13",
															"nodeType": "YulBlock",
															"src": "2070:182:13",
															"statements": [
																{
																	"nativeSrc": "2107:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2107:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2137:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2137:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2144:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2144:4:13",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2133:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2133:3:13"
																				},
																				"nativeSrc": "2133:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2133:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2127:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2127:5:13"
																		},
																		"nativeSrc": "2127:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2127:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2111:12:13",
																			"nodeType": "YulTypedName",
																			"src": "2111:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2213:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "2213:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2231:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2231:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2236:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2236:4:13",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2227:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2227:3:13"
																				},
																				"nativeSrc": "2227:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2227:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_payable_to_t_address_payable",
																			"nativeSrc": "2163:49:13",
																			"nodeType": "YulIdentifier",
																			"src": "2163:49:13"
																		},
																		"nativeSrc": "2163:79:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2163:79:13"
																	},
																	"nativeSrc": "2163:79:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "2163:79:13"
																}
															]
														},
														{
															"nativeSrc": "2262:181:13",
															"nodeType": "YulBlock",
															"src": "2262:181:13",
															"statements": [
																{
																	"nativeSrc": "2298:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2298:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2328:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2328:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2335:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2335:4:13",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2324:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2324:3:13"
																				},
																				"nativeSrc": "2324:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2324:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2318:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2318:5:13"
																		},
																		"nativeSrc": "2318:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2318:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2302:12:13",
																			"nodeType": "YulTypedName",
																			"src": "2302:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2404:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "2404:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2422:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2422:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2427:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2427:4:13",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2418:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2418:3:13"
																				},
																				"nativeSrc": "2418:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2418:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_payable_to_t_address_payable",
																			"nativeSrc": "2354:49:13",
																			"nodeType": "YulIdentifier",
																			"src": "2354:49:13"
																		},
																		"nativeSrc": "2354:79:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2354:79:13"
																	},
																	"nativeSrc": "2354:79:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "2354:79:13"
																}
															]
														},
														{
															"nativeSrc": "2453:165:13",
															"nodeType": "YulBlock",
															"src": "2453:165:13",
															"statements": [
																{
																	"nativeSrc": "2489:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2489:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2519:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2519:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2526:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2526:4:13",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2515:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2515:3:13"
																				},
																				"nativeSrc": "2515:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2515:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2509:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2509:5:13"
																		},
																		"nativeSrc": "2509:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2509:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2493:12:13",
																			"nodeType": "YulTypedName",
																			"src": "2493:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2579:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "2579:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2597:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2597:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2602:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2602:4:13",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2593:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2593:3:13"
																				},
																				"nativeSrc": "2593:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2593:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2545:33:13",
																			"nodeType": "YulIdentifier",
																			"src": "2545:33:13"
																		},
																		"nativeSrc": "2545:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2545:63:13"
																	},
																	"nativeSrc": "2545:63:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "2545:63:13"
																}
															]
														},
														{
															"nativeSrc": "2628:160:13",
															"nodeType": "YulBlock",
															"src": "2628:160:13",
															"statements": [
																{
																	"nativeSrc": "2665:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2665:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2695:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2695:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2702:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2702:4:13",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2691:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:13"
																				},
																				"nativeSrc": "2691:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2691:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2685:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2685:5:13"
																		},
																		"nativeSrc": "2685:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2685:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2669:12:13",
																			"nodeType": "YulTypedName",
																			"src": "2669:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2749:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "2749:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2767:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2767:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2772:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2772:4:13",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2763:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2763:3:13"
																				},
																				"nativeSrc": "2763:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2763:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "2721:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "2721:27:13"
																		},
																		"nativeSrc": "2721:57:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2721:57:13"
																	},
																	"nativeSrc": "2721:57:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "2721:57:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_NFT_$2882_memory_ptr_to_t_struct$_NFT_$2882_memory_ptr",
												"nativeSrc": "1568:1227:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1653:5:13",
														"nodeType": "YulTypedName",
														"src": "1653:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1660:3:13",
														"nodeType": "YulTypedName",
														"src": "1660:3:13",
														"type": ""
													}
												],
												"src": "1568:1227:13"
											},
											{
												"body": {
													"nativeSrc": "2923:141:13",
													"nodeType": "YulBlock",
													"src": "2923:141:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3009:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3009:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3017:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3017:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_NFT_$2882_memory_ptr_to_t_struct$_NFT_$2882_memory_ptr",
																	"nativeSrc": "2933:75:13",
																	"nodeType": "YulIdentifier",
																	"src": "2933:75:13"
																},
																"nativeSrc": "2933:88:13",
																"nodeType": "YulFunctionCall",
																"src": "2933:88:13"
															},
															"nativeSrc": "2933:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "2933:88:13"
														},
														{
															"nativeSrc": "3030:28:13",
															"nodeType": "YulAssignment",
															"src": "3030:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3048:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3048:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3053:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3053:4:13",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3044:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:13"
																},
																"nativeSrc": "3044:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3044:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3030:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "3030:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_NFT_$2882_memory_ptr_to_t_struct$_NFT_$2882_memory_ptr",
												"nativeSrc": "2801:263:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "2896:6:13",
														"nodeType": "YulTypedName",
														"src": "2896:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2904:3:13",
														"nodeType": "YulTypedName",
														"src": "2904:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "2912:10:13",
														"nodeType": "YulTypedName",
														"src": "2912:10:13",
														"type": ""
													}
												],
												"src": "2801:263:13"
											},
											{
												"body": {
													"nativeSrc": "3166:38:13",
													"nodeType": "YulBlock",
													"src": "3166:38:13",
													"statements": [
														{
															"nativeSrc": "3176:22:13",
															"nodeType": "YulAssignment",
															"src": "3176:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3188:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3188:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3193:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3184:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3184:3:13"
																},
																"nativeSrc": "3184:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3184:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "3176:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3176:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "3070:134:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3153:3:13",
														"nodeType": "YulTypedName",
														"src": "3153:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "3161:4:13",
														"nodeType": "YulTypedName",
														"src": "3161:4:13",
														"type": ""
													}
												],
												"src": "3070:134:13"
											},
											{
												"body": {
													"nativeSrc": "3436:734:13",
													"nodeType": "YulBlock",
													"src": "3436:734:13",
													"statements": [
														{
															"nativeSrc": "3446:89:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3446:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3529:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3529:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "3460:68:13",
																	"nodeType": "YulIdentifier",
																	"src": "3460:68:13"
																},
																"nativeSrc": "3460:75:13",
																"nodeType": "YulFunctionCall",
																"src": "3460:75:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3450:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3450:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3544:114:13",
															"nodeType": "YulAssignment",
															"src": "3544:114:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3646:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3646:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3651:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3551:94:13",
																	"nodeType": "YulIdentifier",
																	"src": "3551:94:13"
																},
																"nativeSrc": "3551:107:13",
																"nodeType": "YulFunctionCall",
																"src": "3551:107:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3544:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3544:3:13"
																}
															]
														},
														{
															"nativeSrc": "3667:92:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3667:92:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3753:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3753:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "3682:70:13",
																	"nodeType": "YulIdentifier",
																	"src": "3682:70:13"
																},
																"nativeSrc": "3682:77:13",
																"nodeType": "YulFunctionCall",
																"src": "3682:77:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "3671:7:13",
																	"nodeType": "YulTypedName",
																	"src": "3671:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3768:21:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3768:21:13",
															"value": {
																"name": "baseRef",
																"nativeSrc": "3782:7:13",
																"nodeType": "YulIdentifier",
																"src": "3782:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3772:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3772:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3858:287:13",
																"nodeType": "YulBlock",
																"src": "3858:287:13",
																"statements": [
																	{
																		"nativeSrc": "3872:34:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3872:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3899:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "3899:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "3893:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3893:5:13"
																			},
																			"nativeSrc": "3893:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3893:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "3876:13:13",
																				"nodeType": "YulTypedName",
																				"src": "3876:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3919:112:13",
																		"nodeType": "YulAssignment",
																		"src": "3919:112:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "4012:13:13",
																					"nodeType": "YulIdentifier",
																					"src": "4012:13:13"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "4027:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4027:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_NFT_$2882_memory_ptr_to_t_struct$_NFT_$2882_memory_ptr",
																				"nativeSrc": "3926:85:13",
																				"nodeType": "YulIdentifier",
																				"src": "3926:85:13"
																			},
																			"nativeSrc": "3926:105:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3926:105:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3919:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3919:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4044:91:13",
																		"nodeType": "YulAssignment",
																		"src": "4044:91:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4128:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "4128:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "4054:73:13",
																				"nodeType": "YulIdentifier",
																				"src": "4054:73:13"
																			},
																			"nativeSrc": "4054:81:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4054:81:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4044:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4044:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3820:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3820:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3823:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3823:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3817:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3817:2:13"
																},
																"nativeSrc": "3817:13:13",
																"nodeType": "YulFunctionCall",
																"src": "3817:13:13"
															},
															"nativeSrc": "3798:347:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3831:18:13",
																"nodeType": "YulBlock",
																"src": "3831:18:13",
																"statements": [
																	{
																		"nativeSrc": "3833:14:13",
																		"nodeType": "YulAssignment",
																		"src": "3833:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3842:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "3842:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3845:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3838:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3838:3:13"
																			},
																			"nativeSrc": "3838:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3838:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3833:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "3833:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3802:14:13",
																"nodeType": "YulBlock",
																"src": "3802:14:13",
																"statements": [
																	{
																		"nativeSrc": "3804:10:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3804:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3813:1:13",
																			"nodeType": "YulLiteral",
																			"src": "3813:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "3808:1:13",
																				"nodeType": "YulTypedName",
																				"src": "3808:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3798:347:13"
														},
														{
															"nativeSrc": "4154:10:13",
															"nodeType": "YulAssignment",
															"src": "4154:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "4161:3:13",
																"nodeType": "YulIdentifier",
																"src": "4161:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4154:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4154:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3270:900:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3415:5:13",
														"nodeType": "YulTypedName",
														"src": "3415:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3422:3:13",
														"nodeType": "YulTypedName",
														"src": "3422:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3431:3:13",
														"nodeType": "YulTypedName",
														"src": "3431:3:13",
														"type": ""
													}
												],
												"src": "3270:900:13"
											},
											{
												"body": {
													"nativeSrc": "4366:267:13",
													"nodeType": "YulBlock",
													"src": "4366:267:13",
													"statements": [
														{
															"nativeSrc": "4376:26:13",
															"nodeType": "YulAssignment",
															"src": "4376:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4388:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4388:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4399:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4399:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4384:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4384:3:13"
																},
																"nativeSrc": "4384:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4384:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4376:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4376:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4423:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4423:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4434:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4434:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4419:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4419:3:13"
																		},
																		"nativeSrc": "4419:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4419:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4442:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4442:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4448:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4448:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4438:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4438:3:13"
																		},
																		"nativeSrc": "4438:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4438:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4412:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4412:6:13"
																},
																"nativeSrc": "4412:47:13",
																"nodeType": "YulFunctionCall",
																"src": "4412:47:13"
															},
															"nativeSrc": "4412:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "4412:47:13"
														},
														{
															"nativeSrc": "4468:158:13",
															"nodeType": "YulAssignment",
															"src": "4468:158:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4612:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4612:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4621:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4621:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4476:135:13",
																	"nodeType": "YulIdentifier",
																	"src": "4476:135:13"
																},
																"nativeSrc": "4476:150:13",
																"nodeType": "YulFunctionCall",
																"src": "4476:150:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4468:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4468:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4176:457:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4338:9:13",
														"nodeType": "YulTypedName",
														"src": "4338:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4350:6:13",
														"nodeType": "YulTypedName",
														"src": "4350:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4361:4:13",
														"nodeType": "YulTypedName",
														"src": "4361:4:13",
														"type": ""
													}
												],
												"src": "4176:457:13"
											},
											{
												"body": {
													"nativeSrc": "4704:53:13",
													"nodeType": "YulBlock",
													"src": "4704:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4721:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4721:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4744:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4744:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4726:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4726:17:13"
																		},
																		"nativeSrc": "4726:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4726:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4714:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4714:6:13"
																},
																"nativeSrc": "4714:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4714:37:13"
															},
															"nativeSrc": "4714:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4714:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4639:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4692:5:13",
														"nodeType": "YulTypedName",
														"src": "4692:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4699:3:13",
														"nodeType": "YulTypedName",
														"src": "4699:3:13",
														"type": ""
													}
												],
												"src": "4639:118:13"
											},
											{
												"body": {
													"nativeSrc": "4861:124:13",
													"nodeType": "YulBlock",
													"src": "4861:124:13",
													"statements": [
														{
															"nativeSrc": "4871:26:13",
															"nodeType": "YulAssignment",
															"src": "4871:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4883:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4883:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4894:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4894:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4879:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4879:3:13"
																},
																"nativeSrc": "4879:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4879:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4871:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4871:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4951:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4951:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4964:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4964:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4975:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4975:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4960:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4960:3:13"
																		},
																		"nativeSrc": "4960:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4960:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4907:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4907:43:13"
																},
																"nativeSrc": "4907:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4907:71:13"
															},
															"nativeSrc": "4907:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4907:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4763:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4833:9:13",
														"nodeType": "YulTypedName",
														"src": "4833:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4845:6:13",
														"nodeType": "YulTypedName",
														"src": "4845:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4856:4:13",
														"nodeType": "YulTypedName",
														"src": "4856:4:13",
														"type": ""
													}
												],
												"src": "4763:222:13"
											},
											{
												"body": {
													"nativeSrc": "5031:35:13",
													"nodeType": "YulBlock",
													"src": "5031:35:13",
													"statements": [
														{
															"nativeSrc": "5041:19:13",
															"nodeType": "YulAssignment",
															"src": "5041:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5057:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5057:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5051:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5051:5:13"
																},
																"nativeSrc": "5051:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5051:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5041:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5041:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "4991:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5024:6:13",
														"nodeType": "YulTypedName",
														"src": "5024:6:13",
														"type": ""
													}
												],
												"src": "4991:75:13"
											},
											{
												"body": {
													"nativeSrc": "5161:28:13",
													"nodeType": "YulBlock",
													"src": "5161:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5178:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5178:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5181:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5181:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5171:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5171:6:13"
																},
																"nativeSrc": "5171:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5171:12:13"
															},
															"nativeSrc": "5171:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "5171:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "5072:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5072:117:13"
											},
											{
												"body": {
													"nativeSrc": "5284:28:13",
													"nodeType": "YulBlock",
													"src": "5284:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5301:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5301:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5304:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5304:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5294:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5294:6:13"
																},
																"nativeSrc": "5294:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5294:12:13"
															},
															"nativeSrc": "5294:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "5294:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "5195:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5195:117:13"
											},
											{
												"body": {
													"nativeSrc": "5361:79:13",
													"nodeType": "YulBlock",
													"src": "5361:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5418:16:13",
																"nodeType": "YulBlock",
																"src": "5418:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5427:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5427:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5430:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5430:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5420:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5420:6:13"
																			},
																			"nativeSrc": "5420:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5420:12:13"
																		},
																		"nativeSrc": "5420:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5420:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5384:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5384:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5409:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5409:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "5391:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5391:17:13"
																				},
																				"nativeSrc": "5391:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5391:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5381:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5381:2:13"
																		},
																		"nativeSrc": "5381:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5381:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5374:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5374:6:13"
																},
																"nativeSrc": "5374:43:13",
																"nodeType": "YulFunctionCall",
																"src": "5374:43:13"
															},
															"nativeSrc": "5371:63:13",
															"nodeType": "YulIf",
															"src": "5371:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "5318:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5354:5:13",
														"nodeType": "YulTypedName",
														"src": "5354:5:13",
														"type": ""
													}
												],
												"src": "5318:122:13"
											},
											{
												"body": {
													"nativeSrc": "5498:87:13",
													"nodeType": "YulBlock",
													"src": "5498:87:13",
													"statements": [
														{
															"nativeSrc": "5508:29:13",
															"nodeType": "YulAssignment",
															"src": "5508:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5530:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5530:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5517:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5517:12:13"
																},
																"nativeSrc": "5517:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5517:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5508:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5508:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5573:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5573:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "5546:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "5546:26:13"
																},
																"nativeSrc": "5546:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5546:33:13"
															},
															"nativeSrc": "5546:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "5546:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "5446:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5476:6:13",
														"nodeType": "YulTypedName",
														"src": "5476:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5484:3:13",
														"nodeType": "YulTypedName",
														"src": "5484:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5492:5:13",
														"nodeType": "YulTypedName",
														"src": "5492:5:13",
														"type": ""
													}
												],
												"src": "5446:139:13"
											},
											{
												"body": {
													"nativeSrc": "5634:79:13",
													"nodeType": "YulBlock",
													"src": "5634:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5691:16:13",
																"nodeType": "YulBlock",
																"src": "5691:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5700:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5700:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5703:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5703:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5693:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5693:6:13"
																			},
																			"nativeSrc": "5693:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5693:12:13"
																		},
																		"nativeSrc": "5693:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5693:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5657:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5657:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5682:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5682:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5664:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5664:17:13"
																				},
																				"nativeSrc": "5664:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5664:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5654:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5654:2:13"
																		},
																		"nativeSrc": "5654:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5654:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5647:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5647:6:13"
																},
																"nativeSrc": "5647:43:13",
																"nodeType": "YulFunctionCall",
																"src": "5647:43:13"
															},
															"nativeSrc": "5644:63:13",
															"nodeType": "YulIf",
															"src": "5644:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5591:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5627:5:13",
														"nodeType": "YulTypedName",
														"src": "5627:5:13",
														"type": ""
													}
												],
												"src": "5591:122:13"
											},
											{
												"body": {
													"nativeSrc": "5771:87:13",
													"nodeType": "YulBlock",
													"src": "5771:87:13",
													"statements": [
														{
															"nativeSrc": "5781:29:13",
															"nodeType": "YulAssignment",
															"src": "5781:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5803:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5803:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5790:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5790:12:13"
																},
																"nativeSrc": "5790:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5790:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5781:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5781:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5846:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5846:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5819:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "5819:26:13"
																},
																"nativeSrc": "5819:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5819:33:13"
															},
															"nativeSrc": "5819:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "5819:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5719:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5749:6:13",
														"nodeType": "YulTypedName",
														"src": "5749:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5757:3:13",
														"nodeType": "YulTypedName",
														"src": "5757:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5765:5:13",
														"nodeType": "YulTypedName",
														"src": "5765:5:13",
														"type": ""
													}
												],
												"src": "5719:139:13"
											},
											{
												"body": {
													"nativeSrc": "5964:519:13",
													"nodeType": "YulBlock",
													"src": "5964:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6010:83:13",
																"nodeType": "YulBlock",
																"src": "6010:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6012:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6012:77:13"
																			},
																			"nativeSrc": "6012:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6012:79:13"
																		},
																		"nativeSrc": "6012:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6012:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5985:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5985:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5994:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5994:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5981:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5981:3:13"
																		},
																		"nativeSrc": "5981:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5981:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6006:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6006:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5977:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5977:3:13"
																},
																"nativeSrc": "5977:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5977:32:13"
															},
															"nativeSrc": "5974:119:13",
															"nodeType": "YulIf",
															"src": "5974:119:13"
														},
														{
															"nativeSrc": "6103:117:13",
															"nodeType": "YulBlock",
															"src": "6103:117:13",
															"statements": [
																{
																	"nativeSrc": "6118:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6118:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6132:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6132:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6122:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6122:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6147:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6147:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6182:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6182:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6193:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6193:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6178:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6178:3:13"
																				},
																				"nativeSrc": "6178:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6178:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6202:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6202:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6157:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6157:20:13"
																		},
																		"nativeSrc": "6157:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6157:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6147:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6147:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6230:118:13",
															"nodeType": "YulBlock",
															"src": "6230:118:13",
															"statements": [
																{
																	"nativeSrc": "6245:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6245:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6259:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6259:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6249:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6249:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6275:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6275:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6310:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6310:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6321:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6321:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6306:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6306:3:13"
																				},
																				"nativeSrc": "6306:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6306:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6330:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6330:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6285:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6285:20:13"
																		},
																		"nativeSrc": "6285:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6285:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6275:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6275:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6358:118:13",
															"nodeType": "YulBlock",
															"src": "6358:118:13",
															"statements": [
																{
																	"nativeSrc": "6373:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6373:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6387:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6387:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6377:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6377:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6403:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6403:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6438:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6438:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6449:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6449:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6434:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6434:3:13"
																				},
																				"nativeSrc": "6434:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6434:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6458:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6458:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6413:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6413:20:13"
																		},
																		"nativeSrc": "6413:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6413:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6403:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6403:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "5864:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5918:9:13",
														"nodeType": "YulTypedName",
														"src": "5918:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5929:7:13",
														"nodeType": "YulTypedName",
														"src": "5929:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5941:6:13",
														"nodeType": "YulTypedName",
														"src": "5941:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5949:6:13",
														"nodeType": "YulTypedName",
														"src": "5949:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5957:6:13",
														"nodeType": "YulTypedName",
														"src": "5957:6:13",
														"type": ""
													}
												],
												"src": "5864:619:13"
											},
											{
												"body": {
													"nativeSrc": "6572:391:13",
													"nodeType": "YulBlock",
													"src": "6572:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6618:83:13",
																"nodeType": "YulBlock",
																"src": "6618:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6620:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6620:77:13"
																			},
																			"nativeSrc": "6620:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6620:79:13"
																		},
																		"nativeSrc": "6620:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6620:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6593:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6593:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6602:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6602:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6589:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6589:3:13"
																		},
																		"nativeSrc": "6589:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6589:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6614:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6614:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6585:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:13"
																},
																"nativeSrc": "6585:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6585:32:13"
															},
															"nativeSrc": "6582:119:13",
															"nodeType": "YulIf",
															"src": "6582:119:13"
														},
														{
															"nativeSrc": "6711:117:13",
															"nodeType": "YulBlock",
															"src": "6711:117:13",
															"statements": [
																{
																	"nativeSrc": "6726:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6726:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6740:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6740:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6730:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6730:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6755:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6755:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6790:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6790:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6801:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6801:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6786:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6786:3:13"
																				},
																				"nativeSrc": "6786:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6786:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6810:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6810:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6765:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6765:20:13"
																		},
																		"nativeSrc": "6765:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6765:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6755:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6755:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6838:118:13",
															"nodeType": "YulBlock",
															"src": "6838:118:13",
															"statements": [
																{
																	"nativeSrc": "6853:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6853:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6867:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6867:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6857:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6857:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6883:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6883:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6918:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6918:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6929:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6929:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6914:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6914:3:13"
																				},
																				"nativeSrc": "6914:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6914:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6938:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6938:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6893:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6893:20:13"
																		},
																		"nativeSrc": "6893:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6893:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6883:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6883:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "6489:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6534:9:13",
														"nodeType": "YulTypedName",
														"src": "6534:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6545:7:13",
														"nodeType": "YulTypedName",
														"src": "6545:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6557:6:13",
														"nodeType": "YulTypedName",
														"src": "6557:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6565:6:13",
														"nodeType": "YulTypedName",
														"src": "6565:6:13",
														"type": ""
													}
												],
												"src": "6489:474:13"
											},
											{
												"body": {
													"nativeSrc": "6997:152:13",
													"nodeType": "YulBlock",
													"src": "6997:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7014:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7014:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7017:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7017:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7007:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7007:6:13"
																},
																"nativeSrc": "7007:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7007:88:13"
															},
															"nativeSrc": "7007:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7007:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7111:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7111:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7114:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7114:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7104:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7104:6:13"
																},
																"nativeSrc": "7104:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7104:15:13"
															},
															"nativeSrc": "7104:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7104:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7135:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7135:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7138:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7138:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7128:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7128:6:13"
																},
																"nativeSrc": "7128:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7128:15:13"
															},
															"nativeSrc": "7128:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7128:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6969:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6969:180:13"
											},
											{
												"body": {
													"nativeSrc": "7199:147:13",
													"nodeType": "YulBlock",
													"src": "7199:147:13",
													"statements": [
														{
															"nativeSrc": "7209:25:13",
															"nodeType": "YulAssignment",
															"src": "7209:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7232:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7232:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7214:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "7214:17:13"
																},
																"nativeSrc": "7214:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7214:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7209:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7209:1:13"
																}
															]
														},
														{
															"nativeSrc": "7243:25:13",
															"nodeType": "YulAssignment",
															"src": "7243:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7266:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7266:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7248:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "7248:17:13"
																},
																"nativeSrc": "7248:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7248:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7243:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7243:1:13"
																}
															]
														},
														{
															"nativeSrc": "7277:16:13",
															"nodeType": "YulAssignment",
															"src": "7277:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7288:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7288:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7291:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7291:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7284:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:13"
																},
																"nativeSrc": "7284:9:13",
																"nodeType": "YulFunctionCall",
																"src": "7284:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7277:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7277:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7317:22:13",
																"nodeType": "YulBlock",
																"src": "7317:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7319:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7319:16:13"
																			},
																			"nativeSrc": "7319:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7319:18:13"
																		},
																		"nativeSrc": "7319:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7319:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7309:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7309:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7312:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7312:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7306:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7306:2:13"
																},
																"nativeSrc": "7306:10:13",
																"nodeType": "YulFunctionCall",
																"src": "7306:10:13"
															},
															"nativeSrc": "7303:36:13",
															"nodeType": "YulIf",
															"src": "7303:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7155:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7186:1:13",
														"nodeType": "YulTypedName",
														"src": "7186:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7189:1:13",
														"nodeType": "YulTypedName",
														"src": "7189:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7195:3:13",
														"nodeType": "YulTypedName",
														"src": "7195:3:13",
														"type": ""
													}
												],
												"src": "7155:191:13"
											},
											{
												"body": {
													"nativeSrc": "7395:190:13",
													"nodeType": "YulBlock",
													"src": "7395:190:13",
													"statements": [
														{
															"nativeSrc": "7405:33:13",
															"nodeType": "YulAssignment",
															"src": "7405:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7432:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7432:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7414:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "7414:17:13"
																},
																"nativeSrc": "7414:24:13",
																"nodeType": "YulFunctionCall",
																"src": "7414:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7405:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7405:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7528:22:13",
																"nodeType": "YulBlock",
																"src": "7528:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7530:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7530:16:13"
																			},
																			"nativeSrc": "7530:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7530:18:13"
																		},
																		"nativeSrc": "7530:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7530:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7453:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7453:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7460:66:13",
																		"nodeType": "YulLiteral",
																		"src": "7460:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7450:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7450:2:13"
																},
																"nativeSrc": "7450:77:13",
																"nodeType": "YulFunctionCall",
																"src": "7450:77:13"
															},
															"nativeSrc": "7447:103:13",
															"nodeType": "YulIf",
															"src": "7447:103:13"
														},
														{
															"nativeSrc": "7559:20:13",
															"nodeType": "YulAssignment",
															"src": "7559:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7570:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7570:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7577:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7577:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7566:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7566:3:13"
																},
																"nativeSrc": "7566:13:13",
																"nodeType": "YulFunctionCall",
																"src": "7566:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7559:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7559:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "7352:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7381:5:13",
														"nodeType": "YulTypedName",
														"src": "7381:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7391:3:13",
														"nodeType": "YulTypedName",
														"src": "7391:3:13",
														"type": ""
													}
												],
												"src": "7352:233:13"
											},
											{
												"body": {
													"nativeSrc": "7619:152:13",
													"nodeType": "YulBlock",
													"src": "7619:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7636:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7636:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7639:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7639:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7629:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7629:6:13"
																},
																"nativeSrc": "7629:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7629:88:13"
															},
															"nativeSrc": "7629:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7629:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7733:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7733:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7736:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7736:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7726:6:13"
																},
																"nativeSrc": "7726:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7726:15:13"
															},
															"nativeSrc": "7726:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7726:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7757:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7757:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7760:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7760:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7750:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7750:6:13"
																},
																"nativeSrc": "7750:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7750:15:13"
															},
															"nativeSrc": "7750:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7750:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7591:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7591:180:13"
											},
											{
												"body": {
													"nativeSrc": "7805:152:13",
													"nodeType": "YulBlock",
													"src": "7805:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7822:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7822:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7825:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7825:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7815:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7815:6:13"
																},
																"nativeSrc": "7815:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7815:88:13"
															},
															"nativeSrc": "7815:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7815:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7919:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7919:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7922:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7922:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7912:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7912:6:13"
																},
																"nativeSrc": "7912:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7912:15:13"
															},
															"nativeSrc": "7912:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7912:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7943:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7943:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7946:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7946:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7936:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7936:6:13"
																},
																"nativeSrc": "7936:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7936:15:13"
															},
															"nativeSrc": "7936:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7936:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7777:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7777:180:13"
											},
											{
												"body": {
													"nativeSrc": "8059:73:13",
													"nodeType": "YulBlock",
													"src": "8059:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8076:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8076:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8081:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8081:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8069:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8069:6:13"
																},
																"nativeSrc": "8069:19:13",
																"nodeType": "YulFunctionCall",
																"src": "8069:19:13"
															},
															"nativeSrc": "8069:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "8069:19:13"
														},
														{
															"nativeSrc": "8097:29:13",
															"nodeType": "YulAssignment",
															"src": "8097:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8116:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8116:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8121:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8121:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8112:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8112:3:13"
																},
																"nativeSrc": "8112:14:13",
																"nodeType": "YulFunctionCall",
																"src": "8112:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8097:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "8097:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7963:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8031:3:13",
														"nodeType": "YulTypedName",
														"src": "8031:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8036:6:13",
														"nodeType": "YulTypedName",
														"src": "8036:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8047:11:13",
														"nodeType": "YulTypedName",
														"src": "8047:11:13",
														"type": ""
													}
												],
												"src": "7963:169:13"
											},
											{
												"body": {
													"nativeSrc": "8244:72:13",
													"nodeType": "YulBlock",
													"src": "8244:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8266:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8266:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8274:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8274:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8262:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8262:3:13"
																		},
																		"nativeSrc": "8262:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8262:14:13"
																	},
																	{
																		"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
																		"kind": "string",
																		"nativeSrc": "8278:30:13",
																		"nodeType": "YulLiteral",
																		"src": "8278:30:13",
																		"type": "",
																		"value": "Price must be at least 1 wei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8255:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8255:6:13"
																},
																"nativeSrc": "8255:54:13",
																"nodeType": "YulFunctionCall",
																"src": "8255:54:13"
															},
															"nativeSrc": "8255:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "8255:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
												"nativeSrc": "8138:178:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8236:6:13",
														"nodeType": "YulTypedName",
														"src": "8236:6:13",
														"type": ""
													}
												],
												"src": "8138:178:13"
											},
											{
												"body": {
													"nativeSrc": "8468:220:13",
													"nodeType": "YulBlock",
													"src": "8468:220:13",
													"statements": [
														{
															"nativeSrc": "8478:74:13",
															"nodeType": "YulAssignment",
															"src": "8478:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8544:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8544:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8549:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8549:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8485:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "8485:58:13"
																},
																"nativeSrc": "8485:67:13",
																"nodeType": "YulFunctionCall",
																"src": "8485:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8478:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8478:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8650:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8650:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																	"nativeSrc": "8561:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "8561:88:13"
																},
																"nativeSrc": "8561:93:13",
																"nodeType": "YulFunctionCall",
																"src": "8561:93:13"
															},
															"nativeSrc": "8561:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "8561:93:13"
														},
														{
															"nativeSrc": "8663:19:13",
															"nodeType": "YulAssignment",
															"src": "8663:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8674:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8674:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8679:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8679:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8670:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8670:3:13"
																},
																"nativeSrc": "8670:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8670:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8663:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8663:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8322:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8456:3:13",
														"nodeType": "YulTypedName",
														"src": "8456:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8464:3:13",
														"nodeType": "YulTypedName",
														"src": "8464:3:13",
														"type": ""
													}
												],
												"src": "8322:366:13"
											},
											{
												"body": {
													"nativeSrc": "8865:248:13",
													"nodeType": "YulBlock",
													"src": "8865:248:13",
													"statements": [
														{
															"nativeSrc": "8875:26:13",
															"nodeType": "YulAssignment",
															"src": "8875:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8887:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8887:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8898:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8898:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8883:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8883:3:13"
																},
																"nativeSrc": "8883:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8883:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8875:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8875:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8922:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8922:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8933:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8933:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8918:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8918:3:13"
																		},
																		"nativeSrc": "8918:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8918:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8941:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8941:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8947:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8947:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8937:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8937:3:13"
																		},
																		"nativeSrc": "8937:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8937:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8911:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8911:6:13"
																},
																"nativeSrc": "8911:47:13",
																"nodeType": "YulFunctionCall",
																"src": "8911:47:13"
															},
															"nativeSrc": "8911:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "8911:47:13"
														},
														{
															"nativeSrc": "8967:139:13",
															"nodeType": "YulAssignment",
															"src": "8967:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9101:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9101:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8975:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "8975:124:13"
																},
																"nativeSrc": "8975:131:13",
																"nodeType": "YulFunctionCall",
																"src": "8975:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8967:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8967:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8694:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8845:9:13",
														"nodeType": "YulTypedName",
														"src": "8845:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8860:4:13",
														"nodeType": "YulTypedName",
														"src": "8860:4:13",
														"type": ""
													}
												],
												"src": "8694:419:13"
											},
											{
												"body": {
													"nativeSrc": "9225:76:13",
													"nodeType": "YulBlock",
													"src": "9225:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9247:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9255:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9255:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9243:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9243:3:13"
																		},
																		"nativeSrc": "9243:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9243:14:13"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820657468657220666f72206c697374696e6720666565",
																		"kind": "string",
																		"nativeSrc": "9259:34:13",
																		"nodeType": "YulLiteral",
																		"src": "9259:34:13",
																		"type": "",
																		"value": "Not enough ether for listing fee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9236:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9236:6:13"
																},
																"nativeSrc": "9236:58:13",
																"nodeType": "YulFunctionCall",
																"src": "9236:58:13"
															},
															"nativeSrc": "9236:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "9236:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f",
												"nativeSrc": "9119:182:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9217:6:13",
														"nodeType": "YulTypedName",
														"src": "9217:6:13",
														"type": ""
													}
												],
												"src": "9119:182:13"
											},
											{
												"body": {
													"nativeSrc": "9453:220:13",
													"nodeType": "YulBlock",
													"src": "9453:220:13",
													"statements": [
														{
															"nativeSrc": "9463:74:13",
															"nodeType": "YulAssignment",
															"src": "9463:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9529:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9529:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9534:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9534:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9470:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9470:58:13"
																},
																"nativeSrc": "9470:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9470:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9463:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9463:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9635:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9635:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f",
																	"nativeSrc": "9546:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "9546:88:13"
																},
																"nativeSrc": "9546:93:13",
																"nodeType": "YulFunctionCall",
																"src": "9546:93:13"
															},
															"nativeSrc": "9546:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "9546:93:13"
														},
														{
															"nativeSrc": "9648:19:13",
															"nodeType": "YulAssignment",
															"src": "9648:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9659:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9659:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9664:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9664:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9655:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9655:3:13"
																},
																"nativeSrc": "9655:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9655:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9648:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9648:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9307:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9441:3:13",
														"nodeType": "YulTypedName",
														"src": "9441:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9449:3:13",
														"nodeType": "YulTypedName",
														"src": "9449:3:13",
														"type": ""
													}
												],
												"src": "9307:366:13"
											},
											{
												"body": {
													"nativeSrc": "9850:248:13",
													"nodeType": "YulBlock",
													"src": "9850:248:13",
													"statements": [
														{
															"nativeSrc": "9860:26:13",
															"nodeType": "YulAssignment",
															"src": "9860:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9872:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9872:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9883:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9883:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9868:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9868:3:13"
																},
																"nativeSrc": "9868:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9868:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9860:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9860:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9907:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9907:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9918:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9918:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9903:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9903:3:13"
																		},
																		"nativeSrc": "9903:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9903:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9926:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9926:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9932:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9932:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9922:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9922:3:13"
																		},
																		"nativeSrc": "9922:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9922:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9896:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9896:6:13"
																},
																"nativeSrc": "9896:47:13",
																"nodeType": "YulFunctionCall",
																"src": "9896:47:13"
															},
															"nativeSrc": "9896:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "9896:47:13"
														},
														{
															"nativeSrc": "9952:139:13",
															"nodeType": "YulAssignment",
															"src": "9952:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10086:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10086:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9960:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "9960:124:13"
																},
																"nativeSrc": "9960:131:13",
																"nodeType": "YulFunctionCall",
																"src": "9960:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9952:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9952:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9679:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9830:9:13",
														"nodeType": "YulTypedName",
														"src": "9830:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9845:4:13",
														"nodeType": "YulTypedName",
														"src": "9845:4:13",
														"type": ""
													}
												],
												"src": "9679:419:13"
											},
											{
												"body": {
													"nativeSrc": "10169:53:13",
													"nodeType": "YulBlock",
													"src": "10169:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10186:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10186:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10209:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10209:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10191:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "10191:17:13"
																		},
																		"nativeSrc": "10191:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10191:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10179:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10179:6:13"
																},
																"nativeSrc": "10179:37:13",
																"nodeType": "YulFunctionCall",
																"src": "10179:37:13"
															},
															"nativeSrc": "10179:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "10179:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10104:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10157:5:13",
														"nodeType": "YulTypedName",
														"src": "10157:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10164:3:13",
														"nodeType": "YulTypedName",
														"src": "10164:3:13",
														"type": ""
													}
												],
												"src": "10104:118:13"
											},
											{
												"body": {
													"nativeSrc": "10382:288:13",
													"nodeType": "YulBlock",
													"src": "10382:288:13",
													"statements": [
														{
															"nativeSrc": "10392:26:13",
															"nodeType": "YulAssignment",
															"src": "10392:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10404:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10404:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10415:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10415:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10400:3:13"
																},
																"nativeSrc": "10400:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10400:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10392:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10392:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10472:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10472:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10485:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10485:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10496:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10496:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10481:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10481:3:13"
																		},
																		"nativeSrc": "10481:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10481:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10428:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10428:43:13"
																},
																"nativeSrc": "10428:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10428:71:13"
															},
															"nativeSrc": "10428:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10428:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10553:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10553:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10566:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10566:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10577:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10577:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10562:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10562:3:13"
																		},
																		"nativeSrc": "10562:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10562:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10509:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10509:43:13"
																},
																"nativeSrc": "10509:72:13",
																"nodeType": "YulFunctionCall",
																"src": "10509:72:13"
															},
															"nativeSrc": "10509:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "10509:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10635:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10635:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10648:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10648:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10659:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10659:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10644:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10644:3:13"
																		},
																		"nativeSrc": "10644:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10644:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10591:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10591:43:13"
																},
																"nativeSrc": "10591:72:13",
																"nodeType": "YulFunctionCall",
																"src": "10591:72:13"
															},
															"nativeSrc": "10591:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "10591:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10228:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10338:9:13",
														"nodeType": "YulTypedName",
														"src": "10338:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10350:6:13",
														"nodeType": "YulTypedName",
														"src": "10350:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10358:6:13",
														"nodeType": "YulTypedName",
														"src": "10358:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10366:6:13",
														"nodeType": "YulTypedName",
														"src": "10366:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10377:4:13",
														"nodeType": "YulTypedName",
														"src": "10377:4:13",
														"type": ""
													}
												],
												"src": "10228:442:13"
											},
											{
												"body": {
													"nativeSrc": "10719:128:13",
													"nodeType": "YulBlock",
													"src": "10719:128:13",
													"statements": [
														{
															"nativeSrc": "10729:33:13",
															"nodeType": "YulAssignment",
															"src": "10729:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10756:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10756:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10738:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10738:17:13"
																},
																"nativeSrc": "10738:24:13",
																"nodeType": "YulFunctionCall",
																"src": "10738:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10729:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10729:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10790:22:13",
																"nodeType": "YulBlock",
																"src": "10790:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10792:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10792:16:13"
																			},
																			"nativeSrc": "10792:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10792:18:13"
																		},
																		"nativeSrc": "10792:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10792:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10777:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10777:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10784:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10784:4:13",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10774:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10774:2:13"
																},
																"nativeSrc": "10774:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10774:15:13"
															},
															"nativeSrc": "10771:41:13",
															"nodeType": "YulIf",
															"src": "10771:41:13"
														},
														{
															"nativeSrc": "10821:20:13",
															"nodeType": "YulAssignment",
															"src": "10821:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10832:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10832:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10839:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10839:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10828:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10828:3:13"
																},
																"nativeSrc": "10828:13:13",
																"nodeType": "YulFunctionCall",
																"src": "10828:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10821:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10821:3:13"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "10676:171:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10705:5:13",
														"nodeType": "YulTypedName",
														"src": "10705:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10715:3:13",
														"nodeType": "YulTypedName",
														"src": "10715:3:13",
														"type": ""
													}
												],
												"src": "10676:171:13"
											},
											{
												"body": {
													"nativeSrc": "11063:454:13",
													"nodeType": "YulBlock",
													"src": "11063:454:13",
													"statements": [
														{
															"nativeSrc": "11073:27:13",
															"nodeType": "YulAssignment",
															"src": "11073:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11085:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11085:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11096:3:13",
																		"nodeType": "YulLiteral",
																		"src": "11096:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11081:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11081:3:13"
																},
																"nativeSrc": "11081:19:13",
																"nodeType": "YulFunctionCall",
																"src": "11081:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11073:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11073:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11154:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11154:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11167:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11167:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11178:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11178:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11163:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11163:3:13"
																		},
																		"nativeSrc": "11163:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11163:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11110:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11110:43:13"
																},
																"nativeSrc": "11110:71:13",
																"nodeType": "YulFunctionCall",
																"src": "11110:71:13"
															},
															"nativeSrc": "11110:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "11110:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11235:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11235:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11248:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11248:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11259:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11259:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11244:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11244:3:13"
																		},
																		"nativeSrc": "11244:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11244:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11191:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11191:43:13"
																},
																"nativeSrc": "11191:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11191:72:13"
															},
															"nativeSrc": "11191:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11191:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11317:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11317:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11330:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11330:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11341:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11341:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11326:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11326:3:13"
																		},
																		"nativeSrc": "11326:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11326:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11273:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11273:43:13"
																},
																"nativeSrc": "11273:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11273:72:13"
															},
															"nativeSrc": "11273:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11273:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11399:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11399:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11412:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11412:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11423:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11423:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11408:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11408:3:13"
																		},
																		"nativeSrc": "11408:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11408:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11355:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11355:43:13"
																},
																"nativeSrc": "11355:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11355:72:13"
															},
															"nativeSrc": "11355:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11355:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "11481:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11481:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11494:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11494:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11505:3:13",
																				"nodeType": "YulLiteral",
																				"src": "11505:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11490:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11490:3:13"
																		},
																		"nativeSrc": "11490:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11490:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11437:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11437:43:13"
																},
																"nativeSrc": "11437:73:13",
																"nodeType": "YulFunctionCall",
																"src": "11437:73:13"
															},
															"nativeSrc": "11437:73:13",
															"nodeType": "YulExpressionStatement",
															"src": "11437:73:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_address_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10853:664:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11003:9:13",
														"nodeType": "YulTypedName",
														"src": "11003:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11015:6:13",
														"nodeType": "YulTypedName",
														"src": "11015:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11023:6:13",
														"nodeType": "YulTypedName",
														"src": "11023:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11031:6:13",
														"nodeType": "YulTypedName",
														"src": "11031:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11039:6:13",
														"nodeType": "YulTypedName",
														"src": "11039:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11047:6:13",
														"nodeType": "YulTypedName",
														"src": "11047:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11058:4:13",
														"nodeType": "YulTypedName",
														"src": "11058:4:13",
														"type": ""
													}
												],
												"src": "10853:664:13"
											},
											{
												"body": {
													"nativeSrc": "11629:119:13",
													"nodeType": "YulBlock",
													"src": "11629:119:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11651:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11651:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11659:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11659:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11647:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11647:3:13"
																		},
																		"nativeSrc": "11647:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11647:14:13"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67",
																		"kind": "string",
																		"nativeSrc": "11663:34:13",
																		"nodeType": "YulLiteral",
																		"src": "11663:34:13",
																		"type": "",
																		"value": "Not enough ether to cover asking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11640:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11640:6:13"
																},
																"nativeSrc": "11640:58:13",
																"nodeType": "YulFunctionCall",
																"src": "11640:58:13"
															},
															"nativeSrc": "11640:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "11640:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11719:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11719:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11727:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11727:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11715:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11715:3:13"
																		},
																		"nativeSrc": "11715:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11715:15:13"
																	},
																	{
																		"hexValue": "207072696365",
																		"kind": "string",
																		"nativeSrc": "11732:8:13",
																		"nodeType": "YulLiteral",
																		"src": "11732:8:13",
																		"type": "",
																		"value": " price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11708:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11708:6:13"
																},
																"nativeSrc": "11708:33:13",
																"nodeType": "YulFunctionCall",
																"src": "11708:33:13"
															},
															"nativeSrc": "11708:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "11708:33:13"
														}
													]
												},
												"name": "store_literal_in_memory_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e",
												"nativeSrc": "11523:225:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11621:6:13",
														"nodeType": "YulTypedName",
														"src": "11621:6:13",
														"type": ""
													}
												],
												"src": "11523:225:13"
											},
											{
												"body": {
													"nativeSrc": "11900:220:13",
													"nodeType": "YulBlock",
													"src": "11900:220:13",
													"statements": [
														{
															"nativeSrc": "11910:74:13",
															"nodeType": "YulAssignment",
															"src": "11910:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11976:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11976:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11981:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11981:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11917:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11917:58:13"
																},
																"nativeSrc": "11917:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11917:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11910:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11910:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12082:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12082:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e",
																	"nativeSrc": "11993:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11993:88:13"
																},
																"nativeSrc": "11993:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11993:93:13"
															},
															"nativeSrc": "11993:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11993:93:13"
														},
														{
															"nativeSrc": "12095:19:13",
															"nodeType": "YulAssignment",
															"src": "12095:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12106:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12106:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12111:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12111:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12102:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12102:3:13"
																},
																"nativeSrc": "12102:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12102:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12095:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12095:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11754:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11888:3:13",
														"nodeType": "YulTypedName",
														"src": "11888:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11896:3:13",
														"nodeType": "YulTypedName",
														"src": "11896:3:13",
														"type": ""
													}
												],
												"src": "11754:366:13"
											},
											{
												"body": {
													"nativeSrc": "12297:248:13",
													"nodeType": "YulBlock",
													"src": "12297:248:13",
													"statements": [
														{
															"nativeSrc": "12307:26:13",
															"nodeType": "YulAssignment",
															"src": "12307:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12319:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12319:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12330:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12330:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12315:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12315:3:13"
																},
																"nativeSrc": "12315:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12315:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12307:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12307:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12354:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12354:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12365:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12365:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12350:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12350:3:13"
																		},
																		"nativeSrc": "12350:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12350:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12373:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12373:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12379:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12379:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12369:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12369:3:13"
																		},
																		"nativeSrc": "12369:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12369:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12343:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12343:6:13"
																},
																"nativeSrc": "12343:47:13",
																"nodeType": "YulFunctionCall",
																"src": "12343:47:13"
															},
															"nativeSrc": "12343:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "12343:47:13"
														},
														{
															"nativeSrc": "12399:139:13",
															"nodeType": "YulAssignment",
															"src": "12399:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12533:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12533:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12407:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "12407:124:13"
																},
																"nativeSrc": "12407:131:13",
																"nodeType": "YulFunctionCall",
																"src": "12407:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12399:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12399:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12126:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12277:9:13",
														"nodeType": "YulTypedName",
														"src": "12277:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12292:4:13",
														"nodeType": "YulTypedName",
														"src": "12292:4:13",
														"type": ""
													}
												],
												"src": "12126:419:13"
											},
											{
												"body": {
													"nativeSrc": "12583:28:13",
													"nodeType": "YulBlock",
													"src": "12583:28:13",
													"statements": [
														{
															"nativeSrc": "12593:12:13",
															"nodeType": "YulAssignment",
															"src": "12593:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "12600:5:13",
																"nodeType": "YulIdentifier",
																"src": "12600:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12593:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12593:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "12551:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12569:5:13",
														"nodeType": "YulTypedName",
														"src": "12569:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12579:3:13",
														"nodeType": "YulTypedName",
														"src": "12579:3:13",
														"type": ""
													}
												],
												"src": "12551:60:13"
											},
											{
												"body": {
													"nativeSrc": "12677:82:13",
													"nodeType": "YulBlock",
													"src": "12677:82:13",
													"statements": [
														{
															"nativeSrc": "12687:66:13",
															"nodeType": "YulAssignment",
															"src": "12687:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12745:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "12745:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "12727:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "12727:17:13"
																				},
																				"nativeSrc": "12727:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12727:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "12718:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "12718:8:13"
																		},
																		"nativeSrc": "12718:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12718:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "12700:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "12700:17:13"
																},
																"nativeSrc": "12700:53:13",
																"nodeType": "YulFunctionCall",
																"src": "12700:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12687:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "12687:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "12617:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12657:5:13",
														"nodeType": "YulTypedName",
														"src": "12657:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12667:9:13",
														"nodeType": "YulTypedName",
														"src": "12667:9:13",
														"type": ""
													}
												],
												"src": "12617:142:13"
											},
											{
												"body": {
													"nativeSrc": "12825:66:13",
													"nodeType": "YulBlock",
													"src": "12825:66:13",
													"statements": [
														{
															"nativeSrc": "12835:50:13",
															"nodeType": "YulAssignment",
															"src": "12835:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12879:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12879:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "12848:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "12848:30:13"
																},
																"nativeSrc": "12848:37:13",
																"nodeType": "YulFunctionCall",
																"src": "12848:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12835:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "12835:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "12765:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12805:5:13",
														"nodeType": "YulTypedName",
														"src": "12805:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12815:9:13",
														"nodeType": "YulTypedName",
														"src": "12815:9:13",
														"type": ""
													}
												],
												"src": "12765:126:13"
											},
											{
												"body": {
													"nativeSrc": "12965:66:13",
													"nodeType": "YulBlock",
													"src": "12965:66:13",
													"statements": [
														{
															"nativeSrc": "12975:50:13",
															"nodeType": "YulAssignment",
															"src": "12975:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13019:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13019:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "12988:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "12988:30:13"
																},
																"nativeSrc": "12988:37:13",
																"nodeType": "YulFunctionCall",
																"src": "12988:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12975:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "12975:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nativeSrc": "12897:134:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12945:5:13",
														"nodeType": "YulTypedName",
														"src": "12945:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12955:9:13",
														"nodeType": "YulTypedName",
														"src": "12955:9:13",
														"type": ""
													}
												],
												"src": "12897:134:13"
											},
											{
												"body": {
													"nativeSrc": "13110:74:13",
													"nodeType": "YulBlock",
													"src": "13110:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13127:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13127:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13171:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "13171:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nativeSrc": "13132:38:13",
																			"nodeType": "YulIdentifier",
																			"src": "13132:38:13"
																		},
																		"nativeSrc": "13132:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13132:45:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13120:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13120:6:13"
																},
																"nativeSrc": "13120:58:13",
																"nodeType": "YulFunctionCall",
																"src": "13120:58:13"
															},
															"nativeSrc": "13120:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "13120:58:13"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nativeSrc": "13037:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13098:5:13",
														"nodeType": "YulTypedName",
														"src": "13098:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13105:3:13",
														"nodeType": "YulTypedName",
														"src": "13105:3:13",
														"type": ""
													}
												],
												"src": "13037:147:13"
											},
											{
												"body": {
													"nativeSrc": "13352:296:13",
													"nodeType": "YulBlock",
													"src": "13352:296:13",
													"statements": [
														{
															"nativeSrc": "13362:26:13",
															"nodeType": "YulAssignment",
															"src": "13362:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13374:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13374:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13385:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13385:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13370:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13370:3:13"
																},
																"nativeSrc": "13370:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13370:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13362:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13362:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13442:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13442:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13455:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13455:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13466:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13466:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13451:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13451:3:13"
																		},
																		"nativeSrc": "13451:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13451:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13398:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13398:43:13"
																},
																"nativeSrc": "13398:71:13",
																"nodeType": "YulFunctionCall",
																"src": "13398:71:13"
															},
															"nativeSrc": "13398:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "13398:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13531:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13531:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13544:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13544:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13555:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13555:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13540:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13540:3:13"
																		},
																		"nativeSrc": "13540:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13540:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "13479:51:13",
																	"nodeType": "YulIdentifier",
																	"src": "13479:51:13"
																},
																"nativeSrc": "13479:80:13",
																"nodeType": "YulFunctionCall",
																"src": "13479:80:13"
															},
															"nativeSrc": "13479:80:13",
															"nodeType": "YulExpressionStatement",
															"src": "13479:80:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13613:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13613:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13626:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13626:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13637:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13637:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13622:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13622:3:13"
																		},
																		"nativeSrc": "13622:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13622:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13569:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13569:43:13"
																},
																"nativeSrc": "13569:72:13",
																"nodeType": "YulFunctionCall",
																"src": "13569:72:13"
															},
															"nativeSrc": "13569:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "13569:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13190:458:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13308:9:13",
														"nodeType": "YulTypedName",
														"src": "13308:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13320:6:13",
														"nodeType": "YulTypedName",
														"src": "13320:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13328:6:13",
														"nodeType": "YulTypedName",
														"src": "13328:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13336:6:13",
														"nodeType": "YulTypedName",
														"src": "13336:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13347:4:13",
														"nodeType": "YulTypedName",
														"src": "13347:4:13",
														"type": ""
													}
												],
												"src": "13190:458:13"
											},
											{
												"body": {
													"nativeSrc": "13880:470:13",
													"nodeType": "YulBlock",
													"src": "13880:470:13",
													"statements": [
														{
															"nativeSrc": "13890:27:13",
															"nodeType": "YulAssignment",
															"src": "13890:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13902:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13902:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13913:3:13",
																		"nodeType": "YulLiteral",
																		"src": "13913:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13898:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13898:3:13"
																},
																"nativeSrc": "13898:19:13",
																"nodeType": "YulFunctionCall",
																"src": "13898:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13890:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13890:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13971:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13971:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13984:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13984:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13995:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13995:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13980:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13980:3:13"
																		},
																		"nativeSrc": "13980:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13980:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13927:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13927:43:13"
																},
																"nativeSrc": "13927:71:13",
																"nodeType": "YulFunctionCall",
																"src": "13927:71:13"
															},
															"nativeSrc": "13927:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "13927:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14052:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14052:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14065:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14065:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14076:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14076:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14061:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14061:3:13"
																		},
																		"nativeSrc": "14061:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14061:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14008:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14008:43:13"
																},
																"nativeSrc": "14008:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14008:72:13"
															},
															"nativeSrc": "14008:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14008:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14142:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14142:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14155:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14155:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14166:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14166:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14151:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14151:3:13"
																		},
																		"nativeSrc": "14151:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14151:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "14090:51:13",
																	"nodeType": "YulIdentifier",
																	"src": "14090:51:13"
																},
																"nativeSrc": "14090:80:13",
																"nodeType": "YulFunctionCall",
																"src": "14090:80:13"
															},
															"nativeSrc": "14090:80:13",
															"nodeType": "YulExpressionStatement",
															"src": "14090:80:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14232:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14232:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14245:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14245:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14256:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14256:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14241:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14241:3:13"
																		},
																		"nativeSrc": "14241:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14241:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "14180:51:13",
																	"nodeType": "YulIdentifier",
																	"src": "14180:51:13"
																},
																"nativeSrc": "14180:80:13",
																"nodeType": "YulFunctionCall",
																"src": "14180:80:13"
															},
															"nativeSrc": "14180:80:13",
															"nodeType": "YulExpressionStatement",
															"src": "14180:80:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "14314:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14314:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14327:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14327:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14338:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14338:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14323:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14323:3:13"
																		},
																		"nativeSrc": "14323:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14323:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14270:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14270:43:13"
																},
																"nativeSrc": "14270:73:13",
																"nodeType": "YulFunctionCall",
																"src": "14270:73:13"
															},
															"nativeSrc": "14270:73:13",
															"nodeType": "YulExpressionStatement",
															"src": "14270:73:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13654:696:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13820:9:13",
														"nodeType": "YulTypedName",
														"src": "13820:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13832:6:13",
														"nodeType": "YulTypedName",
														"src": "13832:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13840:6:13",
														"nodeType": "YulTypedName",
														"src": "13840:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13848:6:13",
														"nodeType": "YulTypedName",
														"src": "13848:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13856:6:13",
														"nodeType": "YulTypedName",
														"src": "13856:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13864:6:13",
														"nodeType": "YulTypedName",
														"src": "13864:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13875:4:13",
														"nodeType": "YulTypedName",
														"src": "13875:4:13",
														"type": ""
													}
												],
												"src": "13654:696:13"
											},
											{
												"body": {
													"nativeSrc": "14401:149:13",
													"nodeType": "YulBlock",
													"src": "14401:149:13",
													"statements": [
														{
															"nativeSrc": "14411:25:13",
															"nodeType": "YulAssignment",
															"src": "14411:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14434:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14434:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14416:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14416:17:13"
																},
																"nativeSrc": "14416:20:13",
																"nodeType": "YulFunctionCall",
																"src": "14416:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14411:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14411:1:13"
																}
															]
														},
														{
															"nativeSrc": "14445:25:13",
															"nodeType": "YulAssignment",
															"src": "14445:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14468:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14468:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14450:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14450:17:13"
																},
																"nativeSrc": "14450:20:13",
																"nodeType": "YulFunctionCall",
																"src": "14450:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14445:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14445:1:13"
																}
															]
														},
														{
															"nativeSrc": "14479:17:13",
															"nodeType": "YulAssignment",
															"src": "14479:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14491:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14491:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14494:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14494:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14487:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14487:3:13"
																},
																"nativeSrc": "14487:9:13",
																"nodeType": "YulFunctionCall",
																"src": "14487:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14479:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14479:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14521:22:13",
																"nodeType": "YulBlock",
																"src": "14521:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14523:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "14523:16:13"
																			},
																			"nativeSrc": "14523:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14523:18:13"
																		},
																		"nativeSrc": "14523:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14523:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14512:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14512:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14518:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14518:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14509:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14509:2:13"
																},
																"nativeSrc": "14509:11:13",
																"nodeType": "YulFunctionCall",
																"src": "14509:11:13"
															},
															"nativeSrc": "14506:37:13",
															"nodeType": "YulIf",
															"src": "14506:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14356:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14387:1:13",
														"nodeType": "YulTypedName",
														"src": "14387:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14390:1:13",
														"nodeType": "YulTypedName",
														"src": "14390:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14396:4:13",
														"nodeType": "YulTypedName",
														"src": "14396:4:13",
														"type": ""
													}
												],
												"src": "14356:194:13"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Marketplace.NFT -> struct Marketplace.NFT\n    function abi_encode_t_struct$_NFT_$2882_memory_ptr_to_t_struct$_NFT_$2882_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // nftContract\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // listed\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_NFT_$2882_memory_ptr_to_t_struct$_NFT_$2882_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_NFT_$2882_memory_ptr_to_t_struct$_NFT_$2882_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Marketplace.NFT[] -> struct Marketplace.NFT[]\n    function abi_encode_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_NFT_$2882_memory_ptr_to_t_struct$_NFT_$2882_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be at least 1 wei\")\n\n    }\n\n    function abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ether for listing fee\")\n\n    }\n\n    function abi_encode_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_address_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ether to cover asking\")\n\n        mstore(add(memPtr, 32), \" price\")\n\n    }\n\n    function abi_encode_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061006f575f3560e01c806334f5b6241161004d57806334f5b624146100f15780634ddf4f8f1461010d5780638d6cb3fb14610129578063c922b17c146101535761006f565b8063047b07bf146100735780631f4cc4db1461009d5780632b86ae38146100c7575b5f80fd5b34801561007e575f80fd5b5061008761016f565b6040516100949190611440565b60405180910390f35b3480156100a8575f80fd5b506100b161047e565b6040516100be9190611440565b60405180910390f35b3480156100d2575f80fd5b506100db6107f9565b6040516100e8919061146f565b60405180910390f35b61010b600480360381019061010691906114e0565b6107ff565b005b61012760048036038101906101229190611530565b610a18565b005b348015610134575f80fd5b5061013d610c3c565b60405161014a9190611440565b60405180910390f35b61016d600480360381019061016891906114e0565b610e82565b005b60605f60025490505f805b82811015610210573373ffffffffffffffffffffffffffffffffffffffff1660055f6001846101a9919061159b565b81526020019081526020015f206003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102035781806101ff906115ce565b9250505b808060010191505061017a565b505f8167ffffffffffffffff81111561022c5761022b611615565b5b60405190808252806020026020018201604052801561026557816020015b61025261121a565b81526020019060019003908161024a5790505b5090505f805b84811015610473573373ffffffffffffffffffffffffffffffffffffffff1660055f60018461029a919061159b565b81526020019081526020015f206003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104665760055f6001836102f5919061159b565b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015f9054906101000a900460ff16151515158152505083838151811061044c5761044b611642565b5b60200260200101819052508180610462906115ce565b9250505b808060010191505061026b565b508194505050505090565b60605f60025490505f805b82811015610555573373ffffffffffffffffffffffffffffffffffffffff1660055f6001846104b8919061159b565b81526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610534575060055f600183610516919061159b565b81526020019081526020015f206005015f9054906101000a900460ff165b15610548578180610544906115ce565b9250505b8080600101915050610489565b505f8167ffffffffffffffff81111561057157610570611615565b5b6040519080825280602002602001820160405280156105aa57816020015b61059761121a565b81526020019060019003908161058f5790505b5090505f805b848110156107ee573373ffffffffffffffffffffffffffffffffffffffff1660055f6001846105df919061159b565b81526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561065b575060055f60018361063d919061159b565b81526020019081526020015f206005015f9054906101000a900460ff165b156107e15760055f600183610670919061159b565b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015f9054906101000a900460ff1615151515815250508383815181106107c7576107c6611642565b5b602002602001018190525081806107dd906115ce565b9250505b80806001019150506105b0565b508194505050505090565b60035481565b6108076111cd565b5f8111610849576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610840906116c9565b60405180910390fd5b600354341461088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088490611731565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016108ca9392919061175e565b5f604051808303815f87803b1580156108e1575f80fd5b505af11580156108f3573d5f803e3d5ffd5b505050505f60055f8481526020019081526020015f20905033816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555030816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001816005015f6101000a81548160ff02191690831515021790555081816004018190555060015f8154809291906109c690611793565b91905055507fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d198484333086604051610a029594939291906117ba565b60405180910390a150610a13611211565b505050565b610a206111cd565b5f60055f8381526020019081526020015f2090508060040154341015610a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a729061187b565b60405180910390fd5b5f339050816002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f19350505050158015610ae5573d5f803e3d5ffd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd308385600101546040518463ffffffff1660e01b8152600401610b27939291906118f4565b5f604051808303815f87803b158015610b3e575f80fd5b505af1158015610b50573d5f803e3d5ffd5b5050505080826003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f826005015f6101000a81548160ff02191690831515021790555060015f815480929190610bc3906115ce565b91905055507f16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd2848360010154846002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168434604051610c26959493929190611929565b60405180910390a15050610c38611211565b5050565b60605f60025490505f60015482610c53919061197a565b90505f8167ffffffffffffffff811115610c7057610c6f611615565b5b604051908082528060200260200182016040528015610ca957816020015b610c9661121a565b815260200190600190039081610c8e5790505b5090505f805b84811015610e775760055f600183610cc7919061159b565b81526020019081526020015f206005015f9054906101000a900460ff1615610e6a5760055f600183610cf9919061159b565b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015f9054906101000a900460ff161515151581525050838381518110610e5057610e4f611642565b5b60200260200101819052508180610e66906115ce565b9250505b8080600101915050610caf565b508194505050505090565b610e8a6111cd565b5f8111610ecc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec3906116c9565b60405180910390fd5b6003543414610f10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0790611731565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610f4d9392919061175e565b5f604051808303815f87803b158015610f64575f80fd5b505af1158015610f76573d5f803e3d5ffd5b5050505060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60035490811502906040515f60405180830381858888f19350505050158015610fe0573d5f803e3d5ffd5b5060025f815480929190610ff3906115ce565b91905055506040518060c001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016001151581525060055f8481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015f6101000a81548160ff0219169083151502179055509050507fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d1983833330856040516111b89594939291906117ba565b60405180910390a16111c8611211565b505050565b60025f5403611208576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b60015f81905550565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112e0826112b7565b9050919050565b6112f0816112d6565b82525050565b5f819050919050565b611308816112f6565b82525050565b5f611318826112b7565b9050919050565b6113288161130e565b82525050565b5f8115159050919050565b6113428161132e565b82525050565b60c082015f82015161135c5f8501826112e7565b50602082015161136f60208501826112ff565b506040820151611382604085018261131f565b506060820151611395606085018261131f565b5060808201516113a860808501826112ff565b5060a08201516113bb60a0850182611339565b50505050565b5f6113cc8383611348565b60c08301905092915050565b5f602082019050919050565b5f6113ee8261128e565b6113f88185611298565b9350611403836112a8565b805f5b8381101561143357815161141a88826113c1565b9750611425836113d8565b925050600181019050611406565b5085935050505092915050565b5f6020820190508181035f83015261145881846113e4565b905092915050565b611469816112f6565b82525050565b5f6020820190506114825f830184611460565b92915050565b5f80fd5b611495816112d6565b811461149f575f80fd5b50565b5f813590506114b08161148c565b92915050565b6114bf816112f6565b81146114c9575f80fd5b50565b5f813590506114da816114b6565b92915050565b5f805f606084860312156114f7576114f6611488565b5b5f611504868287016114a2565b9350506020611515868287016114cc565b9250506040611526868287016114cc565b9150509250925092565b5f806040838503121561154657611545611488565b5b5f611553858286016114a2565b9250506020611564858286016114cc565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115a5826112f6565b91506115b0836112f6565b92508282019050808211156115c8576115c761156e565b5b92915050565b5f6115d8826112f6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361160a5761160961156e565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f5072696365206d757374206265206174206c65617374203120776569000000005f82015250565b5f6116b3601c8361166f565b91506116be8261167f565b602082019050919050565b5f6020820190508181035f8301526116e0816116a7565b9050919050565b7f4e6f7420656e6f75676820657468657220666f72206c697374696e67206665655f82015250565b5f61171b60208361166f565b9150611726826116e7565b602082019050919050565b5f6020820190508181035f8301526117488161170f565b9050919050565b611758816112d6565b82525050565b5f6060820190506117715f83018661174f565b61177e602083018561174f565b61178b6040830184611460565b949350505050565b5f61179d826112f6565b91505f82036117af576117ae61156e565b5b600182039050919050565b5f60a0820190506117cd5f83018861174f565b6117da6020830187611460565b6117e7604083018661174f565b6117f4606083018561174f565b6118016080830184611460565b9695505050505050565b7f4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e675f8201527f2070726963650000000000000000000000000000000000000000000000000000602082015250565b5f61186560268361166f565b91506118708261180b565b604082019050919050565b5f6020820190508181035f83015261189281611859565b9050919050565b5f819050919050565b5f6118bc6118b76118b2846112b7565b611899565b6112b7565b9050919050565b5f6118cd826118a2565b9050919050565b5f6118de826118c3565b9050919050565b6118ee816118d4565b82525050565b5f6060820190506119075f83018661174f565b61191460208301856118e5565b6119216040830184611460565b949350505050565b5f60a08201905061193c5f83018861174f565b6119496020830187611460565b61195660408301866118e5565b61196360608301856118e5565b6119706080830184611460565b9695505050505050565b5f611984826112f6565b915061198f836112f6565b92508282039050818111156119a7576119a661156e565b5b9291505056fea2646970667358221220e4ffa062a6d229a4c5913d3c5afc5982a845a7443aea272a1183b48a92a3c31464736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34F5B624 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x34F5B624 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x4DDF4F8F EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x8D6CB3FB EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xC922B17C EQ PUSH2 0x153 JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x47B07BF EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x1F4CC4DB EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x2B86AE38 EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x16F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x210 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x203 JUMPI DUP2 DUP1 PUSH2 0x1FF SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x17A JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C JUMPI PUSH2 0x22B PUSH2 0x1615 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x265 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x252 PUSH2 0x121A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x24A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x473 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x466 JUMPI PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x44C JUMPI PUSH2 0x44B PUSH2 0x1642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x462 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x26B JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x555 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x534 JUMPI POP PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x548 JUMPI DUP2 DUP1 PUSH2 0x544 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x489 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1615 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5AA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x597 PUSH2 0x121A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x58F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7EE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x65B JUMPI POP PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7C7 JUMPI PUSH2 0x7C6 PUSH2 0x1642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x7DD SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5B0 JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x807 PUSH2 0x11CD JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x840 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x884 SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP ADDRESS DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x9C6 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 DUP5 DUP5 CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD PUSH2 0xA02 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0xA13 PUSH2 0x1211 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA20 PUSH2 0x11CD JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA72 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP DUP2 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAE5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP4 DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB27 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB3E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB50 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xBC3 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x16F1DBD97E6BF646D429ED186CCE832F1F7FD9907814293B83181E9970AB7BD2 DUP5 DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xC26 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0xC38 PUSH2 0x1211 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 SLOAD DUP3 PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x197A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC70 JUMPI PUSH2 0xC6F PUSH2 0x1615 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCA9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xC96 PUSH2 0x121A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC8E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE77 JUMPI PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0xCC7 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE6A JUMPI PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE50 JUMPI PUSH2 0xE4F PUSH2 0x1642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xE66 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xCAF JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xE8A PUSH2 0x11CD JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xECC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC3 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF07 SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF76 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFE0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFF3 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 DUP4 DUP4 CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD PUSH2 0x11B8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x11C8 PUSH2 0x1211 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12E0 DUP3 PUSH2 0x12B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F0 DUP2 PUSH2 0x12D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1308 DUP2 PUSH2 0x12F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1318 DUP3 PUSH2 0x12B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1328 DUP2 PUSH2 0x130E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1342 DUP2 PUSH2 0x132E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x135C PUSH0 DUP6 ADD DUP3 PUSH2 0x12E7 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x136F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x12FF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1382 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x131F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1395 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x131F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x13A8 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x12FF JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x13BB PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1339 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13CC DUP4 DUP4 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13EE DUP3 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x13F8 DUP2 DUP6 PUSH2 0x1298 JUMP JUMPDEST SWAP4 POP PUSH2 0x1403 DUP4 PUSH2 0x12A8 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1433 JUMPI DUP2 MLOAD PUSH2 0x141A DUP9 DUP3 PUSH2 0x13C1 JUMP JUMPDEST SWAP8 POP PUSH2 0x1425 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1406 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1458 DUP2 DUP5 PUSH2 0x13E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1469 DUP2 PUSH2 0x12F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1482 PUSH0 DUP4 ADD DUP5 PUSH2 0x1460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1495 DUP2 PUSH2 0x12D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x149F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B0 DUP2 PUSH2 0x148C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14BF DUP2 PUSH2 0x12F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x14C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DA DUP2 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F7 JUMPI PUSH2 0x14F6 PUSH2 0x1488 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1504 DUP7 DUP3 DUP8 ADD PUSH2 0x14A2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1515 DUP7 DUP3 DUP8 ADD PUSH2 0x14CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1526 DUP7 DUP3 DUP8 ADD PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1546 JUMPI PUSH2 0x1545 PUSH2 0x1488 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1553 DUP6 DUP3 DUP7 ADD PUSH2 0x14A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1564 DUP6 DUP3 DUP7 ADD PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15A5 DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B0 DUP4 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15C8 JUMPI PUSH2 0x15C7 PUSH2 0x156E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15D8 DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x160A JUMPI PUSH2 0x1609 PUSH2 0x156E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16B3 PUSH1 0x1C DUP4 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP PUSH2 0x16BE DUP3 PUSH2 0x167F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16E0 DUP2 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820657468657220666F72206C697374696E6720666565 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x171B PUSH1 0x20 DUP4 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP PUSH2 0x1726 DUP3 PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1748 DUP2 PUSH2 0x170F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1758 DUP2 PUSH2 0x12D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1771 PUSH0 DUP4 ADD DUP7 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x177E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x178B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1460 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x179D DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x17AF JUMPI PUSH2 0x17AE PUSH2 0x156E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x17CD PUSH0 DUP4 ADD DUP9 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x17DA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x17E7 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x17F4 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x1801 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1460 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67 PUSH0 DUP3 ADD MSTORE PUSH32 0x2070726963650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1865 PUSH1 0x26 DUP4 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP PUSH2 0x1870 DUP3 PUSH2 0x180B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1892 DUP2 PUSH2 0x1859 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18BC PUSH2 0x18B7 PUSH2 0x18B2 DUP5 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x1899 JUMP JUMPDEST PUSH2 0x12B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18CD DUP3 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18DE DUP3 PUSH2 0x18C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EE DUP2 PUSH2 0x18D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1907 PUSH0 DUP4 ADD DUP7 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x1914 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1921 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1460 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x193C PUSH0 DUP4 ADD DUP9 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x1949 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x1956 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1963 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1970 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1460 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1984 DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x198F DUP4 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19A7 JUMPI PUSH2 0x19A6 PUSH2 0x156E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SELFDESTRUCT LOG0 PUSH3 0xA6D229 LOG4 0xC5 SWAP2 RETURNDATASIZE EXTCODECOPY GAS 0xFC MSIZE DUP3 0xA8 GASLIMIT 0xA7 PREVRANDAO GASPRICE 0xEA 0x27 0x2A GT DUP4 0xB4 DUP11 SWAP3 LOG3 0xC3 EQ PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "183:4153:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3209:520;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3735:598;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2186:597;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1597:532;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2789:414;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;946:628;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3209:520;3251:12;3272:13;3288:9;;3272:25;;3304:15;3335:6;3330:126;3351:8;3347:1;:12;3330:126;;;3404:10;3379:35;;:8;:15;3392:1;3388;:5;;;;:::i;:::-;3379:15;;;;;;;;;;;:21;;;;;;;;;;;;:35;;;3375:74;;3427:12;;;;;:::i;:::-;;;;3375:74;3361:3;;;;;;;3330:126;;;;3464:17;3494:10;3484:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3464:41;;3512:14;3542:6;3537:169;3558:8;3554:1;:12;3537:169;;;3611:10;3586:35;;:8;:15;3599:1;3595;:5;;;;:::i;:::-;3586:15;;;;;;;;;;;:21;;;;;;;;;;;;:35;;;3582:117;;3652:8;:15;3665:1;3661;:5;;;;:::i;:::-;3652:15;;;;;;;;;;;3634:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;3639:9;3634:15;;;;;;;;:::i;:::-;;;;;;;:33;;;;3678:11;;;;;:::i;:::-;;;;3582:117;3568:3;;;;;;;3537:169;;;;3719:4;3712:11;;;;;;3209:520;:::o;3735:598::-;3783:12;3804:13;3820:9;;3804:25;;3836:21;3873:6;3868:159;3889:8;3885:1;:12;3868:159;;;3943:10;3917:36;;:8;:15;3930:1;3926;:5;;;;:::i;:::-;3917:15;;;;;;;;;;;:22;;;;;;;;;;;;:36;;;:62;;;;;3957:8;:15;3970:1;3966;:5;;;;:::i;:::-;3957:15;;;;;;;;;;;:22;;;;;;;;;;;;3917:62;3913:107;;;3992:18;;;;;:::i;:::-;;;;3913:107;3899:3;;;;;;;3868:159;;;;4035:17;4065:16;4055:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4035:47;;4089:14;4119:6;4114:196;4135:8;4131:1;:12;4114:196;;;4189:10;4163:36;;:8;:15;4176:1;4172;:5;;;;:::i;:::-;4163:15;;;;;;;;;;;:22;;;;;;;;;;;;:36;;;:62;;;;;4203:8;:15;4216:1;4212;:5;;;;:::i;:::-;4203:15;;;;;;;;;;;:22;;;;;;;;;;;;4163:62;4159:144;;;4256:8;:15;4269:1;4265;:5;;;;:::i;:::-;4256:15;;;;;;;;;;;4238:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;4243:9;4238:15;;;;;;;;:::i;:::-;;;;;;;:33;;;;4282:11;;;;;:::i;:::-;;;;4159:144;4145:3;;;;;;;4114:196;;;;4323:4;4316:11;;;;;;3735:598;:::o;288:30::-;;;;:::o;2186:597::-;2411:21:6;:19;:21::i;:::-;2313:1:12::1;2304:6;:10;2296:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;2375:11;;2362:9;:24;2354:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2440:12;2432:34;;;2467:10;2487:4;2494:8;2432:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2512:15;2530:8;:18;2539:8;2530:18;;;;;;;;;;;2512:36;;2576:10;2555:3;:10;;;:32;;;;;;;;;;;;;;;;;;2622:4;2594:3;:9;;;:34;;;;;;;;;;;;;;;;;;2648:4;2635:3;:10;;;:17;;;;;;;;;;;;;;;;;;2671:6;2659:3;:9;;:18;;;;2686:9;;:11;;;;;;;;;:::i;:::-;;;;;;2709:68;2719:12;2733:8;2743:10;2763:4;2770:6;2709:68;;;;;;;;;;:::i;:::-;;;;;;;;2289:494;2455:20:6::0;:18;:20::i;:::-;2186:597:12;;;:::o;1597:532::-;2411:21:6;:19;:21::i;:::-;1688:15:12::1;1706:8;:18;1715:8;1706:18;;;;;;;;;;;1688:36;;1752:3;:9;;;1739;:22;;1731:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1813:21;1845:10;1813:43;;1871:3;:10;;;;;;;;;;;;1863:28;;:39;1892:9;1863:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1917:12;1909:34;;;1952:4;1959:5;1966:3;:11;;;1909:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1997:5;1985:3;:9;;;:17;;;;;;;;;;;;;;;;;;2022:5;2009:3;:10;;;:18;;;;;;;;;;;;;;;;;;2036:9;;:11;;;;;;;;;:::i;:::-;;;;;;2059:64;2067:12;2081:3;:11;;;2094:3;:10;;;;;;;;;;;;2106:5;2113:9;2059:64;;;;;;;;;;:::i;:::-;;;;;;;;1681:448;;2455:20:6::0;:18;:20::i;:::-;1597:532:12;;:::o;2789:414::-;2835:12;2856:16;2875:9;;2856:28;;2891:23;2928:9;;2917:8;:20;;;;:::i;:::-;2891:46;;2946:17;2976:15;2966:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2946:46;;2999:14;3029:6;3024:156;3045:8;3041:1;:12;3024:156;;;3073:8;:15;3086:1;3082;:5;;;;:::i;:::-;3073:15;;;;;;;;;;;:22;;;;;;;;;;;;3069:104;;;3126:8;:15;3139:1;3135;:5;;;;:::i;:::-;3126:15;;;;;;;;;;;3108:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;3113:9;3108:15;;;;;;;;:::i;:::-;;;;;;;:33;;;;3152:11;;;;;:::i;:::-;;;;3069:104;3055:3;;;;;;;3024:156;;;;3193:4;3186:11;;;;;;2789:414;:::o;946:628::-;2411:21:6;:19;:21::i;:::-;1071:1:12::1;1062:6;:10;1054:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1133:11;;1120:9;:24;1112:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:12;1190:34;;;1225:10;1245:4;1252:8;1190:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1268:12;;;;;;;;;;;:21;;:34;1290:11;;1268:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1309:9;;:11;;;;;;;;;:::i;:::-;;;;;;1350:136;;;;;;;;1362:12;1350:136;;;;;;1383:8;1350:136;;;;1409:10;1350:136;;;;;;1445:4;1350:136;;;;;;1460:6;1350:136;;;;1475:4;1350:136;;;;::::0;1329:8:::1;:18;1338:8;1329:18;;;;;;;;;;;:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:68;1510:12;1524:8;1534:10;1554:4;1561:6;1500:68;;;;;;;;;;:::i;:::-;;;;;;;;2455:20:6::0;:18;:20::i;:::-;946:628:12;;;:::o;2491:315:6:-;1789:1;2620:7;;:18;2616:88;;2662:30;;;;;;;;;;;;;;2616:88;1789:1;2781:7;:17;;;;2491:315::o;2814:212::-;1746:1;2997:7;:21;;;;2814:212::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:135:13:-;95:6;129:5;123:12;113:22;;7:135;;;:::o;148:205::-;268:11;302:6;297:3;290:19;342:4;337:3;333:14;318:29;;148:205;;;;:::o;359:153::-;447:4;470:3;462:11;;500:4;495:3;491:14;483:22;;359:153;;;:::o;518:126::-;555:7;595:42;588:5;584:54;573:65;;518:126;;;:::o;650:96::-;687:7;716:24;734:5;716:24;:::i;:::-;705:35;;650:96;;;:::o;752:108::-;829:24;847:5;829:24;:::i;:::-;824:3;817:37;752:108;;:::o;866:77::-;903:7;932:5;921:16;;866:77;;;:::o;949:108::-;1026:24;1044:5;1026:24;:::i;:::-;1021:3;1014:37;949:108;;:::o;1063:104::-;1108:7;1137:24;1155:5;1137:24;:::i;:::-;1126:35;;1063:104;;;:::o;1173:132::-;1266:32;1292:5;1266:32;:::i;:::-;1261:3;1254:45;1173:132;;:::o;1311:90::-;1345:7;1388:5;1381:13;1374:21;1363:32;;1311:90;;;:::o;1407:99::-;1478:21;1493:5;1478:21;:::i;:::-;1473:3;1466:34;1407:99;;:::o;1568:1227::-;1697:4;1692:3;1688:14;1791:4;1784:5;1780:16;1774:23;1810:63;1867:4;1862:3;1858:14;1844:12;1810:63;:::i;:::-;1712:171;1968:4;1961:5;1957:16;1951:23;1987:63;2044:4;2039:3;2035:14;2021:12;1987:63;:::i;:::-;1893:167;2144:4;2137:5;2133:16;2127:23;2163:79;2236:4;2231:3;2227:14;2213:12;2163:79;:::i;:::-;2070:182;2335:4;2328:5;2324:16;2318:23;2354:79;2427:4;2422:3;2418:14;2404:12;2354:79;:::i;:::-;2262:181;2526:4;2519:5;2515:16;2509:23;2545:63;2602:4;2597:3;2593:14;2579:12;2545:63;:::i;:::-;2453:165;2702:4;2695:5;2691:16;2685:23;2721:57;2772:4;2767:3;2763:14;2749:12;2721:57;:::i;:::-;2628:160;1666:1129;1568:1227;;:::o;2801:263::-;2912:10;2933:88;3017:3;3009:6;2933:88;:::i;:::-;3053:4;3048:3;3044:14;3030:28;;2801:263;;;;:::o;3070:134::-;3161:4;3193;3188:3;3184:14;3176:22;;3070:134;;;:::o;3270:900::-;3431:3;3460:75;3529:5;3460:75;:::i;:::-;3551:107;3651:6;3646:3;3551:107;:::i;:::-;3544:114;;3682:77;3753:5;3682:77;:::i;:::-;3782:7;3813:1;3798:347;3823:6;3820:1;3817:13;3798:347;;;3899:6;3893:13;3926:105;4027:3;4012:13;3926:105;:::i;:::-;3919:112;;4054:81;4128:6;4054:81;:::i;:::-;4044:91;;3858:287;3845:1;3842;3838:9;3833:14;;3798:347;;;3802:14;4161:3;4154:10;;3436:734;;;3270:900;;;;:::o;4176:457::-;4361:4;4399:2;4388:9;4384:18;4376:26;;4448:9;4442:4;4438:20;4434:1;4423:9;4419:17;4412:47;4476:150;4621:4;4612:6;4476:150;:::i;:::-;4468:158;;4176:457;;;;:::o;4639:118::-;4726:24;4744:5;4726:24;:::i;:::-;4721:3;4714:37;4639:118;;:::o;4763:222::-;4856:4;4894:2;4883:9;4879:18;4871:26;;4907:71;4975:1;4964:9;4960:17;4951:6;4907:71;:::i;:::-;4763:222;;;;:::o;5072:117::-;5181:1;5178;5171:12;5318:122;5391:24;5409:5;5391:24;:::i;:::-;5384:5;5381:35;5371:63;;5430:1;5427;5420:12;5371:63;5318:122;:::o;5446:139::-;5492:5;5530:6;5517:20;5508:29;;5546:33;5573:5;5546:33;:::i;:::-;5446:139;;;;:::o;5591:122::-;5664:24;5682:5;5664:24;:::i;:::-;5657:5;5654:35;5644:63;;5703:1;5700;5693:12;5644:63;5591:122;:::o;5719:139::-;5765:5;5803:6;5790:20;5781:29;;5819:33;5846:5;5819:33;:::i;:::-;5719:139;;;;:::o;5864:619::-;5941:6;5949;5957;6006:2;5994:9;5985:7;5981:23;5977:32;5974:119;;;6012:79;;:::i;:::-;5974:119;6132:1;6157:53;6202:7;6193:6;6182:9;6178:22;6157:53;:::i;:::-;6147:63;;6103:117;6259:2;6285:53;6330:7;6321:6;6310:9;6306:22;6285:53;:::i;:::-;6275:63;;6230:118;6387:2;6413:53;6458:7;6449:6;6438:9;6434:22;6413:53;:::i;:::-;6403:63;;6358:118;5864:619;;;;;:::o;6489:474::-;6557:6;6565;6614:2;6602:9;6593:7;6589:23;6585:32;6582:119;;;6620:79;;:::i;:::-;6582:119;6740:1;6765:53;6810:7;6801:6;6790:9;6786:22;6765:53;:::i;:::-;6755:63;;6711:117;6867:2;6893:53;6938:7;6929:6;6918:9;6914:22;6893:53;:::i;:::-;6883:63;;6838:118;6489:474;;;;;:::o;6969:180::-;7017:77;7014:1;7007:88;7114:4;7111:1;7104:15;7138:4;7135:1;7128:15;7155:191;7195:3;7214:20;7232:1;7214:20;:::i;:::-;7209:25;;7248:20;7266:1;7248:20;:::i;:::-;7243:25;;7291:1;7288;7284:9;7277:16;;7312:3;7309:1;7306:10;7303:36;;;7319:18;;:::i;:::-;7303:36;7155:191;;;;:::o;7352:233::-;7391:3;7414:24;7432:5;7414:24;:::i;:::-;7405:33;;7460:66;7453:5;7450:77;7447:103;;7530:18;;:::i;:::-;7447:103;7577:1;7570:5;7566:13;7559:20;;7352:233;;;:::o;7591:180::-;7639:77;7636:1;7629:88;7736:4;7733:1;7726:15;7760:4;7757:1;7750:15;7777:180;7825:77;7822:1;7815:88;7922:4;7919:1;7912:15;7946:4;7943:1;7936:15;7963:169;8047:11;8081:6;8076:3;8069:19;8121:4;8116:3;8112:14;8097:29;;7963:169;;;;:::o;8138:178::-;8278:30;8274:1;8266:6;8262:14;8255:54;8138:178;:::o;8322:366::-;8464:3;8485:67;8549:2;8544:3;8485:67;:::i;:::-;8478:74;;8561:93;8650:3;8561:93;:::i;:::-;8679:2;8674:3;8670:12;8663:19;;8322:366;;;:::o;8694:419::-;8860:4;8898:2;8887:9;8883:18;8875:26;;8947:9;8941:4;8937:20;8933:1;8922:9;8918:17;8911:47;8975:131;9101:4;8975:131;:::i;:::-;8967:139;;8694:419;;;:::o;9119:182::-;9259:34;9255:1;9247:6;9243:14;9236:58;9119:182;:::o;9307:366::-;9449:3;9470:67;9534:2;9529:3;9470:67;:::i;:::-;9463:74;;9546:93;9635:3;9546:93;:::i;:::-;9664:2;9659:3;9655:12;9648:19;;9307:366;;;:::o;9679:419::-;9845:4;9883:2;9872:9;9868:18;9860:26;;9932:9;9926:4;9922:20;9918:1;9907:9;9903:17;9896:47;9960:131;10086:4;9960:131;:::i;:::-;9952:139;;9679:419;;;:::o;10104:118::-;10191:24;10209:5;10191:24;:::i;:::-;10186:3;10179:37;10104:118;;:::o;10228:442::-;10377:4;10415:2;10404:9;10400:18;10392:26;;10428:71;10496:1;10485:9;10481:17;10472:6;10428:71;:::i;:::-;10509:72;10577:2;10566:9;10562:18;10553:6;10509:72;:::i;:::-;10591;10659:2;10648:9;10644:18;10635:6;10591:72;:::i;:::-;10228:442;;;;;;:::o;10676:171::-;10715:3;10738:24;10756:5;10738:24;:::i;:::-;10729:33;;10784:4;10777:5;10774:15;10771:41;;10792:18;;:::i;:::-;10771:41;10839:1;10832:5;10828:13;10821:20;;10676:171;;;:::o;10853:664::-;11058:4;11096:3;11085:9;11081:19;11073:27;;11110:71;11178:1;11167:9;11163:17;11154:6;11110:71;:::i;:::-;11191:72;11259:2;11248:9;11244:18;11235:6;11191:72;:::i;:::-;11273;11341:2;11330:9;11326:18;11317:6;11273:72;:::i;:::-;11355;11423:2;11412:9;11408:18;11399:6;11355:72;:::i;:::-;11437:73;11505:3;11494:9;11490:19;11481:6;11437:73;:::i;:::-;10853:664;;;;;;;;:::o;11523:225::-;11663:34;11659:1;11651:6;11647:14;11640:58;11732:8;11727:2;11719:6;11715:15;11708:33;11523:225;:::o;11754:366::-;11896:3;11917:67;11981:2;11976:3;11917:67;:::i;:::-;11910:74;;11993:93;12082:3;11993:93;:::i;:::-;12111:2;12106:3;12102:12;12095:19;;11754:366;;;:::o;12126:419::-;12292:4;12330:2;12319:9;12315:18;12307:26;;12379:9;12373:4;12369:20;12365:1;12354:9;12350:17;12343:47;12407:131;12533:4;12407:131;:::i;:::-;12399:139;;12126:419;;;:::o;12551:60::-;12579:3;12600:5;12593:12;;12551:60;;;:::o;12617:142::-;12667:9;12700:53;12718:34;12727:24;12745:5;12727:24;:::i;:::-;12718:34;:::i;:::-;12700:53;:::i;:::-;12687:66;;12617:142;;;:::o;12765:126::-;12815:9;12848:37;12879:5;12848:37;:::i;:::-;12835:50;;12765:126;;;:::o;12897:134::-;12955:9;12988:37;13019:5;12988:37;:::i;:::-;12975:50;;12897:134;;;:::o;13037:147::-;13132:45;13171:5;13132:45;:::i;:::-;13127:3;13120:58;13037:147;;:::o;13190:458::-;13347:4;13385:2;13374:9;13370:18;13362:26;;13398:71;13466:1;13455:9;13451:17;13442:6;13398:71;:::i;:::-;13479:80;13555:2;13544:9;13540:18;13531:6;13479:80;:::i;:::-;13569:72;13637:2;13626:9;13622:18;13613:6;13569:72;:::i;:::-;13190:458;;;;;;:::o;13654:696::-;13875:4;13913:3;13902:9;13898:19;13890:27;;13927:71;13995:1;13984:9;13980:17;13971:6;13927:71;:::i;:::-;14008:72;14076:2;14065:9;14061:18;14052:6;14008:72;:::i;:::-;14090:80;14166:2;14155:9;14151:18;14142:6;14090:80;:::i;:::-;14180;14256:2;14245:9;14241:18;14232:6;14180:80;:::i;:::-;14270:73;14338:3;14327:9;14323:19;14314:6;14270:73;:::i;:::-;13654:696;;;;;;;;:::o;14356:194::-;14396:4;14416:20;14434:1;14416:20;:::i;:::-;14411:25;;14450:20;14468:1;14450:20;:::i;:::-;14445:25;;14494:1;14491;14487:9;14479:17;;14518:1;14512:4;14509:11;14506:37;;;14523:18;;:::i;:::-;14506:37;14356:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1325400",
								"executionCost": "52764",
								"totalCost": "1378164"
							},
							"external": {
								"LISTING_FEE()": "2470",
								"buyNft(address,uint256)": "infinite",
								"getListedNfts()": "infinite",
								"getMyListedNfts()": "infinite",
								"getMyNfts()": "infinite",
								"listNft(address,uint256,uint256)": "infinite",
								"resellNft(address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 4336,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 183,
									"end": 4336,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 4336,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 318,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 288,
									"end": 318,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 841,
									"end": 902,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 841,
									"end": 902,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 841,
									"end": 902,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 841,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 841,
									"end": 902,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 841,
									"end": 902,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 841,
									"end": 902,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 841,
									"end": 902,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 841,
									"end": 902,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 841,
									"end": 902,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 841,
									"end": 902,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1746,
									"end": 1747,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1961,
									"end": 1968,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1961,
									"end": 1982,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1961,
									"end": 1982,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1961,
									"end": 1982,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1961,
									"end": 1982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 885,
									"end": 895,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 862,
									"end": 874,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 862,
									"end": 874,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 896,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 862,
									"end": 896,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 862,
									"end": 896,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 862,
									"end": 896,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 862,
									"end": 896,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 183,
									"end": 4336,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 4336,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 183,
									"end": 4336,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 4336,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 4336,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 183,
									"end": 4336,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 4336,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e4ffa062a6d229a4c5913d3c5afc5982a845a7443aea272a1183b48a92a3c31464736f6c63430008160033",
									".code": [
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "34F5B624"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "34F5B624"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "4DDF4F8F"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "8D6CB3FB"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "C922B17C"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "47B07BF"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "1F4CC4DB"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "2B86AE38"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 183,
											"end": 4336,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 3209,
											"end": 3729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 3209,
											"end": 3729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 3735,
											"end": 4333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 3735,
											"end": 4333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 288,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 288,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2186,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2186,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1597,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1597,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 2789,
											"end": 3203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 2789,
											"end": 3203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 946,
											"end": 1574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 946,
											"end": 1574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3251,
											"end": 3263,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3272,
											"end": 3285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3297,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3288,
											"end": 3297,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3272,
											"end": 3297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3272,
											"end": 3297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3304,
											"end": 3319,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3456,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3330,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3351,
											"end": 3359,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3359,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3456,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3330,
											"end": 3456,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3414,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3379,
											"end": 3414,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3387,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3392,
											"end": 3393,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3388,
											"end": 3389,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3388,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3379,
											"end": 3400,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3414,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3379,
											"end": 3414,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3379,
											"end": 3414,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3375,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 3375,
											"end": 3449,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 3427,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3375,
											"end": 3449,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 3375,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3330,
											"end": 3456,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3456,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3330,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3504,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 3484,
											"end": 3505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 3484,
											"end": 3505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3512,
											"end": 3526,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3706,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 3537,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3558,
											"end": 3566,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3554,
											"end": 3566,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3706,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 3537,
											"end": 3706,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3611,
											"end": 3621,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3621,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3586,
											"end": 3621,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3594,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3600,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 3595,
											"end": 3600,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3595,
											"end": 3600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3600,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 3595,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3621,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3586,
											"end": 3621,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3621,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 3582,
											"end": 3699,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3660,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3666,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3661,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3648,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 3634,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 3678,
											"end": 3689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3699,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 3582,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 3537,
											"end": 3706,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3706,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 3537,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3723,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3712,
											"end": 3723,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3712,
											"end": 3723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3712,
											"end": 3723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3712,
											"end": 3723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3712,
											"end": 3723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3712,
											"end": 3723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3783,
											"end": 3795,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3804,
											"end": 3817,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3804,
											"end": 3829,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3804,
											"end": 3829,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3879,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 4027,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 3868,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3897,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3885,
											"end": 3886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3885,
											"end": 3897,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 4027,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 3868,
											"end": 4027,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3953,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3953,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3917,
											"end": 3953,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3925,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3926,
											"end": 3927,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3926,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3917,
											"end": 3932,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3953,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3917,
											"end": 3953,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3953,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3979,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3979,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 3917,
											"end": 3979,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3965,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 3971,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3966,
											"end": 3967,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3966,
											"end": 3971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3957,
											"end": 3979,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3979,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 3917,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 4020,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3913,
											"end": 4020,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 3992,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 4020,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3913,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3899,
											"end": 3902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3899,
											"end": 3902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3899,
											"end": 3902,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3899,
											"end": 3902,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3899,
											"end": 3902,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3899,
											"end": 3902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3899,
											"end": 3902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 3868,
											"end": 4027,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 4027,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 3868,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 4027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4052,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4081,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 4055,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 4055,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4310,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 4114,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4135,
											"end": 4143,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4143,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4310,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4114,
											"end": 4310,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4199,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4199,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4163,
											"end": 4199,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4171,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4177,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4172,
											"end": 4173,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4172,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 4172,
											"end": 4177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4172,
											"end": 4177,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4172,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4172,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4172,
											"end": 4177,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 4172,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4199,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4163,
											"end": 4199,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4199,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4225,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4225,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 4163,
											"end": 4225,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4211,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4217,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4212,
											"end": 4213,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4212,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4212,
											"end": 4217,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4212,
											"end": 4217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4212,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4212,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4212,
											"end": 4217,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4212,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4225,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 4163,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4303,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 4159,
											"end": 4303,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4256,
											"end": 4264,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4270,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4265,
											"end": 4266,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4265,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4242,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 4238,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 4282,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4303,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 4159,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4148,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4148,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4148,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4145,
											"end": 4148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4148,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 4114,
											"end": 4310,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4310,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4114,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4327,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4327,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 4333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 288,
											"end": 318,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 288,
											"end": 318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2411,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2310,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2314,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 2296,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2296,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2375,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2375,
											"end": 2386,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2362,
											"end": 2371,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2362,
											"end": 2386,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 2354,
											"end": 2423,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 2354,
											"end": 2423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2440,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 2467,
											"end": 2477,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2487,
											"end": 2491,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2502,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 2432,
											"end": 2503,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2548,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2548,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2576,
											"end": 2586,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2555,
											"end": 2565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2587,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2622,
											"end": 2626,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2597,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2594,
											"end": 2603,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2628,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2635,
											"end": 2638,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2635,
											"end": 2645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2671,
											"end": 2677,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2662,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2659,
											"end": 2668,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2677,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2677,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2677,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2686,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 2686,
											"end": 2697,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2697,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19"
										},
										{
											"begin": 2719,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 2741,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2743,
											"end": 2753,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2763,
											"end": 2767,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2776,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 2709,
											"end": 2777,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2777,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 2289,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2455,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2455,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2411,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1723,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1724,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1688,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1688,
											"end": 1724,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1752,
											"end": 1761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1748,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1761,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1761,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 1731,
											"end": 1804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 1731,
											"end": 1804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1813,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1855,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1813,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1813,
											"end": 1856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 1892,
											"end": 1901,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 1929,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1909,
											"end": 1943,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1952,
											"end": 1956,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1959,
											"end": 1964,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1969,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1966,
											"end": 1977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1909,
											"end": 1978,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1978,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1978,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1978,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1997,
											"end": 2002,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 1988,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1985,
											"end": 1994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2002,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2009,
											"end": 2019,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2036,
											"end": 2045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 2036,
											"end": 2047,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "16F1DBD97E6BF646D429ED186CCE832F1F7FD9907814293B83181E9970AB7BD2"
										},
										{
											"begin": 2067,
											"end": 2079,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2084,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2081,
											"end": 2092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2097,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2094,
											"end": 2104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2106,
											"end": 2111,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2113,
											"end": 2122,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 2059,
											"end": 2123,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2059,
											"end": 2123,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2129,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2129,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2455,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2455,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2835,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2856,
											"end": 2872,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2884,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2875,
											"end": 2884,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2856,
											"end": 2884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2856,
											"end": 2884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 2917,
											"end": 2937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 2937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 2917,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 2937,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 2917,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2946,
											"end": 2963,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 2991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 2966,
											"end": 2992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 2966,
											"end": 2992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2946,
											"end": 2992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2946,
											"end": 2992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2999,
											"end": 3013,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3035,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3024,
											"end": 3180,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 3024,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3053,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3042,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3053,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3024,
											"end": 3180,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3024,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 3024,
											"end": 3180,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3082,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3073,
											"end": 3095,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3069,
											"end": 3173,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3069,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 3069,
											"end": 3173,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3134,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3140,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3135,
											"end": 3136,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3135,
											"end": 3140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3141,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3113,
											"end": 3122,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 3108,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 3152,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3069,
											"end": 3173,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 3069,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3058,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3058,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3058,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3055,
											"end": 3058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3058,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3058,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3058,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3024,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 3024,
											"end": 3180,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3024,
											"end": 3180,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 3024,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3024,
											"end": 3180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3193,
											"end": 3197,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3197,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2411,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1072,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 1054,
											"end": 1105,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1054,
											"end": 1105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1133,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1133,
											"end": 1144,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1120,
											"end": 1129,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1120,
											"end": 1144,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1112,
											"end": 1181,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 1112,
											"end": 1181,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1198,
											"end": 1210,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1224,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1225,
											"end": 1235,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1249,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1252,
											"end": 1260,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1190,
											"end": 1261,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1261,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1261,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1261,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1268,
											"end": 1280,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 1290,
											"end": 1301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1290,
											"end": 1301,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1309,
											"end": 1318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1309,
											"end": 1320,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 1374,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1391,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1419,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1445,
											"end": 1449,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1460,
											"end": 1466,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1346,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1347,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19"
										},
										{
											"begin": 1510,
											"end": 1522,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1532,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1534,
											"end": 1544,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1558,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1561,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1500,
											"end": 1568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1500,
											"end": 1568,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2455,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2455,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 946,
											"end": 1574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2491,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1789,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2620,
											"end": 2627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2627,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2616,
											"end": 2704,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2692,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2704,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2616,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1789,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 3026,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2814,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1747,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2997,
											"end": 3004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3018,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 3026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 142,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 7,
											"end": 142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 95,
											"end": 101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 134,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 123,
											"end": 135,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 113,
											"end": 135,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 113,
											"end": 135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 142,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 142,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 148,
											"end": 353,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 148,
											"end": 353,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 268,
											"end": 279,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 308,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 297,
											"end": 300,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 290,
											"end": 309,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 342,
											"end": 346,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 340,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 333,
											"end": 347,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 318,
											"end": 347,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 318,
											"end": 347,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 148,
											"end": 353,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 148,
											"end": 353,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 148,
											"end": 353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 148,
											"end": 353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 148,
											"end": 353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 359,
											"end": 512,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 359,
											"end": 512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 447,
											"end": 451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 470,
											"end": 473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 462,
											"end": 473,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 462,
											"end": 473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 500,
											"end": 504,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 495,
											"end": 498,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 491,
											"end": 505,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 483,
											"end": 505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 483,
											"end": 505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 359,
											"end": 512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 359,
											"end": 512,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 359,
											"end": 512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 359,
											"end": 512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 518,
											"end": 644,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 518,
											"end": 644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 555,
											"end": 562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 595,
											"end": 637,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 588,
											"end": 593,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 584,
											"end": 638,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 573,
											"end": 638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 573,
											"end": 638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 518,
											"end": 644,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 518,
											"end": 644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 518,
											"end": 644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 518,
											"end": 644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 650,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 650,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 687,
											"end": 694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 734,
											"end": 739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 716,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 716,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 716,
											"end": 740,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 716,
											"end": 740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 705,
											"end": 740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 705,
											"end": 740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 650,
											"end": 746,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 650,
											"end": 746,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 650,
											"end": 746,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 650,
											"end": 746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 752,
											"end": 860,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 752,
											"end": 860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 829,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 847,
											"end": 852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 829,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 829,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 829,
											"end": 853,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 824,
											"end": 827,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 752,
											"end": 860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 752,
											"end": 860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 752,
											"end": 860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 866,
											"end": 943,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 866,
											"end": 943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 903,
											"end": 910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 921,
											"end": 937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 921,
											"end": 937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 866,
											"end": 943,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 866,
											"end": 943,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 866,
											"end": 943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 866,
											"end": 943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1057,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 949,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1026,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1044,
											"end": 1049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1026,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 1026,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1026,
											"end": 1050,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1026,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1021,
											"end": 1024,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1014,
											"end": 1051,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1063,
											"end": 1167,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 1063,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1115,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 1155,
											"end": 1160,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 1137,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1126,
											"end": 1161,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1126,
											"end": 1161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1063,
											"end": 1167,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1063,
											"end": 1167,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1063,
											"end": 1167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1063,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1305,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 1173,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 1266,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1298,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 1266,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1261,
											"end": 1264,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1254,
											"end": 1299,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1311,
											"end": 1401,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1311,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1352,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1393,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1374,
											"end": 1395,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1311,
											"end": 1401,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1311,
											"end": 1401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1311,
											"end": 1401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1311,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1506,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 1407,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 1493,
											"end": 1498,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1478,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1499,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 1478,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1500,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1568,
											"end": 2795,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 1568,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 1692,
											"end": 1695,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1688,
											"end": 1702,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1791,
											"end": 1795,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1789,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1774,
											"end": 1797,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 1867,
											"end": 1871,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 1810,
											"end": 1873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1873,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 1810,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1972,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1961,
											"end": 1966,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1974,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 2044,
											"end": 2048,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2042,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2035,
											"end": 2049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2033,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 1987,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2050,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1987,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 2060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2144,
											"end": 2148,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2127,
											"end": 2150,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 2236,
											"end": 2240,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2234,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2241,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2163,
											"end": 2242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2070,
											"end": 2252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2340,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2318,
											"end": 2341,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2354,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 2427,
											"end": 2431,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2422,
											"end": 2425,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2432,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2416,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2354,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2354,
											"end": 2433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2354,
											"end": 2433,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 2354,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2443,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2530,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2519,
											"end": 2524,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2515,
											"end": 2531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2509,
											"end": 2532,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2545,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2593,
											"end": 2607,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2579,
											"end": 2591,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2545,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 2545,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2545,
											"end": 2608,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 2545,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 2695,
											"end": 2700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2691,
											"end": 2707,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2685,
											"end": 2708,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 2767,
											"end": 2770,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 2777,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 2721,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2778,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 2721,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2788,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1666,
											"end": 2795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1568,
											"end": 2795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1568,
											"end": 2795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1568,
											"end": 2795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 3064,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 2801,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 2922,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 3017,
											"end": 3020,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3015,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 2933,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 3021,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 2933,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3057,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 3064,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 3064,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 3064,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 3064,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 3064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3070,
											"end": 3204,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 3070,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3165,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3197,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3191,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3184,
											"end": 3198,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3070,
											"end": 3204,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3070,
											"end": 3204,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3070,
											"end": 3204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3070,
											"end": 3204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 4170,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 3270,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 3460,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3535,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 3460,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3646,
											"end": 3649,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 3551,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3658,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 3551,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3544,
											"end": 3658,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3544,
											"end": 3658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3682,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 3753,
											"end": 3758,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3682,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 3682,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3682,
											"end": 3759,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 3682,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 3789,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 4145,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 3798,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3823,
											"end": 3829,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3830,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 4145,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 3798,
											"end": 4145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 3905,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3893,
											"end": 3906,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 4027,
											"end": 4030,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4025,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 3926,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 4031,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 3926,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3919,
											"end": 4031,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 3919,
											"end": 4031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 4128,
											"end": 4134,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 4054,
											"end": 4135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 4054,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4044,
											"end": 4135,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4044,
											"end": 4135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 4145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3842,
											"end": 3843,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 3798,
											"end": 4145,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 4145,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 3798,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4164,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4154,
											"end": 4164,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4154,
											"end": 4164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3436,
											"end": 4170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3436,
											"end": 4170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3436,
											"end": 4170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 4170,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 4170,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 4170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 4170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 4170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4633,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 4176,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4365,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4401,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4402,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4376,
											"end": 4402,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4376,
											"end": 4402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4446,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4458,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4435,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4432,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4459,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4476,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 4621,
											"end": 4625,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4476,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 4476,
											"end": 4626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4476,
											"end": 4626,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 4476,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4633,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4633,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4757,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 4639,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 4744,
											"end": 4749,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 4726,
											"end": 4750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4750,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 4726,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4721,
											"end": 4724,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4714,
											"end": 4751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4763,
											"end": 4985,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 4763,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 4860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4896,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4883,
											"end": 4892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4871,
											"end": 4897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4871,
											"end": 4897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4907,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 4975,
											"end": 4976,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4973,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4960,
											"end": 4977,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4957,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4907,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 4907,
											"end": 4978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4907,
											"end": 4978,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 4907,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4763,
											"end": 4985,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4763,
											"end": 4985,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4763,
											"end": 4985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4763,
											"end": 4985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4763,
											"end": 4985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5189,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 5072,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5179,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5171,
											"end": 5183,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5318,
											"end": 5440,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 5318,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5409,
											"end": 5414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 5391,
											"end": 5415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5415,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5391,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5381,
											"end": 5416,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5371,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 5371,
											"end": 5434,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5430,
											"end": 5431,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5427,
											"end": 5428,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5420,
											"end": 5432,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5371,
											"end": 5434,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 5371,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5318,
											"end": 5440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5318,
											"end": 5440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5446,
											"end": 5585,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 5446,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5530,
											"end": 5536,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5517,
											"end": 5537,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5508,
											"end": 5537,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5508,
											"end": 5537,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 5573,
											"end": 5578,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 5546,
											"end": 5579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5579,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 5546,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5446,
											"end": 5585,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5446,
											"end": 5585,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5446,
											"end": 5585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5446,
											"end": 5585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5446,
											"end": 5585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5713,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 5591,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5664,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 5682,
											"end": 5687,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5664,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 5664,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5664,
											"end": 5688,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 5664,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5657,
											"end": 5662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5654,
											"end": 5689,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5644,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 5644,
											"end": 5707,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5701,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5644,
											"end": 5707,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 5644,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5858,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 5719,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5765,
											"end": 5770,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5809,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5790,
											"end": 5810,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5819,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 5846,
											"end": 5851,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5819,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 5819,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5819,
											"end": 5852,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 5819,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5858,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5858,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 6483,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 5864,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5941,
											"end": 5947,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 5955,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 5963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6006,
											"end": 6008,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5994,
											"end": 6003,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5985,
											"end": 5992,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5981,
											"end": 6004,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5977,
											"end": 6009,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5974,
											"end": 6093,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5974,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 5974,
											"end": 6093,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6012,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6012,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 6012,
											"end": 6091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6012,
											"end": 6091,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6012,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5974,
											"end": 6093,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 5974,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6132,
											"end": 6133,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6193,
											"end": 6199,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6182,
											"end": 6191,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6200,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6157,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 6157,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6157,
											"end": 6210,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 6157,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6147,
											"end": 6210,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6147,
											"end": 6210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6103,
											"end": 6220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6259,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6285,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6330,
											"end": 6337,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6321,
											"end": 6327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6319,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6306,
											"end": 6328,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6285,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 6285,
											"end": 6338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6285,
											"end": 6338,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6285,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6338,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6230,
											"end": 6348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6387,
											"end": 6389,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6413,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6455,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6434,
											"end": 6456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 6413,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6466,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 6413,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6403,
											"end": 6466,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6403,
											"end": 6466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 6483,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 6483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 6483,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 6483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 6483,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 6483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6963,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 6489,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6557,
											"end": 6563,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6571,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6616,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6602,
											"end": 6611,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6593,
											"end": 6600,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6589,
											"end": 6612,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6585,
											"end": 6617,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6701,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6582,
											"end": 6701,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6620,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 6620,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 6620,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6620,
											"end": 6699,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 6620,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6701,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6582,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 6741,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 6810,
											"end": 6817,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6807,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6790,
											"end": 6799,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 6808,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6765,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 6765,
											"end": 6818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6765,
											"end": 6818,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 6765,
											"end": 6818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6755,
											"end": 6818,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6755,
											"end": 6818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6711,
											"end": 6828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6867,
											"end": 6869,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6893,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6929,
											"end": 6935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6918,
											"end": 6927,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6914,
											"end": 6936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6893,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 6893,
											"end": 6946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6893,
											"end": 6946,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 6893,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6883,
											"end": 6946,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6883,
											"end": 6946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6838,
											"end": 6956,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6963,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6963,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6969,
											"end": 7149,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 6969,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7017,
											"end": 7094,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7007,
											"end": 7095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7114,
											"end": 7118,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 7111,
											"end": 7112,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7104,
											"end": 7119,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7138,
											"end": 7142,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7135,
											"end": 7136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7128,
											"end": 7143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7346,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7155,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7195,
											"end": 7198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 7232,
											"end": 7233,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7214,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 7214,
											"end": 7234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7214,
											"end": 7234,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 7214,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7234,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7234,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7248,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 7266,
											"end": 7267,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7248,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 7248,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7248,
											"end": 7268,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 7248,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7292,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7288,
											"end": 7289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7277,
											"end": 7293,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7277,
											"end": 7293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7312,
											"end": 7315,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7309,
											"end": 7310,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7306,
											"end": 7316,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7339,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 7303,
											"end": 7339,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 7319,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 7319,
											"end": 7337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7337,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 7319,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7339,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 7303,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7346,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7346,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7585,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 7352,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7394,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7414,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 7432,
											"end": 7437,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7414,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 7414,
											"end": 7438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7414,
											"end": 7438,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 7414,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7405,
											"end": 7438,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7405,
											"end": 7438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7460,
											"end": 7526,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7458,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7450,
											"end": 7527,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7447,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 7447,
											"end": 7550,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 7530,
											"end": 7548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7447,
											"end": 7550,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 7447,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7578,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7570,
											"end": 7575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7566,
											"end": 7579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7559,
											"end": 7579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7559,
											"end": 7579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7585,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7585,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7591,
											"end": 7771,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 7591,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7636,
											"end": 7637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7736,
											"end": 7740,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 7733,
											"end": 7734,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7726,
											"end": 7741,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7760,
											"end": 7764,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7757,
											"end": 7758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7765,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7777,
											"end": 7957,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 7777,
											"end": 7957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7902,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7822,
											"end": 7823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7903,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 7919,
											"end": 7920,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7912,
											"end": 7927,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7946,
											"end": 7950,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7943,
											"end": 7944,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 7951,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7963,
											"end": 8132,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 7963,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8058,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8087,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8076,
											"end": 8079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8069,
											"end": 8088,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8121,
											"end": 8125,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8116,
											"end": 8119,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8112,
											"end": 8126,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8126,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8126,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7963,
											"end": 8132,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7963,
											"end": 8132,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7963,
											"end": 8132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7963,
											"end": 8132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7963,
											"end": 8132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8138,
											"end": 8316,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 8138,
											"end": 8316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8278,
											"end": 8308,
											"name": "PUSH",
											"source": 13,
											"value": "5072696365206D757374206265206174206C6561737420312077656900000000"
										},
										{
											"begin": 8274,
											"end": 8275,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8266,
											"end": 8272,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8262,
											"end": 8276,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8309,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8138,
											"end": 8316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8138,
											"end": 8316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8322,
											"end": 8688,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 8322,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8485,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 8549,
											"end": 8551,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 8544,
											"end": 8547,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8485,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 8485,
											"end": 8552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8485,
											"end": 8552,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 8485,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8478,
											"end": 8552,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8478,
											"end": 8552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8561,
											"end": 8654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 8650,
											"end": 8653,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8561,
											"end": 8654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 8561,
											"end": 8654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8561,
											"end": 8654,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 8561,
											"end": 8654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8679,
											"end": 8681,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8674,
											"end": 8677,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8670,
											"end": 8682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8663,
											"end": 8682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8663,
											"end": 8682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8322,
											"end": 8688,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8322,
											"end": 8688,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8322,
											"end": 8688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8322,
											"end": 8688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 9113,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 8694,
											"end": 9113,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8900,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8883,
											"end": 8901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8875,
											"end": 8901,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8875,
											"end": 8901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8947,
											"end": 8956,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8941,
											"end": 8945,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 8957,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8933,
											"end": 8934,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8922,
											"end": 8931,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8918,
											"end": 8935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8911,
											"end": 8958,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8975,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 9101,
											"end": 9105,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8975,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 8975,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8975,
											"end": 9106,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 8975,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8967,
											"end": 9106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8967,
											"end": 9106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 9113,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 9113,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 9113,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 9113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9119,
											"end": 9301,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 9119,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9259,
											"end": 9293,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F7420656E6F75676820657468657220666F72206C697374696E6720666565"
										},
										{
											"begin": 9255,
											"end": 9256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9253,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9243,
											"end": 9257,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9294,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9119,
											"end": 9301,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9119,
											"end": 9301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9673,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 9307,
											"end": 9673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9449,
											"end": 9452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9470,
											"end": 9537,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 9534,
											"end": 9536,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9529,
											"end": 9532,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9470,
											"end": 9537,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 9470,
											"end": 9537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9470,
											"end": 9537,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 9470,
											"end": 9537,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9463,
											"end": 9537,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9463,
											"end": 9537,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9546,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 9635,
											"end": 9638,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9546,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 9546,
											"end": 9639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9546,
											"end": 9639,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 9546,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9664,
											"end": 9666,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9659,
											"end": 9662,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9648,
											"end": 9667,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9648,
											"end": 9667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9673,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 10098,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 9679,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9845,
											"end": 9849,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9883,
											"end": 9885,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9872,
											"end": 9881,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9868,
											"end": 9886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9860,
											"end": 9886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9860,
											"end": 9886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 9941,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9926,
											"end": 9930,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9922,
											"end": 9942,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9918,
											"end": 9919,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9907,
											"end": 9916,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9896,
											"end": 9943,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9960,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 10086,
											"end": 10090,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9960,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 9960,
											"end": 10091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9960,
											"end": 10091,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 9960,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9952,
											"end": 10091,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9952,
											"end": 10091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 10098,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 10098,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 10098,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 10098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10104,
											"end": 10222,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 10104,
											"end": 10222,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 10209,
											"end": 10214,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 10191,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 10191,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10186,
											"end": 10189,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10179,
											"end": 10216,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10104,
											"end": 10222,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10104,
											"end": 10222,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10104,
											"end": 10222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10670,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 10228,
											"end": 10670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10377,
											"end": 10381,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10415,
											"end": 10417,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10404,
											"end": 10413,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10400,
											"end": 10418,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10392,
											"end": 10418,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10392,
											"end": 10418,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 10496,
											"end": 10497,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10485,
											"end": 10494,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10481,
											"end": 10498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10472,
											"end": 10478,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 10428,
											"end": 10499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10509,
											"end": 10581,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 10577,
											"end": 10579,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10566,
											"end": 10575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10562,
											"end": 10580,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10553,
											"end": 10559,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10509,
											"end": 10581,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 10509,
											"end": 10581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10509,
											"end": 10581,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 10509,
											"end": 10581,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10591,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 10659,
											"end": 10661,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10657,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10644,
											"end": 10662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10635,
											"end": 10641,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10591,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 10591,
											"end": 10663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10591,
											"end": 10663,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 10591,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10670,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10670,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10847,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 10676,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10715,
											"end": 10718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 10756,
											"end": 10761,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10738,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 10738,
											"end": 10762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10738,
											"end": 10762,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 10738,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10729,
											"end": 10762,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10729,
											"end": 10762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10784,
											"end": 10788,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10777,
											"end": 10782,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10774,
											"end": 10789,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 10771,
											"end": 10812,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10792,
											"end": 10810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 10792,
											"end": 10810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 10792,
											"end": 10810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10792,
											"end": 10810,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 10792,
											"end": 10810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10812,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 10771,
											"end": 10812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10839,
											"end": 10840,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10832,
											"end": 10837,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10828,
											"end": 10841,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10821,
											"end": 10841,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10821,
											"end": 10841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10847,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 11517,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 10853,
											"end": 11517,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11058,
											"end": 11062,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11099,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 11085,
											"end": 11094,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11081,
											"end": 11100,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11073,
											"end": 11100,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11073,
											"end": 11100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11110,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11167,
											"end": 11176,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11163,
											"end": 11180,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11154,
											"end": 11160,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11110,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 11110,
											"end": 11181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11110,
											"end": 11181,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 11110,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11191,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 11259,
											"end": 11261,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11248,
											"end": 11257,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11244,
											"end": 11262,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11235,
											"end": 11241,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11191,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 11191,
											"end": 11263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11191,
											"end": 11263,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 11191,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11273,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 11341,
											"end": 11343,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11330,
											"end": 11339,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11344,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11317,
											"end": 11323,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11273,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 11273,
											"end": 11345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11273,
											"end": 11345,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 11273,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11355,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 11423,
											"end": 11425,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11412,
											"end": 11421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11408,
											"end": 11426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11399,
											"end": 11405,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11355,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 11355,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11355,
											"end": 11427,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 11355,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 11505,
											"end": 11508,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11494,
											"end": 11503,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11490,
											"end": 11509,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11481,
											"end": 11487,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 11437,
											"end": 11510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11510,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 11437,
											"end": 11510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 11517,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 11517,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 11517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 11517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 11517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 11517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 11517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 11517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 11517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11523,
											"end": 11748,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 11523,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 11697,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67"
										},
										{
											"begin": 11659,
											"end": 11660,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11651,
											"end": 11657,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11647,
											"end": 11661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11640,
											"end": 11698,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11732,
											"end": 11740,
											"name": "PUSH",
											"source": 13,
											"value": "2070726963650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11727,
											"end": 11729,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11719,
											"end": 11725,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11715,
											"end": 11730,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11708,
											"end": 11741,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11523,
											"end": 11748,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11523,
											"end": 11748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11754,
											"end": 12120,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 11754,
											"end": 12120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11896,
											"end": 11899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11917,
											"end": 11984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 11981,
											"end": 11983,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 11976,
											"end": 11979,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11917,
											"end": 11984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 11917,
											"end": 11984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11917,
											"end": 11984,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 11917,
											"end": 11984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11910,
											"end": 11984,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11910,
											"end": 11984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11993,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 12082,
											"end": 12085,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11993,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 11993,
											"end": 12086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11993,
											"end": 12086,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 11993,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12111,
											"end": 12113,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12106,
											"end": 12109,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12102,
											"end": 12114,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12095,
											"end": 12114,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12095,
											"end": 12114,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11754,
											"end": 12120,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11754,
											"end": 12120,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11754,
											"end": 12120,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11754,
											"end": 12120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12126,
											"end": 12545,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 12126,
											"end": 12545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12292,
											"end": 12296,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12330,
											"end": 12332,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12319,
											"end": 12328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12315,
											"end": 12333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12307,
											"end": 12333,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12307,
											"end": 12333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12388,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12373,
											"end": 12377,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12369,
											"end": 12389,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12365,
											"end": 12366,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12354,
											"end": 12363,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12350,
											"end": 12367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12343,
											"end": 12390,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12407,
											"end": 12538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12407,
											"end": 12538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 12407,
											"end": 12538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12407,
											"end": 12538,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 12407,
											"end": 12538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12399,
											"end": 12538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12399,
											"end": 12538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12126,
											"end": 12545,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12126,
											"end": 12545,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12126,
											"end": 12545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12126,
											"end": 12545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12551,
											"end": 12611,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 12551,
											"end": 12611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12579,
											"end": 12582,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12600,
											"end": 12605,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12593,
											"end": 12605,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12593,
											"end": 12605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12551,
											"end": 12611,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12551,
											"end": 12611,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12551,
											"end": 12611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12551,
											"end": 12611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12617,
											"end": 12759,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 12617,
											"end": 12759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12667,
											"end": 12676,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12700,
											"end": 12753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 12718,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 12727,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 12745,
											"end": 12750,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12727,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 12727,
											"end": 12751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12727,
											"end": 12751,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 12727,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12718,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 12718,
											"end": 12752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12718,
											"end": 12752,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 12718,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12700,
											"end": 12753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 12700,
											"end": 12753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12700,
											"end": 12753,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 12700,
											"end": 12753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12687,
											"end": 12753,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12687,
											"end": 12753,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12617,
											"end": 12759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12617,
											"end": 12759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12617,
											"end": 12759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12617,
											"end": 12759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12765,
											"end": 12891,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 12765,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12815,
											"end": 12824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12848,
											"end": 12885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 12879,
											"end": 12884,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 12848,
											"end": 12885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12885,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 12848,
											"end": 12885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12835,
											"end": 12885,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12835,
											"end": 12885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12765,
											"end": 12891,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12765,
											"end": 12891,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12765,
											"end": 12891,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12765,
											"end": 12891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12897,
											"end": 13031,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 12897,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12955,
											"end": 12964,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12988,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 13019,
											"end": 13024,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 12988,
											"end": 13025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13025,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 12988,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12975,
											"end": 13025,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12975,
											"end": 13025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12897,
											"end": 13031,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12897,
											"end": 13031,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12897,
											"end": 13031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12897,
											"end": 13031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13037,
											"end": 13184,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 13037,
											"end": 13184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13132,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 13171,
											"end": 13176,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13132,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 13132,
											"end": 13177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13132,
											"end": 13177,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 13132,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13127,
											"end": 13130,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13120,
											"end": 13178,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13037,
											"end": 13184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13037,
											"end": 13184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13037,
											"end": 13184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13648,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 13190,
											"end": 13648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13347,
											"end": 13351,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13385,
											"end": 13387,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 13374,
											"end": 13383,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13370,
											"end": 13388,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13362,
											"end": 13388,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13362,
											"end": 13388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 13466,
											"end": 13467,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13455,
											"end": 13464,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13451,
											"end": 13468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13442,
											"end": 13448,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 13398,
											"end": 13469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13469,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 13398,
											"end": 13469,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13479,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 13555,
											"end": 13557,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13544,
											"end": 13553,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13531,
											"end": 13537,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13479,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 13479,
											"end": 13559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13479,
											"end": 13559,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 13479,
											"end": 13559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13569,
											"end": 13641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 13637,
											"end": 13639,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13626,
											"end": 13635,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13622,
											"end": 13640,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13569,
											"end": 13641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 13569,
											"end": 13641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13569,
											"end": 13641,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 13569,
											"end": 13641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13648,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13648,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 14350,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 13654,
											"end": 14350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13875,
											"end": 13879,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13913,
											"end": 13916,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 13902,
											"end": 13911,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13898,
											"end": 13917,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13890,
											"end": 13917,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13890,
											"end": 13917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13927,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 13995,
											"end": 13996,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13984,
											"end": 13993,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13980,
											"end": 13997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13971,
											"end": 13977,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13927,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 13927,
											"end": 13998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13927,
											"end": 13998,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 13927,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14008,
											"end": 14080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 14076,
											"end": 14078,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14065,
											"end": 14074,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14061,
											"end": 14079,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14058,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14008,
											"end": 14080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 14008,
											"end": 14080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14008,
											"end": 14080,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 14008,
											"end": 14080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14090,
											"end": 14170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 14166,
											"end": 14168,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14155,
											"end": 14164,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14151,
											"end": 14169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14142,
											"end": 14148,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14090,
											"end": 14170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 14090,
											"end": 14170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14090,
											"end": 14170,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 14090,
											"end": 14170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14180,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 14256,
											"end": 14258,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14245,
											"end": 14254,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14241,
											"end": 14259,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14232,
											"end": 14238,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14180,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 14180,
											"end": 14260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14180,
											"end": 14260,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 14180,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14270,
											"end": 14343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 14338,
											"end": 14341,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 14327,
											"end": 14336,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14323,
											"end": 14342,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14314,
											"end": 14320,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14270,
											"end": 14343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 14270,
											"end": 14343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14270,
											"end": 14343,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 14270,
											"end": 14343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 14350,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 14350,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 14350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 14350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 14350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 14350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 14350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 14350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 14350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14356,
											"end": 14550,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 14356,
											"end": 14550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14396,
											"end": 14400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14416,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 14434,
											"end": 14435,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14416,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 14416,
											"end": 14436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14416,
											"end": 14436,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 14416,
											"end": 14436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14411,
											"end": 14436,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14411,
											"end": 14436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14450,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 14468,
											"end": 14469,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14450,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 14450,
											"end": 14470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14450,
											"end": 14470,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 14450,
											"end": 14470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14494,
											"end": 14495,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14491,
											"end": 14492,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14487,
											"end": 14496,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14479,
											"end": 14496,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14479,
											"end": 14496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14518,
											"end": 14519,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14512,
											"end": 14516,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14509,
											"end": 14520,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14506,
											"end": 14543,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14506,
											"end": 14543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 14506,
											"end": 14543,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14523,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 14523,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 14523,
											"end": 14541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14523,
											"end": 14541,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 14523,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14506,
											"end": 14543,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 14506,
											"end": 14543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14356,
											"end": 14550,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14356,
											"end": 14550,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14356,
											"end": 14550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14356,
											"end": 14550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14356,
											"end": 14550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"LISTING_FEE()": "2b86ae38",
							"buyNft(address,uint256)": "4ddf4f8f",
							"getListedNfts()": "8d6cb3fb",
							"getMyListedNfts()": "1f4cc4db",
							"getMyNfts()": "047b07bf",
							"listNft(address,uint256,uint256)": "c922b17c",
							"resellNft(address,uint256,uint256)": "34f5b624"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTSold\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LISTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListedNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct Marketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyListedNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct Marketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct Marketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"listNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"resellNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x55c329217b55fc381f19a19007d6bcf279e3b58e9867d3e2b33f57fe8acb824b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ca5be47fdb89a89e69c8aee2eea7f27543009f95a46bb69bb65283afdaa327d\",\"dweb:/ipfs/QmVJjqVZsfQHEMRuJu6yaimvWooHu1fTW7xQwbc1gtKypw\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]},\"contracts/Marketplace.sol\":{\"keccak256\":\"0x3cee90eab81f1a31e249911aa05ac13a716311353010d035aa3725480b288021\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2930275b0e0bda916063849526e254d8660b21892f8638c2bfb319a6370084d3\",\"dweb:/ipfs/QmNRSe1ftiUgAJQYGDutddFaPijCGqJL6hTq1FMpZEzwZZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1341,
								"contract": "contracts/Marketplace.sol:Marketplace",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2857,
								"contract": "contracts/Marketplace.sol:Marketplace",
								"label": "_nftsSold",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 2859,
								"contract": "contracts/Marketplace.sol:Marketplace",
								"label": "_nftCount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2862,
								"contract": "contracts/Marketplace.sol:Marketplace",
								"label": "LISTING_FEE",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2864,
								"contract": "contracts/Marketplace.sol:Marketplace",
								"label": "_marketOwner",
								"offset": 0,
								"slot": "4",
								"type": "t_address_payable"
							},
							{
								"astId": 2869,
								"contract": "contracts/Marketplace.sol:Marketplace",
								"label": "_idToNFT",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(NFT)2882_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(NFT)2882_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Marketplace.NFT)",
								"numberOfBytes": "32",
								"value": "t_struct(NFT)2882_storage"
							},
							"t_struct(NFT)2882_storage": {
								"encoding": "inplace",
								"label": "struct Marketplace.NFT",
								"members": [
									{
										"astId": 2871,
										"contract": "contracts/Marketplace.sol:Marketplace",
										"label": "nftContract",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2873,
										"contract": "contracts/Marketplace.sol:Marketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2875,
										"contract": "contracts/Marketplace.sol:Marketplace",
										"label": "seller",
										"offset": 0,
										"slot": "2",
										"type": "t_address_payable"
									},
									{
										"astId": 2877,
										"contract": "contracts/Marketplace.sol:Marketplace",
										"label": "owner",
										"offset": 0,
										"slot": "3",
										"type": "t_address_payable"
									},
									{
										"astId": 2879,
										"contract": "contracts/Marketplace.sol:Marketplace",
										"label": "price",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2881,
										"contract": "contracts/Marketplace.sol:Marketplace",
										"label": "listed",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "142:142:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "296:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "316:314:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "642:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "708:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "700:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:49:0"
									},
									"src": "636:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "724:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "891:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "918:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "910:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:16:0"
									},
									"src": "885:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "934:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1108:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1137:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1129:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:18:0"
									},
									"src": "1102:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1155:350:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1517:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1544:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1569:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1561:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1588:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1580:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:52:0"
									},
									"src": "1511:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1604:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1793:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1822:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1814:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:18:0"
									},
									"src": "1787:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1840:198:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2050:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2078:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2070:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:17:0"
									},
									"src": "2044:43:0"
								}
							],
							"scope": 137,
							"src": "286:1804:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2094:144:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2250:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2271:223:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2506:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2525:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:0"
									},
									"src": "2500:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2548:135:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2695:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2726:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:17:0"
									},
									"src": "2689:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2743:294:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3049:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3078:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3070:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3094:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3086:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3103:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:48:0"
									},
									"src": "3043:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3126:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3293:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3321:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3313:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:16:0"
									},
									"src": "3287:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3337:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3511:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3541:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3533:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:18:0"
									},
									"src": "3505:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3559:251:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3822:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3849:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3875:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3867:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:35:0"
									},
									"src": "3816:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3892:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4081:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4111:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4103:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:18:0"
									},
									"src": "4075:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4129:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4341:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4371:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4363:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:18:0"
									},
									"src": "4335:46:0"
								}
							],
							"scope": 137,
							"src": "2240:2144:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4388:146:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4546:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4568:367:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4947:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4998:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5015:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "5007:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "5023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4973:66:0"
									},
									"src": "4941:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "5048:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5215:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:16:0"
									},
									"src": "5209:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5260:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5434:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5465:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5457:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5456:18:0"
									},
									"src": "5428:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5483:260:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5755:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5792:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5784:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5810:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5802:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:33:0"
									},
									"src": "5749:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5825:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "6014:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6045:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "6037:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:18:0"
									},
									"src": "6008:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "6063:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6275:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:18:0"
									},
									"src": "6269:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6324:285:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6621:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6655:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6674:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6666:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:41:0"
									},
									"src": "6615:73:0"
								}
							],
							"scope": 137,
							"src": "4536:2155:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "114:6579:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1330
						],
						"ERC165": [
							1678
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							1690
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Strings": [
							1654
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1263,
							"src": "138:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "146:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1281,
							"src": "178:54:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "186:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1309,
							"src": "234:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "242:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1331,
							"src": "301:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1330,
										"src": "309:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1655,
							"src": "351:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1654,
										"src": "359:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1679,
							"src": "401:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 149,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1690,
										"src": "409:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 150,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1678,
										"src": "418:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 137,
							"src": "472:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "480:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"822:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1330,
										"src": "822:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"831:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1678,
										"src": "831:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "831:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC721",
										"nameLocations": [
											"839:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "839:7:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "839:7:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721Metadata",
										"nameLocations": [
											"848:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1308,
										"src": "848:15:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "848:15:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC721Errors",
										"nameLocations": [
											"865:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "865:13:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "865:13:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "542:250:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1145,
							"linearizedBaseContracts": [
								1145,
								89,
								1308,
								1262,
								1678,
								1690,
								1330
							],
							"name": "ERC721",
							"nameLocation": "812:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 167,
									"libraryName": {
										"id": 165,
										"name": "Strings",
										"nameLocations": [
											"892:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1654,
										"src": "892:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "886:26:1",
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "904:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "954:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "939:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "939:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1004:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "989:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "989:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1064:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1020:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 174,
										"keyName": "tokenId",
										"keyNameLocation": "1036:7:1",
										"keyType": {
											"id": 172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1028:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1020:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1122:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1080:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 178,
										"keyName": "owner",
										"keyNameLocation": "1096:5:1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1088:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1080:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1184:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1140:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 182,
										"keyName": "tokenId",
										"keyNameLocation": "1156:7:1",
										"keyType": {
											"id": 180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1148:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1140:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1167:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 189,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1276:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1208:86:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 188,
										"keyName": "owner",
										"keyNameLocation": "1224:5:1",
										"keyType": {
											"id": 184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1216:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1208:59:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 187,
											"keyName": "operator",
											"keyNameLocation": "1249:8:1",
											"keyType": {
												"id": 185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1241:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1233:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1261:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1475:60:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1486:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1494:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1486:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1486:13:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1510:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 202,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1520:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1510:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1510:17:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1303:110:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1445:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1431:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1431:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1466:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1452:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1452:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:44:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:0:1"
									},
									"scope": 1145,
									"src": "1419:116:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1677,
										1689
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1715:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1746:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1262,
																			"src": "1766:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 218,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1761:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1761:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1262",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1775:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1761:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1746:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1803:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 225,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1308,
																			"src": "1823:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 224,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1818:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1818:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1308",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1840:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1818:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1803:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1746:105:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 232,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1892:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 230,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1868:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1145_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1874:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1677,
															"src": "1868:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1868:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1746:158:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 216,
												"id": 235,
												"nodeType": "Return",
												"src": "1726:178:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1543:58:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1616:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 211,
												"name": "ERC165",
												"nameLocations": [
													"1683:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1678,
												"src": "1683:6:1"
											},
											{
												"id": 212,
												"name": "IERC165",
												"nameLocations": [
													"1691:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1690,
												"src": "1691:7:1"
											}
										],
										"src": "1674:25:1"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1641:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1634:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 208,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:20:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1709:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1709:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:6:1"
									},
									"scope": 1145,
									"src": "1607:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2048:141:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2063:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2080:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2072:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2072:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2072:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2063:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "2059:89:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "2084:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2133:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2125:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 252,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2125:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2125:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 251,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2106:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2106:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 257,
															"nodeType": "RevertStatement",
															"src": "2099:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 260,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2165:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 262,
													"indexExpression": {
														"id": 261,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2175:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2165:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 263,
												"nodeType": "Return",
												"src": "2158:23:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1920:50:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1985:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2003:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1995:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:15:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2039:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:9:1"
									},
									"scope": 1145,
									"src": "1976:213:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1195
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2323:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2355:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2341:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 272,
												"id": 276,
												"nodeType": "Return",
												"src": "2334:29:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2197:48:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2260:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2276:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2268:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:17:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2314:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:9:1"
									},
									"scope": 1145,
									"src": "2251:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2498:31:1",
										"statements": [
											{
												"expression": {
													"id": 284,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2516:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "2509:12:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2379:53:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2447:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:2:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2483:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2483:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:15:1"
									},
									"scope": 1145,
									"src": "2438:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1299
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2660:33:1",
										"statements": [
											{
												"expression": {
													"id": 293,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 292,
												"id": 294,
												"nodeType": "Return",
												"src": "2671:14:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2537:55:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2607:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:2:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2645:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2645:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2644:15:1"
									},
									"scope": 1145,
									"src": "2598:95:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "2843:181:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2868:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2854:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2854:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2854:22:1"
											},
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2903:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "2889:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 308,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2889:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2913:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2913:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2889:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 315,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "2947:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2941:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2941:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2941:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2956:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2941:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2965:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2941:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3014:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2941:75:1",
													"trueExpression": {
														"arguments": [
															{
																"id": 323,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "2983:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 324,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "2992:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3000:8:1",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1467,
																	"src": "2992:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2992:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2969:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 320,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2969:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2976:6:1",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2969:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2969:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 303,
												"id": 330,
												"nodeType": "Return",
												"src": "2934:82:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2701:57:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2773:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2790:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2782:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:17:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2828:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2828:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:15:1"
									},
									"scope": 1145,
									"src": "2764:260:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3339:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3357:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "3350:9:1"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "3032:235:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3282:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3290:2:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3324:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3324:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:15:1"
									},
									"scope": 1145,
									"src": "3273:94:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3490:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3510:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 352,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3523:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3523:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 349,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 948,
														"src": "3501:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3501:35:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3375:48:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3438:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3454:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3446:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3466:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3458:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:29:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3490:0:1"
									},
									"scope": 1145,
									"src": "3429:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "3686:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3711:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3697:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "3697:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3752:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3739:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 364,
												"id": 372,
												"nodeType": "Return",
												"src": "3732:28:1"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3552:52:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3619:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3639:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3631:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:17:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3677:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3676:9:1"
									},
									"scope": 1145,
									"src": "3610:158:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3915:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3945:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3945:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3959:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3969:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 382,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "3926:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3926:52:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "3776:58:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3849:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3875:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3867:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3890:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3885:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3885:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3866:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3915:0:1"
									},
									"scope": 1145,
									"src": "3840:146:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4151:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 400,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4169:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4188:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4169:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "4195:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4169:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "4162:42:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3994:57:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4066:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4091:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4083:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4106:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4098:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4098:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4082:33:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4145:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4144:6:1"
									},
									"scope": 1145,
									"src": "4057:155:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4359:508:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "4374:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4388:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4380:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4380:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4380:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4374:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "4370:89:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "4392:67:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4444:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4436:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4436:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4436:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4414:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4414:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "4407:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4688:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4680:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 432,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4680:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4712:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4716:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 437,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "4725:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4725:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 434,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4704:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4680:58:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "4753:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 442,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4770:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4753:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "4749:111:1",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "4776:84:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 445,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "4819:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 446,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "4825:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 447,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "4834:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 444,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4798:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4798:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 449,
															"nodeType": "RevertStatement",
															"src": "4791:57:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4220:53:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4288:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4309:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4301:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4323:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4315:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4315:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4335:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4327:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4300:43:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4359:0:1"
									},
									"scope": 1145,
									"src": "4279:588:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "5014:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5042:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "5048:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "5052:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5061:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 463,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															497
														],
														"referencedDeclaration": 497,
														"src": "5025:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5025:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "5025:39:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "4875:57:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4947:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4972:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4964:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4964:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4986:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4978:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4998:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4990:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:43:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5014:0:1"
									},
									"scope": 1145,
									"src": "4938:134:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1207
									],
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "5246:108:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5270:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5276:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5280:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5257:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5257:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "5257:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5322:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5328:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5332:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5341:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 489,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5299:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5299:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "5299:47:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "5080:57:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5152:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5177:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5169:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5191:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5183:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5203:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5195:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5225:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5212:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5212:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:62:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5246:0:1"
									},
									"scope": 1145,
									"src": "5143:211:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "5953:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 505,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 507,
													"indexExpression": {
														"id": 506,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "5979:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5971:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 504,
												"id": 508,
												"nodeType": "Return",
												"src": "5964:23:1"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5362:510:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5887:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5904:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5896:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:17:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5944:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5943:9:1"
									},
									"scope": 1145,
									"src": "5878:117:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6195:50:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6213:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "6229:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6213:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 517,
												"id": 521,
												"nodeType": "Return",
												"src": "6206:31:1"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "6003:107:1",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "6125:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6146:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6138:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6138:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6137:17:1"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6186:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:9:1"
									},
									"scope": 1145,
									"src": "6116:129:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "6674:167:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 535,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "6705:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6724:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6716:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6716:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6716:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6705:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "6744:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 542,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "6753:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6744:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "6781:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 546,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "6788:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 544,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "6764:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6764:32:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6744:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 550,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "6813:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 549,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6800:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6800:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 552,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "6825:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6800:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6744:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6743:90:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6705:128:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 534,
												"id": 557,
												"nodeType": "Return",
												"src": "6685:148:1"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6253:306:1",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6574:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6588:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6611:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6603:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6628:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6620:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6620:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6587:49:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6668:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:1"
									},
									"scope": 1145,
									"src": "6565:276:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "7382:279:1",
										"statements": [
											{
												"condition": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7397:39:1",
													"subExpression": {
														"arguments": [
															{
																"id": 570,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "7412:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 571,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "7419:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 572,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "7428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 569,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7398:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7398:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "7393:261:1",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "7438:216:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 575,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "7457:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7474:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7466:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 576,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7466:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7466:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7457:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 591,
																"nodeType": "Block",
																"src": "7557:86:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 587,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "7610:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 588,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7619:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 586,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7583:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7583:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 590,
																		"nodeType": "RevertStatement",
																		"src": "7576:51:1"
																	}
																]
															},
															"id": 592,
															"nodeType": "IfStatement",
															"src": "7453:190:1",
															"trueBody": {
																"id": 585,
																"nodeType": "Block",
																"src": "7478:73:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 582,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7527:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 581,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7504:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7504:31:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 584,
																		"nodeType": "RevertStatement",
																		"src": "7497:38:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "6849:430:1",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7294:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7319:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7311:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7351:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7343:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7310:49:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7382:0:1"
									},
									"scope": 1145,
									"src": "7285:376:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "8390:82:1",
										"statements": [
											{
												"id": 610,
												"nodeType": "UncheckedBlock",
												"src": "8401:64:1",
												"statements": [
													{
														"expression": {
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 604,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "8426:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 606,
																"indexExpression": {
																	"id": 605,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "8436:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8426:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 607,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "8448:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8426:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 609,
														"nodeType": "ExpressionStatement",
														"src": "8426:27:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "7669:640:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8324:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8349:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8341:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8341:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8366:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8358:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 600,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:32:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8390:0:1"
									},
									"scope": 1145,
									"src": "8315:157:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "9173:729:1",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "9192:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "9184:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9184:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [
														{
															"id": 627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9208:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "9199:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9199:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9184:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 630,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "9279:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9295:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9287:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 631,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9287:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9287:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9279:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "IfStatement",
												"src": "9275:88:1",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "9299:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "9331:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 638,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "9337:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9343:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "9314:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9314:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "9314:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9410:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9426:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9418:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9418:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9410:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "9406:263:1",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "9430:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9545:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9537:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 651,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9537:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9537:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 655,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9549:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9566:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9558:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 656,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9558:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9558:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9570:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 650,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		948,
																		1014
																	],
																	"referencedDeclaration": 1014,
																	"src": "9528:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9528:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "9528:48:1"
														},
														{
															"id": 669,
															"nodeType": "UncheckedBlock",
															"src": "9593:65:1",
															"statements": [
																{
																	"expression": {
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 663,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9622:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 665,
																			"indexExpression": {
																				"id": 664,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "9632:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9622:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9641:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9622:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 668,
																	"nodeType": "ExpressionStatement",
																	"src": "9622:20:1"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9685:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9699:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9691:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9691:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9691:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9685:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "9681:111:1",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "9703:89:1",
													"statements": [
														{
															"id": 684,
															"nodeType": "UncheckedBlock",
															"src": "9718:63:1",
															"statements": [
																{
																	"expression": {
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 678,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9747:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 680,
																			"indexExpression": {
																				"id": 679,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9757:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9747:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9764:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9747:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 683,
																	"nodeType": "ExpressionStatement",
																	"src": "9747:18:1"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 687,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9812:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9804:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9823:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9804:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9804:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "9852:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "9858:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9862:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "9843:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9843:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "9838:32:1"
											},
											{
												"expression": {
													"id": 699,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 625,
													"src": "9890:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 700,
												"nodeType": "Return",
												"src": "9883:11:1"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "8480:592:1",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "9087:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9103:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "9095:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9095:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9115:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "9107:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "9132:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "9124:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9124:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9094:43:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "9164:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9164:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9163:9:1"
									},
									"scope": 1145,
									"src": "9078:824:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "10291:282:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "10306:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10320:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10312:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 711,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10312:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10312:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10306:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "10302:89:1",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "10324:67:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10376:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10368:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 717,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10368:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10368:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 716,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10346:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10346:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 722,
															"nodeType": "RevertStatement",
															"src": "10339:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10409:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "10401:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 725,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10401:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "10433:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10437:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10454:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10446:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 730,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10446:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10446:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "10425:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10425:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10401:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10472:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10497:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10489:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 737,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10489:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10489:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10472:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "10468:98:1",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "10501:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10543:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 743,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10543:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10543:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 742,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10523:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10523:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 748,
															"nodeType": "RevertStatement",
															"src": "10516:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "9910:322:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10247:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10261:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "10253:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10253:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10273:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "10265:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10252:29:1"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10291:0:1"
									},
									"scope": 1145,
									"src": "10238:335:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "10993:45:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "11014:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "11018:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11027:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 760,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															793
														],
														"referencedDeclaration": 793,
														"src": "11004:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11004:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "11004:26:1"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "10581:349:1",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10945:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10963:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10955:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10955:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10975:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10967:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10967:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10954:29:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10993:0:1"
									},
									"scope": 1145,
									"src": "10936:102:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "11349:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11366:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11370:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "11360:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11360:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "11360:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11420:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11412:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 783,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11412:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11412:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11424:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11428:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11437:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 782,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "11389:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11389:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "11389:53:1"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "11046:213:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11274:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11292:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11284:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11284:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11304:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11296:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11296:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11326:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11313:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11313:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11283:48:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11349:0:1"
									},
									"scope": 1145,
									"src": "11265:185:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "11830:191:1",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11849:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "11841:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11841:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11881:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11873:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11873:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11873:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11885:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11902:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11894:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11894:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11894:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 801,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "11865:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11865:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11841:64:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "11920:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11945:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11937:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11937:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11937:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11920:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "11916:98:1",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "11949:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "11994:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 819,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11971:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11971:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "11964:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "11458:325:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11798:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11812:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11804:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11804:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11803:17:1"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11830:0:1"
									},
									"scope": 1145,
									"src": "11789:232:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "12429:399:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "12444:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12458:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12450:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 837,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12450:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12450:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12444:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "12440:89:1",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "12462:67:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12514:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12506:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 843,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12506:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12506:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 842,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12484:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12484:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "RevertStatement",
															"src": "12477:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12547:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "12539:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 851,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12539:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12571:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12575:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12592:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12584:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12584:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12584:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 853,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "12563:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12563:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12539:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "12610:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12635:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12627:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12627:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12627:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12610:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "12714:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "12731:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12714:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 883,
													"nodeType": "IfStatement",
													"src": "12710:111:1",
													"trueBody": {
														"id": 882,
														"nodeType": "Block",
														"src": "12737:84:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 877,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "12780:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 878,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "12786:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 879,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "12795:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 876,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12759:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12759:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 881,
																"nodeType": "RevertStatement",
																"src": "12752:57:1"
															}
														]
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "12606:215:1",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "12639:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 869,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "12684:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 868,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12661:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12661:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "RevertStatement",
															"src": "12654:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "12029:323:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12367:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12385:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12377:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12399:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12391:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12391:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12411:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12403:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12403:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12376:43:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12429:0:1"
									},
									"scope": 1145,
									"src": "12358:470:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "13857:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "13882:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "13888:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "13892:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13901:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 896,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															904,
															930
														],
														"referencedDeclaration": 930,
														"src": "13868:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13868:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "13868:36:1"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "12836:940:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13791:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13813:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13805:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13827:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13819:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13819:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13839:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13831:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13831:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13804:43:1"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13857:0:1"
									},
									"scope": 1145,
									"src": "13782:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "14257:105:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "14278:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "14284:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "14288:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "14268:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14268:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "14268:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "14330:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "14336:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "14340:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 926,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "14349:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 922,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "14307:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14307:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "14307:47:1"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "13920:229:1",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14164:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14186:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "14178:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14200:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "14192:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14212:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "14204:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14234:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "14221:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14221:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14177:62:1"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14257:0:1"
									},
									"scope": 1145,
									"src": "14155:207:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "14887:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "14907:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "14911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "14920:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14926:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 1014,
														"src": "14898:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14898:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "14898:33:1"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "14370:441:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14826:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14843:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14835:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14855:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14847:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14872:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14864:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14864:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14834:43:1"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14887:0:1"
									},
									"scope": 1145,
									"src": "14817:122:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "15221:584:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "15289:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 961,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "15302:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15318:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15310:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15310:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15310:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15302:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15289:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "15285:471:1",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "15322:434:1",
													"statements": [
														{
															"assignments": [
																969
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 969,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "15345:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1005,
																	"src": "15337:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15337:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 973,
															"initialValue": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "15367:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "15353:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15353:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15337:38:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 974,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15506:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15522:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15514:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15514:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15514:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15506:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 980,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 969,
																			"src": "15528:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 981,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15537:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15528:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15506:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15545:30:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 985,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "15563:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 986,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "15570:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 984,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "15546:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15546:29:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15506:69:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 995,
															"nodeType": "IfStatement",
															"src": "15502:144:1",
															"trueBody": {
																"id": 994,
																"nodeType": "Block",
																"src": "15577:69:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 991,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "15625:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 990,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15603:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15603:27:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 993,
																		"nodeType": "RevertStatement",
																		"src": "15596:34:1"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 996,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "15666:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1004,
															"nodeType": "IfStatement",
															"src": "15662:83:1",
															"trueBody": {
																"id": 1003,
																"nodeType": "Block",
																"src": "15677:68:1",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 998,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "15710:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 999,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "15717:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1000,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "15721:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 997,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "15701:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15701:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1002,
																		"nodeType": "EmitStatement",
																		"src": "15696:33:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "15768:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1009,
														"indexExpression": {
															"id": 1008,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "15784:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15768:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15795:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15768:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "15768:29:1"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "14947:174:1",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15136:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15153:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "15145:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15145:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15165:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "15157:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15157:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "15182:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "15174:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15174:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "15193:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "15188:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15188:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15144:59:1"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15221:0:1"
									},
									"scope": 1145,
									"src": "15127:678:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "16117:225:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "16132:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16152:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16144:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16144:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16144:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16132:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "16128:93:1",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "16156:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1031,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "16200:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "16178:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16178:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1033,
															"nodeType": "RevertStatement",
															"src": "16171:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1036,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "16231:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1039,
															"indexExpression": {
																"id": 1037,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "16250:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16231:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "16257:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16231:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "16269:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16231:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "16231:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1045,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "16308:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "16315:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "16325:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1044,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "16293:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16293:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "16288:46:1"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "15813:205:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "16033:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16060:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "16052:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16052:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16075:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "16067:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16067:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16090:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "16085:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16085:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16051:48:1"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16117:0:1"
									},
									"scope": 1145,
									"src": "16024:318:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "16657:175:1",
										"statements": [
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16676:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "16668:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1059,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16668:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"id": 1062,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "16693:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "16684:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16684:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16668:33:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "16716:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16725:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1066,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16725:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16725:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16716:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "16712:90:1",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "16737:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1072,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "16782:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1071,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16759:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16759:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1074,
															"nodeType": "RevertStatement",
															"src": "16752:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1077,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "16819:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1078,
												"nodeType": "Return",
												"src": "16812:12:1"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "16350:229:1",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16594:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16616:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16608:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16608:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16607:17:1"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16648:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16647:9:1"
									},
									"scope": 1145,
									"src": "16585:247:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "17484:697:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1092,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "17499:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17502:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17499:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17507:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17499:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17516:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17499:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "17495:679:1",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "17519:655:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1121,
																		"nodeType": "Block",
																		"src": "17634:166:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1110,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "17657:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1111,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1280,
																								"src": "17667:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17683:16:1",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1279,
																							"src": "17667:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1113,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17700:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17667:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17657:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1120,
																				"nodeType": "IfStatement",
																				"src": "17653:132:1",
																				"trueBody": {
																					"id": 1119,
																					"nodeType": "Block",
																					"src": "17710:75:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1116,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17762:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1115,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17740:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17740:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1118,
																							"nodeType": "RevertStatement",
																							"src": "17733:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1122,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1109,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1108,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17626:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1122,
																				"src": "17619:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1107,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17619:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17618:15:1"
																	},
																	"src": "17610:190:1"
																},
																{
																	"block": {
																		"id": 1138,
																		"nodeType": "Block",
																		"src": "17829:334:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1126,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "17852:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17859:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17852:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1128,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17869:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17852:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1136,
																					"nodeType": "Block",
																					"src": "17953:195:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "18041:88:1",
																								"nodeType": "YulBlock",
																								"src": "18041:88:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "18079:2:1",
																															"nodeType": "YulLiteral",
																															"src": "18079:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "18083:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "18083:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "18075:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "18075:3:1"
																													},
																													"nativeSrc": "18075:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "18075:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "18098:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "18098:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "18092:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "18092:5:1"
																													},
																													"nativeSrc": "18092:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "18092:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "18068:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "18068:6:1"
																											},
																											"nativeSrc": "18068:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "18068:38:1"
																										},
																										"nativeSrc": "18068:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "18068:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18083:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18098:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1135,
																							"nodeType": "InlineAssembly",
																							"src": "18032:97:1"
																						}
																					]
																				},
																				"id": 1137,
																				"nodeType": "IfStatement",
																				"src": "17848:300:1",
																				"trueBody": {
																					"id": 1134,
																					"nodeType": "Block",
																					"src": "17872:75:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1131,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17924:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1130,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17902:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1132,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17902:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1133,
																							"nodeType": "RevertStatement",
																							"src": "17895:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1139,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1125,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1124,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17821:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1139,
																				"src": "17808:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17808:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17807:21:1"
																	},
																	"src": "17801:362:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1101,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "17575:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17575:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1103,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "17589:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "17595:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1105,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "17604:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1098,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "17554:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1097,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "17538:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17538:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1280",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17558:16:1",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1279,
																	"src": "17538:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17538:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1140,
															"nodeType": "TryStatement",
															"src": "17534:629:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "16840:536:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "17391:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17422:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "17414:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17436:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "17428:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17448:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "17440:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17470:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "17457:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17457:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17413:62:1"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17484:0:1"
									},
									"scope": 1145,
									"src": "17382:799:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1146,
							"src": "794:17390:1",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "110:18076:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1690
						],
						"IERC721": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 1691,
							"src": "139:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1148,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1690,
										"src": "147:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1151,
										"name": "IERC165",
										"nameLocations": [
											"297:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1690,
										"src": "297:7:2"
									},
									"id": 1152,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "205:69:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1262,
							"linearizedBaseContracts": [
								1262,
								1690
							],
							"name": "IERC721",
							"nameLocation": "286:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "312:90:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1161,
									"name": "Transfer",
									"nameLocation": "414:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "439:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "423:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "461:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "445:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "465:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:67:2"
									},
									"src": "408:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "498:96:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1170,
									"name": "Approval",
									"nameLocation": "606:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "631:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "615:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "654:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "638:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "680:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "664:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:74:2"
									},
									"src": "600:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "697:119:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1179,
									"name": "ApprovalForAll",
									"nameLocation": "828:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "859:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "843:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "882:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "866:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "897:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "892:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "892:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "842:64:2"
									},
									"src": "822:85:2"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "915:78:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1026:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1018:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:15:2"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1064:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1056:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:17:2"
									},
									"scope": 1262,
									"src": "999:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1081:137:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1233:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1249:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1241:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:17:2"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1289:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1281:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:15:2"
									},
									"scope": 1262,
									"src": "1224:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "1304:578:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1897:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1922:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1914:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1936:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1928:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1948:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1940:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1972:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1957:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1957:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:64:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:0:2"
									},
									"scope": 1262,
									"src": "1888:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "1995:720:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2730:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2755:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2747:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2769:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2761:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2781:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2773:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:43:2"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2798:0:2"
									},
									"scope": 1262,
									"src": "2721:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "2807:747:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3569:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3590:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3582:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3596:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3616:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3608:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:43:2"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3633:0:2"
									},
									"scope": 1262,
									"src": "3560:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3642:464:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4121:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4137:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4129:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4149:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4141:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4141:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4128:29:2"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4166:0:2"
									},
									"scope": 1262,
									"src": "4112:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "4175:324:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4514:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4540:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4532:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4532:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4555:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4550:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4550:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4531:33:2"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4573:0:2"
									},
									"scope": 1262,
									"src": "4505:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "4582:145:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4742:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4762:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4754:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:17:2"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4802:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4794:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4793:18:2"
									},
									"scope": 1262,
									"src": "4733:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "4820:142:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4977:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4994:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5017:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "5009:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5009:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:33:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "5050:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5050:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:6:2"
									},
									"scope": 1262,
									"src": "4968:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1263,
							"src": "276:4783:2",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "111:4950:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "119:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1265,
								"nodeType": "StructuredDocumentation",
								"src": "147:156:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "IERC721Receiver",
							"nameLocation": "315:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "338:509:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "862:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "897:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "889:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "924:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "916:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "947:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "939:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "980:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "965:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "965:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:113:3"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1010:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1010:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:8:3"
									},
									"scope": 1280,
									"src": "853:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1281,
							"src": "305:716:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "119:904:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1262
						],
						"IERC721Metadata": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "130:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1309,
							"sourceUnit": 1263,
							"src": "158:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1283,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "166:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1286,
										"name": "IERC721",
										"nameLocations": [
											"368:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "368:7:4"
									},
									"id": 1287,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "201:136:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1308,
							"linearizedBaseContracts": [
								1308,
								1262,
								1690
							],
							"name": "IERC721Metadata",
							"nameLocation": "349:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "383:60:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "458:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:4"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "488:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:15:4"
									},
									"scope": 1308,
									"src": "449:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "511:62:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "588:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:4"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "620:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "620:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:15:4"
									},
									"scope": 1308,
									"src": "579:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "643:92:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "750:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:17:4"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "799:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:15:4"
									},
									"scope": 1308,
									"src": "741:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "339:478:4",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "130:689:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1330
						]
					},
					"id": 1331,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "132:505:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1330,
							"linearizedBaseContracts": [
								1330
							],
							"name": "Context",
							"nameLocation": "657:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "734:36:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1316,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "752:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "756:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "752:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1318,
												"nodeType": "Return",
												"src": "745:17:5"
											}
										]
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "681:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:5"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "725:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:5"
									},
									"scope": 1330,
									"src": "672:98:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "845:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1325,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "863:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "867:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "863:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1327,
												"nodeType": "Return",
												"src": "856:15:5"
											}
										]
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "787:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "829:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:5"
									},
									"scope": 1330,
									"src": "778:101:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1331,
							"src": "639:243:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:780:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1399
						]
					},
					"id": 1400,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1332,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1333,
								"nodeType": "StructuredDocumentation",
								"src": "140:765:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1399,
							"linearizedBaseContracts": [
								1399
							],
							"name": "ReentrancyGuard",
							"nameLocation": "925:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1336,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1732:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1399,
									"src": "1707:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1334,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1707:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1746:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1339,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1779:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1399,
									"src": "1754:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1754:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1338,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1789:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1341,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1815:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1399,
									"src": "1799:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1340,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1799:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "1831:54:6",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1344,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1897:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1925:2:6"
									},
									"src": "1891:37:6"
								},
								{
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "1950:40:6",
										"statements": [
											{
												"expression": {
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1347,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "1961:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1348,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "1971:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1961:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "1961:21:6"
											}
										]
									},
									"id": 1352,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:2:6"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:0:6"
									},
									"scope": 1399,
									"src": "1936:54:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "2400:83:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1355,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "2411:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "2411:21:6"
											},
											{
												"id": 1358,
												"nodeType": "PlaceholderStatement",
												"src": "2443:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1359,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "2455:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2455:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "2455:20:6"
											}
										]
									},
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "1998:372:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1363,
									"name": "nonReentrant",
									"nameLocation": "2385:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2397:2:6"
									},
									"src": "2376:107:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "2530:276:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1366,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "2620:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1367,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "2631:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2620:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1373,
												"nodeType": "IfStatement",
												"src": "2616:88:6",
												"trueBody": {
													"id": 1372,
													"nodeType": "Block",
													"src": "2640:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1369,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "2662:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2662:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1371,
															"nodeType": "RevertStatement",
															"src": "2655:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1374,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "2781:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1375,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "2791:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2781:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:6"
											}
										]
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2500:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2519:2:6"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2530:0:6"
									},
									"scope": 1399,
									"src": "2491:315:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "2852:174:6",
										"statements": [
											{
												"expression": {
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1382,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "2997:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1383,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "3007:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2997:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "2997:21:6"
											}
										]
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2823:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2841:2:6"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2852:0:6"
									},
									"scope": 1399,
									"src": "2814:212:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "3275:44:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1393,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "3293:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1394,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "3304:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3293:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1392,
												"id": 1396,
												"nodeType": "Return",
												"src": "3286:25:6"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "3034:171:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3220:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3243:2:6"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "3269:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3269:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3268:6:6"
									},
									"scope": 1399,
									"src": "3211:108:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1400,
							"src": "907:2415:6",
							"usedErrors": [
								1344
							],
							"usedEvents": []
						}
					],
					"src": "112:3212:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2744
						],
						"SignedMath": [
							2849
						],
						"Strings": [
							1654
						]
					},
					"id": 1655,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1401,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1403,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1655,
							"sourceUnit": 2745,
							"src": "132:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1402,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2744,
										"src": "140:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1405,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1655,
							"sourceUnit": 2850,
							"src": "171:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1404,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2849,
										"src": "179:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1406,
								"nodeType": "StructuredDocumentation",
								"src": "224:36:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1654,
							"linearizedBaseContracts": [
								1654
							],
							"name": "Strings",
							"nameLocation": "270:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1409,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "310:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1654,
									"src": "285:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1407,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1408,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "323:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1412,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "371:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1654,
									"src": "348:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1410,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "348:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1411,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "388:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "399:83:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1419,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "494:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "531:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "523:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "546:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "538:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:31:7"
									},
									"src": "488:66:7"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "731:647:7",
										"statements": [
											{
												"id": 1465,
												"nodeType": "UncheckedBlock",
												"src": "742:629:7",
												"statements": [
													{
														"assignments": [
															1428
														],
														"declarations": [
															{
																"constant": false,
																"id": 1428,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "775:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1465,
																"src": "767:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1427,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "767:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1435,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1431,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "795:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1429,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2744,
																		"src": "784:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2744_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "789:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2564,
																	"src": "784:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "784:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "804:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "784:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "767:38:7"
													},
													{
														"assignments": [
															1437
														],
														"declarations": [
															{
																"constant": false,
																"id": 1437,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "834:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1465,
																"src": "820:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1436,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "820:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1442,
														"initialValue": {
															"arguments": [
																{
																	"id": 1440,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "854:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "843:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1438,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "847:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "843:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "820:41:7"
													},
													{
														"assignments": [
															1444
														],
														"declarations": [
															{
																"constant": false,
																"id": 1444,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "884:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1465,
																"src": "876:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1443,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "876:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1445,
														"nodeType": "VariableDeclarationStatement",
														"src": "876:11:7"
													},
													{
														"AST": {
															"nativeSrc": "959:69:7",
															"nodeType": "YulBlock",
															"src": "959:69:7",
															"statements": [
																{
																	"nativeSrc": "978:35:7",
																	"nodeType": "YulAssignment",
																	"src": "978:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "989:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "989:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1001:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1001:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1005:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1005:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "997:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "997:3:7"
																				},
																				"nativeSrc": "997:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "997:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "985:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:7"
																		},
																		"nativeSrc": "985:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "985:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "978:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1437,
																"isOffset": false,
																"isSlot": false,
																"src": "989:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1428,
																"isOffset": false,
																"isSlot": false,
																"src": "1005:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1444,
																"isOffset": false,
																"isSlot": false,
																"src": "978:3:7",
																"valueSize": 1
															}
														],
														"id": 1446,
														"nodeType": "InlineAssembly",
														"src": "950:78:7"
													},
													{
														"body": {
															"id": 1461,
															"nodeType": "Block",
															"src": "1055:277:7",
															"statements": [
																{
																	"expression": {
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1074:5:7",
																		"subExpression": {
																			"id": 1448,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1444,
																			"src": "1074:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1450,
																	"nodeType": "ExpressionStatement",
																	"src": "1074:5:7"
																},
																{
																	"AST": {
																		"nativeSrc": "1159:88:7",
																		"nodeType": "YulBlock",
																		"src": "1159:88:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1190:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1190:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1204:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "1204:5:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1211:2:7",
																											"nodeType": "YulLiteral",
																											"src": "1211:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1200:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1200:3:7"
																									},
																									"nativeSrc": "1200:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "1200:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1216:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1216:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1195:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1195:4:7"
																							},
																							"nativeSrc": "1195:32:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1195:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1182:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "1182:7:7"
																					},
																					"nativeSrc": "1182:46:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1182:46:7"
																				},
																				"nativeSrc": "1182:46:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "1182:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1409,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1216:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1444,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1190:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1422,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1204:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1451,
																	"nodeType": "InlineAssembly",
																	"src": "1150:97:7"
																},
																{
																	"expression": {
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1452,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "1265:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1274:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1265:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1455,
																	"nodeType": "ExpressionStatement",
																	"src": "1265:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1456,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "1299:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1308:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1299:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1460,
																	"nodeType": "IfStatement",
																	"src": "1295:21:7",
																	"trueBody": {
																		"id": 1459,
																		"nodeType": "Break",
																		"src": "1311:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1049:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1462,
														"nodeType": "WhileStatement",
														"src": "1042:290:7"
													},
													{
														"expression": {
															"id": 1463,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "1353:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1426,
														"id": 1464,
														"nodeType": "Return",
														"src": "1346:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "562:92:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "669:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "686:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "678:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:15:7"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "716:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "716:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:15:7"
									},
									"scope": 1654,
									"src": "660:718:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "1559:94:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1478,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "1591:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1599:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1591:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1609:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1591:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1603:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1487,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "1637:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1485,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2849,
																			"src": "1622:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2849_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1633:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2848,
																		"src": "1622:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1622:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1484,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1613:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1577:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1475,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1577:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1584:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1577:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1474,
												"id": 1491,
												"nodeType": "Return",
												"src": "1570:75:7"
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "1386:91:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1492:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1514:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1507:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1469,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:14:7"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1544:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:15:7"
									},
									"scope": 1654,
									"src": "1483:170:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "1837:104:7",
										"statements": [
											{
												"id": 1511,
												"nodeType": "UncheckedBlock",
												"src": "1848:86:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1502,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "1892:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1505,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1496,
																				"src": "1911:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1503,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2744,
																				"src": "1899:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2744_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1904:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2686,
																			"src": "1899:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1899:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1920:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1899:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1501,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1513,
																	1596,
																	1616
																],
																"referencedDeclaration": 1596,
																"src": "1880:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1880:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1500,
														"id": 1510,
														"nodeType": "Return",
														"src": "1873:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "1661:96:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1772:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1792:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1784:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:15:7"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1822:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1822:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:15:7"
									},
									"scope": 1654,
									"src": "1763:178:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "2159:448:7",
										"statements": [
											{
												"assignments": [
													1524
												],
												"declarations": [
													{
														"constant": false,
														"id": 1524,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2178:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1595,
														"src": "2170:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1523,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2170:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1526,
												"initialValue": {
													"id": 1525,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1516,
													"src": "2191:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2170:26:7"
											},
											{
												"assignments": [
													1528
												],
												"declarations": [
													{
														"constant": false,
														"id": 1528,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2220:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1595,
														"src": "2207:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2207:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1537,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2239:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1532,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1518,
																	"src": "2243:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2239:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2252:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2239:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2229:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1529,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2233:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2229:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2207:47:7"
											},
											{
												"expression": {
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1538,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "2265:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1540,
														"indexExpression": {
															"hexValue": "30",
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2272:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2265:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2277:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2265:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "2265:15:7"
											},
											{
												"expression": {
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1544,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "2291:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1546,
														"indexExpression": {
															"hexValue": "31",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2291:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2303:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2291:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "2291:15:7"
											},
											{
												"body": {
													"id": 1578,
													"nodeType": "Block",
													"src": "2362:98:7",
													"statements": [
														{
															"expression": {
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1564,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "2377:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1566,
																	"indexExpression": {
																		"id": 1565,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "2384:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2377:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1567,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "2389:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1571,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1568,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1524,
																			"src": "2400:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2413:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2400:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2389:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2377:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1573,
															"nodeType": "ExpressionStatement",
															"src": "2377:40:7"
														},
														{
															"expression": {
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1574,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1524,
																	"src": "2432:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2447:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2432:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1577,
															"nodeType": "ExpressionStatement",
															"src": "2432:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1558,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "2350:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2354:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2350:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1579,
												"initializationExpression": {
													"assignments": [
														1551
													],
													"declarations": [
														{
															"constant": false,
															"id": 1551,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2330:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1579,
															"src": "2322:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1550,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2322:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1557,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2334:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1553,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "2338:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2334:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2347:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2334:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2322:26:7"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2357:3:7",
														"subExpression": {
															"id": 1561,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "2359:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1563,
													"nodeType": "ExpressionStatement",
													"src": "2357:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2317:143:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1580,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "2474:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2488:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2474:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1589,
												"nodeType": "IfStatement",
												"src": "2470:98:7",
												"trueBody": {
													"id": 1588,
													"nodeType": "Block",
													"src": "2491:77:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "2542:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1585,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "2549:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1583,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "2513:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2513:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1587,
															"nodeType": "RevertStatement",
															"src": "2506:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1592,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "2592:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2585:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1590,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2585:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1522,
												"id": 1594,
												"nodeType": "Return",
												"src": "2578:21:7"
											}
										]
									},
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "1949:114:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2078:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2098:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2090:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2113:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2105:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:31:7"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2144:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1520,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:7"
									},
									"scope": 1654,
									"src": "2069:538:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "2845:77:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1609,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1599,
																			"src": "2891:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2883:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1607,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2883:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2883:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2875:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1605,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2875:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2875:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1612,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "2899:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1604,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1513,
															1596,
															1616
														],
														"referencedDeclaration": 1596,
														"src": "2863:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2863:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1603,
												"id": 1614,
												"nodeType": "Return",
												"src": "2856:58:7"
											}
										]
									},
									"documentation": {
										"id": 1597,
										"nodeType": "StructuredDocumentation",
										"src": "2615:151:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2781:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2801:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "2793:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2793:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2792:14:7"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "2830:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2830:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:15:7"
									},
									"scope": 1654,
									"src": "2772:150:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "3082:106:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1628,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "3106:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3100:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1626,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3100:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3100:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3109:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3100:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1633,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1621,
																		"src": "3125:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3119:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1631,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3119:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3119:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3128:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3119:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3100:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1640,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1619,
																			"src": "3154:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3148:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1638,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3148:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3148:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1637,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3138:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3138:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1646,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "3177:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3171:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1644,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3171:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3171:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1643,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3161:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3161:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3138:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3100:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1625,
												"id": 1651,
												"nodeType": "Return",
												"src": "3093:87:7"
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "2930:68:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3013:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3033:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "3019:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3019:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3050:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "3036:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1620,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3036:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:34:7"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "3076:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:6:7"
									},
									"scope": 1654,
									"src": "3004:184:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1655,
							"src": "262:2929:7",
							"usedErrors": [
								1419
							],
							"usedEvents": []
						}
					],
					"src": "104:3089:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1678
						],
						"IERC165": [
							1690
						]
					},
					"id": 1679,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1656,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "117:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1658,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 1691,
							"src": "145:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1657,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1690,
										"src": "153:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1660,
										"name": "IERC165",
										"nameLocations": [
											"706:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1690,
										"src": "706:7:8"
									},
									"id": 1661,
									"nodeType": "InheritanceSpecifier",
									"src": "706:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1659,
								"nodeType": "StructuredDocumentation",
								"src": "187:489:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1678,
							"linearizedBaseContracts": [
								1678,
								1690
							],
							"name": "ERC165",
							"nameLocation": "696:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1689
									],
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "867:66:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1669,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "885:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1671,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "905:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1690_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1690_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1670,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "900:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "900:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1690",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "914:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "900:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "885:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1668,
												"id": 1675,
												"nodeType": "Return",
												"src": "878:47:8"
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "721:58:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "812:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1663,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:8"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 1678,
									"src": "785:148:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1679,
							"src": "678:258:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "117:821:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1690
						]
					},
					"id": 1691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1680,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1681,
								"nodeType": "StructuredDocumentation",
								"src": "146:287:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1690,
							"linearizedBaseContracts": [
								1690
							],
							"name": "IERC165",
							"nameLocation": "445:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "460:347:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "822:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "847:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "840:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1683,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "840:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:20:9"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "883:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "883:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:6:9"
									},
									"scope": 1690,
									"src": "813:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1691,
							"src": "435:457:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:776:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2744
						]
					},
					"id": 2745,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1693,
								"nodeType": "StructuredDocumentation",
								"src": "134:75:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2744,
							"linearizedBaseContracts": [
								2744
							],
							"name": "Math",
							"nameLocation": "219:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "231:52:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1696,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "295:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:2:10"
									},
									"src": "289:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1701,
									"members": [
										{
											"id": 1697,
											"name": "Floor",
											"nameLocation": "351:5:10",
											"nodeType": "EnumValue",
											"src": "351:5:10"
										},
										{
											"id": 1698,
											"name": "Ceil",
											"nameLocation": "395:4:10",
											"nodeType": "EnumValue",
											"src": "395:4:10"
										},
										{
											"id": 1699,
											"name": "Trunc",
											"nameLocation": "438:5:10",
											"nodeType": "EnumValue",
											"src": "438:5:10"
										},
										{
											"id": 1700,
											"name": "Expand",
											"nameLocation": "469:6:10",
											"nodeType": "EnumValue",
											"src": "469:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "331:8:10",
									"nodeType": "EnumDefinition",
									"src": "326:174:10"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "685:146:10",
										"statements": [
											{
												"id": 1731,
												"nodeType": "UncheckedBlock",
												"src": "696:128:10",
												"statements": [
													{
														"assignments": [
															1714
														],
														"declarations": [
															{
																"constant": false,
																"id": 1714,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "729:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1731,
																"src": "721:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1713,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "721:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1718,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1715,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "733:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1716,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1706,
																"src": "737:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "733:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "721:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1719,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "757:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1720,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "761:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "757:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1726,
														"nodeType": "IfStatement",
														"src": "753:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "772:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "779:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1724,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "771:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1712,
															"id": 1725,
															"nodeType": "Return",
															"src": "764:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "804:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1728,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "810:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1729,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "803:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1712,
														"id": 1730,
														"nodeType": "Return",
														"src": "796:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "508:95:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "618:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "633:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "625:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "644:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "636:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:22:10"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "670:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1708,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "670:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "676:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:15:10"
									},
									"scope": 2744,
									"src": "609:222:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "1019:118:10",
										"statements": [
											{
												"id": 1759,
												"nodeType": "UncheckedBlock",
												"src": "1030:100:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1745,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1738,
																"src": "1059:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1746,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "1063:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1059:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1752,
														"nodeType": "IfStatement",
														"src": "1055:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1074:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1750,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1073:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1744,
															"id": 1751,
															"nodeType": "Return",
															"src": "1066:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1106:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1754,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1736,
																		"src": "1112:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1755,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1738,
																		"src": "1116:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1112:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1757,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1105:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1744,
														"id": 1758,
														"nodeType": "Return",
														"src": "1098:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "839:98:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "952:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "967:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "959:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "978:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "970:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:22:10"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1004:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1004:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1010:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:15:10"
									},
									"scope": 2744,
									"src": "943:194:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "1328:427:10",
										"statements": [
											{
												"id": 1801,
												"nodeType": "UncheckedBlock",
												"src": "1339:409:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1773,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1764,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1606:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1601:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1780,
														"nodeType": "IfStatement",
														"src": "1597:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1617:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1623:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1778,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1616:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1772,
															"id": 1779,
															"nodeType": "Return",
															"src": "1609:16:10"
														}
													},
													{
														"assignments": [
															1782
														],
														"declarations": [
															{
																"constant": false,
																"id": 1782,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1648:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1801,
																"src": "1640:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1781,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1640:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1786,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1783,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1764,
																"src": "1652:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1784,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "1656:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1652:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1640:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1787,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1782,
																	"src": "1676:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1788,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "1680:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1676:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1790,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "1685:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1676:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1796,
														"nodeType": "IfStatement",
														"src": "1672:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1703:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1794,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1695:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1772,
															"id": 1795,
															"nodeType": "Return",
															"src": "1688:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1728:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1798,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1782,
																	"src": "1734:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1799,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1727:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1772,
														"id": 1800,
														"nodeType": "Return",
														"src": "1720:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "1145:101:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1261:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1276:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1268:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1287:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1279:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:22:10"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1313:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1313:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1319:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1312:15:10"
									},
									"scope": 2744,
									"src": "1252:503:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "1947:119:10",
										"statements": [
											{
												"id": 1829,
												"nodeType": "UncheckedBlock",
												"src": "1958:101:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1815,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "1987:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1992:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1987:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1822,
														"nodeType": "IfStatement",
														"src": "1983:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2003:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2010:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1820,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2002:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1814,
															"id": 1821,
															"nodeType": "Return",
															"src": "1995:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2035:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1824,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1806,
																		"src": "2041:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1825,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "2045:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2041:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1827,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2034:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1814,
														"id": 1828,
														"nodeType": "Return",
														"src": "2027:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "1763:102:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1880:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1895:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1887:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1906:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1898:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:22:10"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1932:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1932:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1938:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:15:10"
									},
									"scope": 2744,
									"src": "1871:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "2268:119:10",
										"statements": [
											{
												"id": 1857,
												"nodeType": "UncheckedBlock",
												"src": "2279:101:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1843,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1836,
																"src": "2308:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2313:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2308:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1850,
														"nodeType": "IfStatement",
														"src": "2304:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2324:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2331:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1848,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2323:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1842,
															"id": 1849,
															"nodeType": "Return",
															"src": "2316:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2356:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1852,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "2362:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1853,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "2366:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2362:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1855,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2355:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1842,
														"id": 1856,
														"nodeType": "Return",
														"src": "2348:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "2074:112:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2201:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2216:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "2208:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2227:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "2219:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:22:10"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "2253:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2253:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "2259:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:15:10"
									},
									"scope": 2744,
									"src": "2192:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "2529:39:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1869,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "2547:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1870,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "2551:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2547:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1873,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2559:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2547:13:10",
													"trueExpression": {
														"id": 1872,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "2555:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1875,
												"nodeType": "Return",
												"src": "2540:20:10"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "2395:61:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2471:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2483:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "2475:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2494:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "2486:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:22:10"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "2520:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2519:9:10"
									},
									"scope": 2744,
									"src": "2462:106:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "2711:39:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1887,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "2729:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1888,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "2733:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2729:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1891,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "2741:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2729:13:10",
													"trueExpression": {
														"id": 1890,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "2737:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1886,
												"id": 1893,
												"nodeType": "Return",
												"src": "2722:20:10"
											}
										]
									},
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "2576:62:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2653:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2665:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "2657:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2676:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "2668:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:22:10"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "2702:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:9:10"
									},
									"scope": 2744,
									"src": "2644:106:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "2940:85:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1905,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "2997:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1906,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "3001:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2997:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1908,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2996:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1909,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "3007:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1910,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1900,
																		"src": "3011:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3007:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1912,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3006:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3016:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3006:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2996:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1904,
												"id": 1916,
												"nodeType": "Return",
												"src": "2989:28:10"
											}
										]
									},
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "2758:105:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2878:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2894:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "2886:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2905:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "2897:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2897:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:22:10"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "2931:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:9:10"
									},
									"scope": 2744,
									"src": "2869:156:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "3325:268:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1928,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "3340:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3345:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1936,
												"nodeType": "IfStatement",
												"src": "3336:130:10",
												"trueBody": {
													"id": 1935,
													"nodeType": "Block",
													"src": "3348:118:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1931,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "3449:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1932,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "3453:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3449:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1927,
															"id": 1934,
															"nodeType": "Return",
															"src": "3442:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1937,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "3557:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3562:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3557:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1941,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "3571:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3575:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3571:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1944,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3570:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1945,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "3580:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3570:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3570:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3557:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3566:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1927,
												"id": 1950,
												"nodeType": "Return",
												"src": "3550:35:10"
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "3033:215:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3263:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3279:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3271:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3271:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3290:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3282:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3270:22:10"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3316:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:10"
									},
									"scope": 2744,
									"src": "3254:339:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2077,
										"nodeType": "Block",
										"src": "4023:4097:10",
										"statements": [
											{
												"id": 2076,
												"nodeType": "UncheckedBlock",
												"src": "4034:4079:10",
												"statements": [
													{
														"assignments": [
															1965
														],
														"declarations": [
															{
																"constant": false,
																"id": 1965,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4367:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2076,
																"src": "4359:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1964,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4359:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1969,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1966,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1955,
																"src": "4375:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1967,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1957,
																"src": "4379:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4375:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4359:21:10"
													},
													{
														"assignments": [
															1971
														],
														"declarations": [
															{
																"constant": false,
																"id": 1971,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4448:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2076,
																"src": "4440:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1970,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4440:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1972,
														"nodeType": "VariableDeclarationStatement",
														"src": "4440:13:10"
													},
													{
														"AST": {
															"nativeSrc": "4521:125:10",
															"nodeType": "YulBlock",
															"src": "4521:125:10",
															"statements": [
																{
																	"nativeSrc": "4540:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4557:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4557:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4560:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4560:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4567:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4567:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4563:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4563:3:10"
																				},
																				"nativeSrc": "4563:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4563:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4550:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4550:6:10"
																		},
																		"nativeSrc": "4550:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4550:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4544:2:10",
																			"nodeType": "YulTypedName",
																			"src": "4544:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4588:43:10",
																	"nodeType": "YulAssignment",
																	"src": "4588:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4605:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4605:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4609:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4609:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4601:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4601:3:10"
																				},
																				"nativeSrc": "4601:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4601:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4620:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4620:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4624:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4624:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4617:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4617:2:10"
																				},
																				"nativeSrc": "4617:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4617:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4597:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:10"
																		},
																		"nativeSrc": "4597:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4597:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4588:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4588:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1965,
																"isOffset": false,
																"isSlot": false,
																"src": "4609:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1965,
																"isOffset": false,
																"isSlot": false,
																"src": "4624:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1971,
																"isOffset": false,
																"isSlot": false,
																"src": "4588:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1955,
																"isOffset": false,
																"isSlot": false,
																"src": "4557:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1957,
																"isOffset": false,
																"isSlot": false,
																"src": "4560:1:10",
																"valueSize": 1
															}
														],
														"id": 1973,
														"nodeType": "InlineAssembly",
														"src": "4512:134:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1974,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "4730:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4739:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4730:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1982,
														"nodeType": "IfStatement",
														"src": "4726:373:10",
														"trueBody": {
															"id": 1981,
															"nodeType": "Block",
															"src": "4742:357:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1977,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1965,
																			"src": "5064:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1978,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1959,
																			"src": "5072:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5064:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1963,
																	"id": 1980,
																	"nodeType": "Return",
																	"src": "5057:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1983,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "5208:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1984,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "5223:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5208:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1990,
														"nodeType": "IfStatement",
														"src": "5204:90:10",
														"trueBody": {
															"id": 1989,
															"nodeType": "Block",
															"src": "5230:64:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1986,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1696,
																			"src": "5256:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5256:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1988,
																	"nodeType": "RevertStatement",
																	"src": "5249:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															1992
														],
														"declarations": [
															{
																"constant": false,
																"id": 1992,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5564:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2076,
																"src": "5556:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1991,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5556:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1993,
														"nodeType": "VariableDeclarationStatement",
														"src": "5556:17:10"
													},
													{
														"AST": {
															"nativeSrc": "5597:298:10",
															"nodeType": "YulBlock",
															"src": "5597:298:10",
															"statements": [
																{
																	"nativeSrc": "5668:38:10",
																	"nodeType": "YulAssignment",
																	"src": "5668:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5688:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5688:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5691:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5691:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5694:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "5694:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5681:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5681:6:10"
																		},
																		"nativeSrc": "5681:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5668:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "5668:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5791:41:10",
																	"nodeType": "YulAssignment",
																	"src": "5791:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5804:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5804:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5814:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5825:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5825:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5811:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5811:2:10"
																				},
																				"nativeSrc": "5811:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5811:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5800:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:10"
																		},
																		"nativeSrc": "5800:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5800:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5791:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5791:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5850:30:10",
																	"nodeType": "YulAssignment",
																	"src": "5850:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5863:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5863:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5870:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5859:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5859:3:10"
																		},
																		"nativeSrc": "5859:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5859:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5850:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5850:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1959,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1965,
																"isOffset": false,
																"isSlot": false,
																"src": "5825:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1965,
																"isOffset": false,
																"isSlot": false,
																"src": "5850:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1965,
																"isOffset": false,
																"isSlot": false,
																"src": "5863:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1971,
																"isOffset": false,
																"isSlot": false,
																"src": "5791:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1971,
																"isOffset": false,
																"isSlot": false,
																"src": "5804:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1992,
																"isOffset": false,
																"isSlot": false,
																"src": "5668:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1992,
																"isOffset": false,
																"isSlot": false,
																"src": "5814:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1992,
																"isOffset": false,
																"isSlot": false,
																"src": "5870:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1955,
																"isOffset": false,
																"isSlot": false,
																"src": "5688:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1957,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:1:10",
																"valueSize": 1
															}
														],
														"id": 1994,
														"nodeType": "InlineAssembly",
														"src": "5588:307:10"
													},
													{
														"assignments": [
															1996
														],
														"declarations": [
															{
																"constant": false,
																"id": 1996,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6112:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2076,
																"src": "6104:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1995,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6104:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2003,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1997,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "6119:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6134:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1999,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1959,
																			"src": "6138:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6134:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2001,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6133:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6119:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6104:46:10"
													},
													{
														"AST": {
															"nativeSrc": "6174:371:10",
															"nodeType": "YulBlock",
															"src": "6174:371:10",
															"statements": [
																{
																	"nativeSrc": "6241:37:10",
																	"nodeType": "YulAssignment",
																	"src": "6241:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6260:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6260:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6273:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6273:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6256:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:10"
																		},
																		"nativeSrc": "6256:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6256:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6241:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "6241:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6348:25:10",
																	"nodeType": "YulAssignment",
																	"src": "6348:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6361:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6361:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6368:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6368:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6357:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6357:3:10"
																		},
																		"nativeSrc": "6357:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6357:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6348:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6348:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6491:39:10",
																	"nodeType": "YulAssignment",
																	"src": "6491:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6511:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6511:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6514:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6514:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6507:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6507:3:10"
																						},
																						"nativeSrc": "6507:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6507:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6521:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6521:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6503:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6503:3:10"
																				},
																				"nativeSrc": "6503:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6503:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6528:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6528:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6499:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6499:3:10"
																		},
																		"nativeSrc": "6499:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6491:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "6491:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1959,
																"isOffset": false,
																"isSlot": false,
																"src": "6241:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1959,
																"isOffset": false,
																"isSlot": false,
																"src": "6260:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1965,
																"isOffset": false,
																"isSlot": false,
																"src": "6348:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1965,
																"isOffset": false,
																"isSlot": false,
																"src": "6361:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1996,
																"isOffset": false,
																"isSlot": false,
																"src": "6273:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1996,
																"isOffset": false,
																"isSlot": false,
																"src": "6368:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1996,
																"isOffset": false,
																"isSlot": false,
																"src": "6491:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1996,
																"isOffset": false,
																"isSlot": false,
																"src": "6514:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1996,
																"isOffset": false,
																"isSlot": false,
																"src": "6521:4:10",
																"valueSize": 1
															}
														],
														"id": 2004,
														"nodeType": "InlineAssembly",
														"src": "6165:380:10"
													},
													{
														"expression": {
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2005,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "6614:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2006,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1971,
																	"src": "6623:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2007,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "6631:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6623:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6614:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2010,
														"nodeType": "ExpressionStatement",
														"src": "6614:21:10"
													},
													{
														"assignments": [
															2012
														],
														"declarations": [
															{
																"constant": false,
																"id": 2012,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6966:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2076,
																"src": "6958:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2011,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6958:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2019,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6977:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2014,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1959,
																			"src": "6981:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6977:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2016,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6976:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6996:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6976:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6958:39:10"
													},
													{
														"expression": {
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2020,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "7218:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7229:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2022,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "7233:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2023,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "7247:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7233:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7229:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7218:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2027,
														"nodeType": "ExpressionStatement",
														"src": "7218:36:10"
													},
													{
														"expression": {
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2028,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "7288:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7299:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2030,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "7303:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2031,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "7317:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7303:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7299:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7288:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2035,
														"nodeType": "ExpressionStatement",
														"src": "7288:36:10"
													},
													{
														"expression": {
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2036,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "7359:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7370:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2038,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "7374:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2039,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "7388:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7374:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7370:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7359:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2043,
														"nodeType": "ExpressionStatement",
														"src": "7359:36:10"
													},
													{
														"expression": {
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2044,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "7430:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7441:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2046,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "7445:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2047,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "7459:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7445:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7441:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7430:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2051,
														"nodeType": "ExpressionStatement",
														"src": "7430:36:10"
													},
													{
														"expression": {
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2052,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "7501:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7512:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2054,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "7516:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2055,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "7530:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7516:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7512:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7501:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2059,
														"nodeType": "ExpressionStatement",
														"src": "7501:36:10"
													},
													{
														"expression": {
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2060,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "7573:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7584:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2062,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "7588:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2063,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "7602:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7588:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7584:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7573:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2067,
														"nodeType": "ExpressionStatement",
														"src": "7573:36:10"
													},
													{
														"expression": {
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2068,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "8049:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2069,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1965,
																	"src": "8058:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2070,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "8066:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8058:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8049:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2073,
														"nodeType": "ExpressionStatement",
														"src": "8049:24:10"
													},
													{
														"expression": {
															"id": 2074,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "8095:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1963,
														"id": 2075,
														"nodeType": "Return",
														"src": "8088:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "3601:318:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3934:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3949:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "3941:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3960:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "3952:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3971:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "3963:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:43:10"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4015:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "4007:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:16:10"
									},
									"scope": 2744,
									"src": "3925:4195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2120,
										"nodeType": "Block",
										"src": "8367:198:10",
										"statements": [
											{
												"assignments": [
													2094
												],
												"declarations": [
													{
														"constant": false,
														"id": 2094,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2120,
														"src": "8378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2093,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2100,
												"initialValue": {
													"arguments": [
														{
															"id": 2096,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "8402:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2097,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2083,
															"src": "8405:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2098,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "8408:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2095,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2078,
															2121
														],
														"referencedDeclaration": 2078,
														"src": "8395:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8378:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2102,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2088,
																"src": "8452:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1701",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1701",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2101,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2743,
															"src": "8435:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1701_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8435:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2105,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2081,
																	"src": "8472:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2106,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "8475:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2107,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "8478:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2104,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8465:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8465:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8493:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8465:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8435:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2117,
												"nodeType": "IfStatement",
												"src": "8431:103:10",
												"trueBody": {
													"id": 2116,
													"nodeType": "Block",
													"src": "8496:38:10",
													"statements": [
														{
															"expression": {
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2112,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "8511:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8521:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8511:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2115,
															"nodeType": "ExpressionStatement",
															"src": "8511:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2118,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2094,
													"src": "8551:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2092,
												"id": 2119,
												"nodeType": "Return",
												"src": "8544:13:10"
											}
										]
									},
									"documentation": {
										"id": 2079,
										"nodeType": "StructuredDocumentation",
										"src": "8128:123:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8266:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8281:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "8273:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8273:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8292:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "8284:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8284:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8303:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "8295:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8295:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8325:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "8316:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1701",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2087,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2086,
														"name": "Rounding",
														"nameLocations": [
															"8316:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1701,
														"src": "8316:8:10"
													},
													"referencedDeclaration": 1701,
													"src": "8316:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1701",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8272:62:10"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "8358:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8357:9:10"
									},
									"scope": 2744,
									"src": "8257:308:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2232,
										"nodeType": "Block",
										"src": "8864:1616:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2129,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "8879:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8884:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8879:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2135,
												"nodeType": "IfStatement",
												"src": "8875:47:10",
												"trueBody": {
													"id": 2134,
													"nodeType": "Block",
													"src": "8887:35:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8909:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2128,
															"id": 2133,
															"nodeType": "Return",
															"src": "8902:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2137
												],
												"declarations": [
													{
														"constant": false,
														"id": 2137,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9621:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2232,
														"src": "9613:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9613:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2146,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9630:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2140,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2124,
																			"src": "9641:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2139,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2400,
																			2435
																		],
																		"referencedDeclaration": 2400,
																		"src": "9636:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9636:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9647:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9636:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2144,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9635:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9630:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9613:36:10"
											},
											{
												"id": 2231,
												"nodeType": "UncheckedBlock",
												"src": "10056:417:10",
												"statements": [
													{
														"expression": {
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2147,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10081:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2148,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "10091:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2149,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2124,
																					"src": "10100:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2150,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "10104:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10100:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10091:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2153,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10090:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10115:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10090:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10081:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2157,
														"nodeType": "ExpressionStatement",
														"src": "10081:35:10"
													},
													{
														"expression": {
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2158,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10131:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2159,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "10141:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2160,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2124,
																					"src": "10150:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2161,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "10154:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10150:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10141:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2164,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10140:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10165:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10140:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10131:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2168,
														"nodeType": "ExpressionStatement",
														"src": "10131:35:10"
													},
													{
														"expression": {
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2169,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10181:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2170,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "10191:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2171,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2124,
																					"src": "10200:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2172,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "10204:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10200:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10191:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2175,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10190:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10215:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10190:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10181:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2179,
														"nodeType": "ExpressionStatement",
														"src": "10181:35:10"
													},
													{
														"expression": {
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2180,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10231:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2181,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "10241:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2182,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2124,
																					"src": "10250:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2183,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "10254:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10250:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10241:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2186,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10240:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10265:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10240:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10231:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2190,
														"nodeType": "ExpressionStatement",
														"src": "10231:35:10"
													},
													{
														"expression": {
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2191,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10281:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2192,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "10291:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2193,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2124,
																					"src": "10300:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2194,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "10304:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10300:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10291:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2197,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10290:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10290:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10281:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2201,
														"nodeType": "ExpressionStatement",
														"src": "10281:35:10"
													},
													{
														"expression": {
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2202,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10331:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2203,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "10341:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2204,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2124,
																					"src": "10350:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2205,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "10354:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10350:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10341:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2208,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10340:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10340:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10331:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2212,
														"nodeType": "ExpressionStatement",
														"src": "10331:35:10"
													},
													{
														"expression": {
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2213,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10381:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2214,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "10391:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2215,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2124,
																					"src": "10400:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2216,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "10404:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10400:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10391:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2219,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10390:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10415:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10390:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10381:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2223,
														"nodeType": "ExpressionStatement",
														"src": "10381:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2225,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2137,
																	"src": "10442:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2226,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "10450:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2227,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "10454:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10450:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2224,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "10438:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10438:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2128,
														"id": 2230,
														"nodeType": "Return",
														"src": "10431:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "8573:228:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8816:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8829:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "8821:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8821:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8820:11:10"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "8855:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:9:10"
									},
									"scope": 2744,
									"src": "8807:1673:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2267,
										"nodeType": "Block",
										"src": "10661:169:10",
										"statements": [
											{
												"id": 2266,
												"nodeType": "UncheckedBlock",
												"src": "10672:151:10",
												"statements": [
													{
														"assignments": [
															2245
														],
														"declarations": [
															{
																"constant": false,
																"id": 2245,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10705:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2266,
																"src": "10697:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2244,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10697:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2249,
														"initialValue": {
															"arguments": [
																{
																	"id": 2247,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2236,
																	"src": "10719:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2246,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2233,
																	2268
																],
																"referencedDeclaration": 2233,
																"src": "10714:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10714:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10697:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2250,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "10743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2252,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2239,
																						"src": "10770:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1701",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1701",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2251,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2743,
																					"src": "10753:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1701_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10753:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2254,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2245,
																						"src": "10783:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2255,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2245,
																						"src": "10792:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10783:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2257,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2236,
																					"src": "10801:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10783:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10753:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10809:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10753:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10805:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2263,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10752:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10743:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2243,
														"id": 2265,
														"nodeType": "Return",
														"src": "10736:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2234,
										"nodeType": "StructuredDocumentation",
										"src": "10488:91:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10594:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10607:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "10599:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10599:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10619:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "10610:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1701",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2238,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2237,
														"name": "Rounding",
														"nameLocations": [
															"10610:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1701,
														"src": "10610:8:10"
													},
													"referencedDeclaration": 1701,
													"src": "10610:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1701",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10598:30:10"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "10652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:9:10"
									},
									"scope": 2744,
									"src": "10585:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2399,
										"nodeType": "Block",
										"src": "11027:958:10",
										"statements": [
											{
												"assignments": [
													2277
												],
												"declarations": [
													{
														"constant": false,
														"id": 2277,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11046:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2399,
														"src": "11038:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11038:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2279,
												"initialValue": {
													"hexValue": "30",
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11055:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11038:18:10"
											},
											{
												"id": 2396,
												"nodeType": "UncheckedBlock",
												"src": "11067:887:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2280,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "11096:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11105:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11096:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11111:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11096:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2294,
														"nodeType": "IfStatement",
														"src": "11092:102:10",
														"trueBody": {
															"id": 2293,
															"nodeType": "Block",
															"src": "11114:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2285,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2271,
																			"src": "11133:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11143:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11133:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2288,
																	"nodeType": "ExpressionStatement",
																	"src": "11133:13:10"
																},
																{
																	"expression": {
																		"id": 2291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2289,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2277,
																			"src": "11165:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11175:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11165:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2292,
																	"nodeType": "ExpressionStatement",
																	"src": "11165:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2295,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "11212:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11221:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11212:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11226:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11212:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2309,
														"nodeType": "IfStatement",
														"src": "11208:99:10",
														"trueBody": {
															"id": 2308,
															"nodeType": "Block",
															"src": "11229:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2300,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2271,
																			"src": "11248:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11258:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11248:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2303,
																	"nodeType": "ExpressionStatement",
																	"src": "11248:12:10"
																},
																{
																	"expression": {
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2304,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2277,
																			"src": "11279:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11289:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11279:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2307,
																	"nodeType": "ExpressionStatement",
																	"src": "11279:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2310,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "11325:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11334:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11325:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11339:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11325:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2324,
														"nodeType": "IfStatement",
														"src": "11321:99:10",
														"trueBody": {
															"id": 2323,
															"nodeType": "Block",
															"src": "11342:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2315,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2271,
																			"src": "11361:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11371:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11361:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2318,
																	"nodeType": "ExpressionStatement",
																	"src": "11361:12:10"
																},
																{
																	"expression": {
																		"id": 2321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2319,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2277,
																			"src": "11392:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11402:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11392:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2322,
																	"nodeType": "ExpressionStatement",
																	"src": "11392:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2325,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "11438:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11447:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11438:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11452:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11438:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2339,
														"nodeType": "IfStatement",
														"src": "11434:99:10",
														"trueBody": {
															"id": 2338,
															"nodeType": "Block",
															"src": "11455:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2271,
																			"src": "11474:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11484:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11474:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2333,
																	"nodeType": "ExpressionStatement",
																	"src": "11474:12:10"
																},
																{
																	"expression": {
																		"id": 2336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2334,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2277,
																			"src": "11505:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11515:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11505:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2337,
																	"nodeType": "ExpressionStatement",
																	"src": "11505:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2340,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "11551:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11560:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11551:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11564:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11551:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2354,
														"nodeType": "IfStatement",
														"src": "11547:96:10",
														"trueBody": {
															"id": 2353,
															"nodeType": "Block",
															"src": "11567:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2345,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2271,
																			"src": "11586:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11596:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11586:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2348,
																	"nodeType": "ExpressionStatement",
																	"src": "11586:11:10"
																},
																{
																	"expression": {
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2349,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2277,
																			"src": "11616:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11626:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11616:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2352,
																	"nodeType": "ExpressionStatement",
																	"src": "11616:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2355,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "11661:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11670:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11661:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11674:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11661:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2369,
														"nodeType": "IfStatement",
														"src": "11657:96:10",
														"trueBody": {
															"id": 2368,
															"nodeType": "Block",
															"src": "11677:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2360,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2271,
																			"src": "11696:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11706:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11696:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2363,
																	"nodeType": "ExpressionStatement",
																	"src": "11696:11:10"
																},
																{
																	"expression": {
																		"id": 2366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2364,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2277,
																			"src": "11726:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11736:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11726:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2367,
																	"nodeType": "ExpressionStatement",
																	"src": "11726:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2370,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "11771:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11780:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11771:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11784:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11771:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2384,
														"nodeType": "IfStatement",
														"src": "11767:96:10",
														"trueBody": {
															"id": 2383,
															"nodeType": "Block",
															"src": "11787:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2375,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2271,
																			"src": "11806:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11816:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11806:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2378,
																	"nodeType": "ExpressionStatement",
																	"src": "11806:11:10"
																},
																{
																	"expression": {
																		"id": 2381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2379,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2277,
																			"src": "11836:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11836:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2382,
																	"nodeType": "ExpressionStatement",
																	"src": "11836:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2385,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "11881:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11890:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11881:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11894:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11881:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2395,
														"nodeType": "IfStatement",
														"src": "11877:66:10",
														"trueBody": {
															"id": 2394,
															"nodeType": "Block",
															"src": "11897:46:10",
															"statements": [
																{
																	"expression": {
																		"id": 2392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2390,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2277,
																			"src": "11916:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11926:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11916:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2393,
																	"nodeType": "ExpressionStatement",
																	"src": "11916:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2397,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2277,
													"src": "11971:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2275,
												"id": 2398,
												"nodeType": "Return",
												"src": "11964:13:10"
											}
										]
									},
									"documentation": {
										"id": 2269,
										"nodeType": "StructuredDocumentation",
										"src": "10838:122:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10975:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10988:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "10980:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10980:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10979:15:10"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "11018:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11018:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11017:9:10"
									},
									"scope": 2744,
									"src": "10966:1019:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2434,
										"nodeType": "Block",
										"src": "12224:173:10",
										"statements": [
											{
												"id": 2433,
												"nodeType": "UncheckedBlock",
												"src": "12235:155:10",
												"statements": [
													{
														"assignments": [
															2412
														],
														"declarations": [
															{
																"constant": false,
																"id": 2412,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12268:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2433,
																"src": "12260:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2411,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12260:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2416,
														"initialValue": {
															"arguments": [
																{
																	"id": 2414,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "12282:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2413,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2400,
																	2435
																],
																"referencedDeclaration": 2400,
																"src": "12277:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12277:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12260:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2417,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "12310:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2419,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2406,
																						"src": "12337:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1701",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1701",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2418,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2743,
																					"src": "12320:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1701_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12320:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2423,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2421,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12350:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2422,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2412,
																						"src": "12355:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12350:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2424,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2403,
																					"src": "12364:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12350:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12320:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12376:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12320:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12372:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2430,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12319:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12310:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2410,
														"id": 2432,
														"nodeType": "Return",
														"src": "12303:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2401,
										"nodeType": "StructuredDocumentation",
										"src": "11993:145:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12153:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12166:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "12158:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12158:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12182:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "12173:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1701",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2405,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2404,
														"name": "Rounding",
														"nameLocations": [
															"12173:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1701,
														"src": "12173:8:10"
													},
													"referencedDeclaration": 1701,
													"src": "12173:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1701",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12157:34:10"
									},
									"returnParameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "12215:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12215:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12214:9:10"
									},
									"scope": 2744,
									"src": "12144:253:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2563,
										"nodeType": "Block",
										"src": "12596:886:10",
										"statements": [
											{
												"assignments": [
													2444
												],
												"declarations": [
													{
														"constant": false,
														"id": 2444,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12615:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2563,
														"src": "12607:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12607:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2446,
												"initialValue": {
													"hexValue": "30",
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12624:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12607:18:10"
											},
											{
												"id": 2560,
												"nodeType": "UncheckedBlock",
												"src": "12636:815:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2447,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "12665:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12674:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12680:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12674:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12665:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2463,
														"nodeType": "IfStatement",
														"src": "12661:106:10",
														"trueBody": {
															"id": 2462,
															"nodeType": "Block",
															"src": "12684:83:10",
															"statements": [
																{
																	"expression": {
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2452,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "12703:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12712:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12718:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12712:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12703:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2457,
																	"nodeType": "ExpressionStatement",
																	"src": "12703:17:10"
																},
																{
																	"expression": {
																		"id": 2460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2458,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2444,
																			"src": "12739:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12749:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12739:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2461,
																	"nodeType": "ExpressionStatement",
																	"src": "12739:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2464,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "12785:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12794:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12800:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12794:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12785:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2480,
														"nodeType": "IfStatement",
														"src": "12781:106:10",
														"trueBody": {
															"id": 2479,
															"nodeType": "Block",
															"src": "12804:83:10",
															"statements": [
																{
																	"expression": {
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2469,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "12823:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12832:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12838:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12832:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12823:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2474,
																	"nodeType": "ExpressionStatement",
																	"src": "12823:17:10"
																},
																{
																	"expression": {
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2475,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2444,
																			"src": "12859:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12869:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12859:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2478,
																	"nodeType": "ExpressionStatement",
																	"src": "12859:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2481,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "12905:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12914:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12920:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12914:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12905:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2497,
														"nodeType": "IfStatement",
														"src": "12901:106:10",
														"trueBody": {
															"id": 2496,
															"nodeType": "Block",
															"src": "12924:83:10",
															"statements": [
																{
																	"expression": {
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2486,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "12943:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12952:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12952:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12943:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2491,
																	"nodeType": "ExpressionStatement",
																	"src": "12943:17:10"
																},
																{
																	"expression": {
																		"id": 2494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2492,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2444,
																			"src": "12979:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12989:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12979:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2495,
																	"nodeType": "ExpressionStatement",
																	"src": "12979:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2498,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "13025:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13034:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13040:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13034:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "13025:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2514,
														"nodeType": "IfStatement",
														"src": "13021:103:10",
														"trueBody": {
															"id": 2513,
															"nodeType": "Block",
															"src": "13043:81:10",
															"statements": [
																{
																	"expression": {
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2503,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "13062:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13071:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13077:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13071:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "13062:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2508,
																	"nodeType": "ExpressionStatement",
																	"src": "13062:16:10"
																},
																{
																	"expression": {
																		"id": 2511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2509,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2444,
																			"src": "13097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2512,
																	"nodeType": "ExpressionStatement",
																	"src": "13097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2515,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "13142:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13151:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13157:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13151:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13142:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2531,
														"nodeType": "IfStatement",
														"src": "13138:103:10",
														"trueBody": {
															"id": 2530,
															"nodeType": "Block",
															"src": "13160:81:10",
															"statements": [
																{
																	"expression": {
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2520,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "13179:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13188:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13194:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13188:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13179:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2525,
																	"nodeType": "ExpressionStatement",
																	"src": "13179:16:10"
																},
																{
																	"expression": {
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2526,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2444,
																			"src": "13214:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13224:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13214:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2529,
																	"nodeType": "ExpressionStatement",
																	"src": "13214:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2532,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "13259:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13268:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13268:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13259:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2548,
														"nodeType": "IfStatement",
														"src": "13255:103:10",
														"trueBody": {
															"id": 2547,
															"nodeType": "Block",
															"src": "13277:81:10",
															"statements": [
																{
																	"expression": {
																		"id": 2541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2537,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "13296:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13305:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13311:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13305:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13296:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2542,
																	"nodeType": "ExpressionStatement",
																	"src": "13296:16:10"
																},
																{
																	"expression": {
																		"id": 2545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2543,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2444,
																			"src": "13331:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13341:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13331:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2546,
																	"nodeType": "ExpressionStatement",
																	"src": "13331:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2549,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "13376:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13385:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13391:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13385:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13376:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2559,
														"nodeType": "IfStatement",
														"src": "13372:68:10",
														"trueBody": {
															"id": 2558,
															"nodeType": "Block",
															"src": "13394:46:10",
															"statements": [
																{
																	"expression": {
																		"id": 2556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2554,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2444,
																			"src": "13413:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13423:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13413:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2557,
																	"nodeType": "ExpressionStatement",
																	"src": "13413:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2561,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2444,
													"src": "13468:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2442,
												"id": 2562,
												"nodeType": "Return",
												"src": "13461:13:10"
											}
										]
									},
									"documentation": {
										"id": 2436,
										"nodeType": "StructuredDocumentation",
										"src": "12405:123:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12543:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12557:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "12549:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12549:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12548:15:10"
									},
									"returnParameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "12587:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12587:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12586:9:10"
									},
									"scope": 2744,
									"src": "12534:948:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2598,
										"nodeType": "Block",
										"src": "13723:175:10",
										"statements": [
											{
												"id": 2597,
												"nodeType": "UncheckedBlock",
												"src": "13734:157:10",
												"statements": [
													{
														"assignments": [
															2576
														],
														"declarations": [
															{
																"constant": false,
																"id": 2576,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13767:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2597,
																"src": "13759:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2575,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13759:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2580,
														"initialValue": {
															"arguments": [
																{
																	"id": 2578,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2567,
																	"src": "13782:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2577,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2564,
																	2599
																],
																"referencedDeclaration": 2564,
																"src": "13776:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13776:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13759:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2581,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2576,
																"src": "13810:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2583,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2570,
																						"src": "13837:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1701",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1701",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2582,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2743,
																					"src": "13820:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1701_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13820:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2587,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2585,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13850:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2586,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2576,
																						"src": "13856:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13850:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2588,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2567,
																					"src": "13865:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13850:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13820:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13877:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13820:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13873:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13819:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13810:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2574,
														"id": 2596,
														"nodeType": "Return",
														"src": "13803:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "13490:146:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13651:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13665:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "13657:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13681:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "13672:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1701",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2569,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2568,
														"name": "Rounding",
														"nameLocations": [
															"13672:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1701,
														"src": "13672:8:10"
													},
													"referencedDeclaration": 1701,
													"src": "13672:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1701",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13656:34:10"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "13714:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13714:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13713:9:10"
									},
									"scope": 2744,
									"src": "13642:256:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "14226:624:10",
										"statements": [
											{
												"assignments": [
													2608
												],
												"declarations": [
													{
														"constant": false,
														"id": 2608,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14245:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2685,
														"src": "14237:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2607,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14237:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2610,
												"initialValue": {
													"hexValue": "30",
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14254:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14237:18:10"
											},
											{
												"id": 2682,
												"nodeType": "UncheckedBlock",
												"src": "14266:553:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2602,
																	"src": "14295:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14304:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14295:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14310:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14295:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2625,
														"nodeType": "IfStatement",
														"src": "14291:101:10",
														"trueBody": {
															"id": 2624,
															"nodeType": "Block",
															"src": "14313:79:10",
															"statements": [
																{
																	"expression": {
																		"id": 2618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2616,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "14332:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14342:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14332:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2619,
																	"nodeType": "ExpressionStatement",
																	"src": "14332:13:10"
																},
																{
																	"expression": {
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2620,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2608,
																			"src": "14364:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14374:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14364:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2623,
																	"nodeType": "ExpressionStatement",
																	"src": "14364:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2626,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2602,
																	"src": "14410:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14419:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14410:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14424:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14410:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2640,
														"nodeType": "IfStatement",
														"src": "14406:98:10",
														"trueBody": {
															"id": 2639,
															"nodeType": "Block",
															"src": "14427:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2631,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "14446:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14456:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14446:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2634,
																	"nodeType": "ExpressionStatement",
																	"src": "14446:12:10"
																},
																{
																	"expression": {
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2635,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2608,
																			"src": "14477:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14487:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14477:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2638,
																	"nodeType": "ExpressionStatement",
																	"src": "14477:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2641,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2602,
																	"src": "14522:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14531:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14522:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14536:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14522:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2655,
														"nodeType": "IfStatement",
														"src": "14518:98:10",
														"trueBody": {
															"id": 2654,
															"nodeType": "Block",
															"src": "14539:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2646,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "14558:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14568:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14558:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2649,
																	"nodeType": "ExpressionStatement",
																	"src": "14558:12:10"
																},
																{
																	"expression": {
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2650,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2608,
																			"src": "14589:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14599:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14589:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2653,
																	"nodeType": "ExpressionStatement",
																	"src": "14589:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2602,
																	"src": "14634:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14643:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14634:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14648:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14634:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2670,
														"nodeType": "IfStatement",
														"src": "14630:98:10",
														"trueBody": {
															"id": 2669,
															"nodeType": "Block",
															"src": "14651:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2661,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "14670:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14680:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14670:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2664,
																	"nodeType": "ExpressionStatement",
																	"src": "14670:12:10"
																},
																{
																	"expression": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2608,
																			"src": "14701:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14711:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14701:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2668,
																	"nodeType": "ExpressionStatement",
																	"src": "14701:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2671,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2602,
																	"src": "14746:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14755:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14746:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14759:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14746:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2681,
														"nodeType": "IfStatement",
														"src": "14742:66:10",
														"trueBody": {
															"id": 2680,
															"nodeType": "Block",
															"src": "14762:46:10",
															"statements": [
																{
																	"expression": {
																		"id": 2678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2676,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2608,
																			"src": "14781:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14791:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14781:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2679,
																	"nodeType": "ExpressionStatement",
																	"src": "14781:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2683,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2608,
													"src": "14836:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2606,
												"id": 2684,
												"nodeType": "Return",
												"src": "14829:13:10"
											}
										]
									},
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "13906:251:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14172:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14187:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "14179:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:15:10"
									},
									"returnParameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "14217:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14217:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14216:9:10"
									},
									"scope": 2744,
									"src": "14163:687:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2723,
										"nodeType": "Block",
										"src": "15093:182:10",
										"statements": [
											{
												"id": 2722,
												"nodeType": "UncheckedBlock",
												"src": "15104:164:10",
												"statements": [
													{
														"assignments": [
															2698
														],
														"declarations": [
															{
																"constant": false,
																"id": 2698,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15137:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2722,
																"src": "15129:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2697,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15129:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2702,
														"initialValue": {
															"arguments": [
																{
																	"id": 2700,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "15153:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2699,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2686,
																	2724
																],
																"referencedDeclaration": 2686,
																"src": "15146:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15146:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15129:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2703,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2698,
																"src": "15181:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2705,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2692,
																						"src": "15208:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1701",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1701",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2704,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2743,
																					"src": "15191:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1701_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15191:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2712,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2707,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15221:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2710,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2708,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2698,
																									"src": "15227:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2709,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15237:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15227:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2711,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15226:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15221:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2713,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2689,
																					"src": "15242:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15221:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15191:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15254:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "15191:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15250:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2719,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15190:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15181:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2696,
														"id": 2721,
														"nodeType": "Return",
														"src": "15174:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "14858:147:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "15020:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15035:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "15027:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15027:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15051:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "15042:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1701",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2691,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2690,
														"name": "Rounding",
														"nameLocations": [
															"15042:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1701,
														"src": "15042:8:10"
													},
													"referencedDeclaration": 1701,
													"src": "15042:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1701",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15026:34:10"
									},
									"returnParameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "15084:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15084:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15083:9:10"
									},
									"scope": 2744,
									"src": "15011:264:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2742,
										"nodeType": "Block",
										"src": "15478:50:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2735,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2728,
																	"src": "15502:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1701",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1701",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15496:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2733,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15496:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15496:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15514:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15496:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15519:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15496:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2732,
												"id": 2741,
												"nodeType": "Return",
												"src": "15489:31:10"
											}
										]
									},
									"documentation": {
										"id": 2725,
										"nodeType": "StructuredDocumentation",
										"src": "15283:115:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15413:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15439:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "15430:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1701",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2727,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2726,
														"name": "Rounding",
														"nameLocations": [
															"15430:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1701,
														"src": "15430:8:10"
													},
													"referencedDeclaration": 1701,
													"src": "15430:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1701",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15429:19:10"
									},
									"returnParameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "15472:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15472:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15471:6:10"
									},
									"scope": 2744,
									"src": "15404:124:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2745,
							"src": "211:15320:10",
							"usedErrors": [
								1696
							],
							"usedEvents": []
						}
					],
					"src": "106:15427:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2849
						]
					},
					"id": 2850,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2746,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2747,
								"nodeType": "StructuredDocumentation",
								"src": "140:82:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2849,
							"linearizedBaseContracts": [
								2849
							],
							"name": "SignedMath",
							"nameLocation": "232:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2764,
										"nodeType": "Block",
										"src": "388:39:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2757,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "406:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2758,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2752,
															"src": "410:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "406:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2761,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "418:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "406:13:11",
													"trueExpression": {
														"id": 2760,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2750,
														"src": "414:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2756,
												"id": 2763,
												"nodeType": "Return",
												"src": "399:20:11"
											}
										]
									},
									"documentation": {
										"id": 2748,
										"nodeType": "StructuredDocumentation",
										"src": "250:68:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "333:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "344:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "337:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2749,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "354:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "347:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2751,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:20:11"
									},
									"returnParameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "380:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2754,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:11"
									},
									"scope": 2849,
									"src": "324:103:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2782,
										"nodeType": "Block",
										"src": "574:39:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2775,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2768,
															"src": "592:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2776,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2770,
															"src": "596:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "592:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2779,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2770,
														"src": "604:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "592:13:11",
													"trueExpression": {
														"id": 2778,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2768,
														"src": "600:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2774,
												"id": 2781,
												"nodeType": "Return",
												"src": "585:20:11"
											}
										]
									},
									"documentation": {
										"id": 2766,
										"nodeType": "StructuredDocumentation",
										"src": "435:69:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "519:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "530:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "523:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2767,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "523:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "540:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "533:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2769,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "533:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:20:11"
									},
									"returnParameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "566:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2772,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "566:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:8:11"
									},
									"scope": 2849,
									"src": "510:103:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2826,
										"nodeType": "Block",
										"src": "824:166:11",
										"statements": [
											{
												"assignments": [
													2794
												],
												"declarations": [
													{
														"constant": false,
														"id": 2794,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "895:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2826,
														"src": "888:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2793,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "888:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2807,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2795,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2786,
																	"src": "900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2796,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2788,
																	"src": "904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2798,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2799,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2786,
																				"src": "911:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2800,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2788,
																				"src": "915:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "911:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2802,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "910:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "921:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "910:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2805,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "909:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "899:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "888:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2808,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2794,
														"src": "941:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2813,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2794,
																						"src": "961:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2812,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "953:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2811,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "953:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "953:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "967:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "953:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "946:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2809,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "946:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "946:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2818,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2786,
																				"src": "975:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2819,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2788,
																				"src": "979:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "975:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2821,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "974:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "946:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2823,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "945:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "941:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2792,
												"id": 2825,
												"nodeType": "Return",
												"src": "934:48:11"
											}
										]
									},
									"documentation": {
										"id": 2784,
										"nodeType": "StructuredDocumentation",
										"src": "621:129:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "765:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "780:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "773:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2785,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "773:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "790:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "783:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2787,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "783:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:20:11"
									},
									"returnParameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "816:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2790,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "816:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:8:11"
									},
									"scope": 2849,
									"src": "756:234:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2847,
										"nodeType": "Block",
										"src": "1139:163:11",
										"statements": [
											{
												"id": 2846,
												"nodeType": "UncheckedBlock",
												"src": "1150:145:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2837,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2830,
																			"src": "1267:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1272:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1267:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1280:2:11",
																		"subExpression": {
																			"id": 2841,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2830,
																			"src": "1281:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1267:15:11",
																	"trueExpression": {
																		"id": 2840,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2830,
																		"src": "1276:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1259:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2835,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1259:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1259:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2834,
														"id": 2845,
														"nodeType": "Return",
														"src": "1252:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2828,
										"nodeType": "StructuredDocumentation",
										"src": "998:80:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1093:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1104:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "1097:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2829,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:10:11"
									},
									"returnParameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "1130:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:9:11"
									},
									"scope": 2849,
									"src": "1084:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2850,
							"src": "224:1081:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:1195:11"
				},
				"id": 11
			},
			"contracts/Marketplace.sol": {
				"ast": {
					"absolutePath": "contracts/Marketplace.sol",
					"exportedSymbols": {
						"Context": [
							1330
						],
						"ERC165": [
							1678
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							1690
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Marketplace": [
							3457
						],
						"ReentrancyGuard": [
							1399
						],
						"Strings": [
							1654
						]
					},
					"id": 3458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2851,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2852,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3458,
							"sourceUnit": 1146,
							"src": "61:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 2853,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3458,
							"sourceUnit": 1400,
							"src": "120:59:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2854,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"207:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1399,
										"src": "207:15:12"
									},
									"id": 2855,
									"nodeType": "InheritanceSpecifier",
									"src": "207:15:12"
								}
							],
							"canonicalName": "Marketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3457,
							"linearizedBaseContracts": [
								3457,
								1399
							],
							"name": "Marketplace",
							"nameLocation": "192:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2857,
									"mutability": "mutable",
									"name": "_nftsSold",
									"nameLocation": "244:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 3457,
									"src": "228:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2856,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "228:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2859,
									"mutability": "mutable",
									"name": "_nftCount",
									"nameLocation": "274:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 3457,
									"src": "258:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2858,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "258:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "2b86ae38",
									"id": 2862,
									"mutability": "mutable",
									"name": "LISTING_FEE",
									"nameLocation": "303:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 3457,
									"src": "288:30:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2860,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "288:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2861,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "317:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2864,
									"mutability": "mutable",
									"name": "_marketOwner",
									"nameLocation": "347:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 3457,
									"src": "323:36:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2863,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "323:15:12",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2869,
									"mutability": "mutable",
									"name": "_idToNFT",
									"nameLocation": "396:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 3457,
									"src": "364:40:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
										"typeString": "mapping(uint256 => struct Marketplace.NFT)"
									},
									"typeName": {
										"id": 2868,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2865,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "372:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "364:23:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
											"typeString": "mapping(uint256 => struct Marketplace.NFT)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2867,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2866,
												"name": "NFT",
												"nameLocations": [
													"383:3:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2882,
												"src": "383:3:12"
											},
											"referencedDeclaration": 2882,
											"src": "383:3:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
												"typeString": "struct Marketplace.NFT"
											}
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "Marketplace.NFT",
									"id": 2882,
									"members": [
										{
											"constant": false,
											"id": 2871,
											"mutability": "mutable",
											"name": "nftContract",
											"nameLocation": "435:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 2882,
											"src": "427:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2870,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "427:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2873,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "461:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2882,
											"src": "453:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2872,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "453:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2875,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "491:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2882,
											"src": "475:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 2874,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "475:15:12",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2877,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "520:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2882,
											"src": "504:21:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 2876,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "504:15:12",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2879,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "540:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2882,
											"src": "532:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2878,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "532:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2881,
											"mutability": "mutable",
											"name": "listed",
											"nameLocation": "557:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2882,
											"src": "552:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2880,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "552:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFT",
									"nameLocation": "416:3:12",
									"nodeType": "StructDefinition",
									"scope": 3457,
									"src": "409:160:12",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "a0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d19",
									"id": 2894,
									"name": "NFTListed",
									"nameLocation": "579:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "603:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "595:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2886,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "629:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "621:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2888,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "651:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "643:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "672:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "664:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2892,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "692:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "684:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:114:12"
									},
									"src": "573:130:12"
								},
								{
									"anonymous": false,
									"eventSelector": "16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd2",
									"id": 2906,
									"name": "NFTSold",
									"nameLocation": "713:7:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2896,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "735:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "727:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2898,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "761:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "753:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2900,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "783:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "775:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2902,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "804:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "796:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2904,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "824:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "816:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:114:12"
									},
									"src": "707:128:12"
								},
								{
									"body": {
										"id": 2917,
										"nodeType": "Block",
										"src": "855:47:12",
										"statements": [
											{
												"expression": {
													"id": 2915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2909,
														"name": "_marketOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2864,
														"src": "862:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2912,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "885:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "889:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "885:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "877:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 2910,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "877:8:12",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 2914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "877:19:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "862:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2916,
												"nodeType": "ExpressionStatement",
												"src": "862:34:12"
											}
										]
									},
									"id": 2918,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:12"
									},
									"returnParameters": {
										"id": 2908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:0:12"
									},
									"scope": 3457,
									"src": "841:61:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3001,
										"nodeType": "Block",
										"src": "1047:527:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2930,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2924,
																"src": "1062:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1071:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1062:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1074:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															},
															"value": "Price must be at least 1 wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															}
														],
														"id": 2929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1054:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1054:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2935,
												"nodeType": "ExpressionStatement",
												"src": "1054:51:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2937,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1120:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1124:5:12",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1120:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2939,
																"name": "LISTING_FEE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2862,
																"src": "1133:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1120:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820657468657220666f72206c697374696e6720666565",
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1146:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f",
																"typeString": "literal_string \"Not enough ether for listing fee\""
															},
															"value": "Not enough ether for listing fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f",
																"typeString": "literal_string \"Not enough ether for listing fee\""
															}
														],
														"id": 2936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1112:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2943,
												"nodeType": "ExpressionStatement",
												"src": "1112:69:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2948,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1225:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1229:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1225:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2952,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1245:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3457",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3457",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1237:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1237:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1237:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2954,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "1252:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2945,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2920,
																	"src": "1198:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2944,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "1190:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 2946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1190:21:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1262",
																"typeString": "contract IERC721"
															}
														},
														"id": 2947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1212:12:12",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1227,
														"src": "1190:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1190:71:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2956,
												"nodeType": "ExpressionStatement",
												"src": "1190:71:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2960,
															"name": "LISTING_FEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2862,
															"src": "1290:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2957,
															"name": "_marketOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2864,
															"src": "1268:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1281:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1268:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1268:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2962,
												"nodeType": "ExpressionStatement",
												"src": "1268:34:12"
											},
											{
												"expression": {
													"id": 2964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1309:11:12",
													"subExpression": {
														"id": 2963,
														"name": "_nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2859,
														"src": "1309:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2965,
												"nodeType": "ExpressionStatement",
												"src": "1309:11:12"
											},
											{
												"expression": {
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2966,
															"name": "_idToNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2869,
															"src": "1329:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
															}
														},
														"id": 2968,
														"indexExpression": {
															"id": 2967,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "1338:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1329:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2882_storage",
															"typeString": "struct Marketplace.NFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2970,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2920,
																"src": "1362:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2971,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2922,
																"src": "1383:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2974,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1409:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1413:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1409:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1401:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 2972,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1401:8:12",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 2976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1401:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2981,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1445:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Marketplace_$3457",
																					"typeString": "contract Marketplace"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Marketplace_$3457",
																					"typeString": "contract Marketplace"
																				}
																			],
																			"id": 2980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1437:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2979,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1437:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1437:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1429:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 2977,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1429:8:12",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 2983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1429:22:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"id": 2984,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2924,
																"src": "1460:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 2985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1475:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2969,
															"name": "NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2882,
															"src": "1350:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NFT_$2882_storage_ptr_$",
																"typeString": "type(struct Marketplace.NFT storage pointer)"
															}
														},
														"id": 2986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1350:136:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2882_memory_ptr",
															"typeString": "struct Marketplace.NFT memory"
														}
													},
													"src": "1329:157:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$2882_storage",
														"typeString": "struct Marketplace.NFT storage ref"
													}
												},
												"id": 2988,
												"nodeType": "ExpressionStatement",
												"src": "1329:157:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2990,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2920,
															"src": "1510:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2991,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "1524:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2992,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1534:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1538:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1534:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2996,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1554:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3457",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3457",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 2995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1546:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1546:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1546:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2998,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2924,
															"src": "1561:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2989,
														"name": "NFTListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2894,
														"src": "1500:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,address,address,uint256)"
														}
													},
													"id": 2999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1500:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3000,
												"nodeType": "EmitStatement",
												"src": "1495:73:12"
											}
										]
									},
									"functionSelector": "c922b17c",
									"id": 3002,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2927,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2926,
												"name": "nonReentrant",
												"nameLocations": [
													"1034:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1363,
												"src": "1034:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1034:12:12"
										}
									],
									"name": "listNft",
									"nameLocation": "955:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "971:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "963:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "993:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "985:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1011:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "1003:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:56:12"
									},
									"returnParameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:0:12"
									},
									"scope": 3457,
									"src": "946:628:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3084,
										"nodeType": "Block",
										"src": "1681:448:12",
										"statements": [
											{
												"assignments": [
													3013
												],
												"declarations": [
													{
														"constant": false,
														"id": 3013,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "1700:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 3084,
														"src": "1688:15:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
															"typeString": "struct Marketplace.NFT"
														},
														"typeName": {
															"id": 3012,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3011,
																"name": "NFT",
																"nameLocations": [
																	"1688:3:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2882,
																"src": "1688:3:12"
															},
															"referencedDeclaration": 2882,
															"src": "1688:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																"typeString": "struct Marketplace.NFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3017,
												"initialValue": {
													"baseExpression": {
														"id": 3014,
														"name": "_idToNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2869,
														"src": "1706:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
															"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
														}
													},
													"id": 3016,
													"indexExpression": {
														"id": 3015,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3006,
														"src": "1715:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1706:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$2882_storage",
														"typeString": "struct Marketplace.NFT storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:36:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3019,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1739:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1743:5:12",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1739:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 3021,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3013,
																	"src": "1752:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																		"typeString": "struct Marketplace.NFT storage pointer"
																	}
																},
																"id": 3022,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1756:5:12",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2879,
																"src": "1752:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1739:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67207072696365",
															"id": 3024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1763:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e",
																"typeString": "literal_string \"Not enough ether to cover asking price\""
															},
															"value": "Not enough ether to cover asking price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e",
																"typeString": "literal_string \"Not enough ether to cover asking price\""
															}
														],
														"id": 3018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1731:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1731:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3026,
												"nodeType": "ExpressionStatement",
												"src": "1731:73:12"
											},
											{
												"assignments": [
													3028
												],
												"declarations": [
													{
														"constant": false,
														"id": 3028,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "1829:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 3084,
														"src": "1813:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 3027,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1813:15:12",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3034,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3031,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1845:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1849:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1845:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1837:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 3029,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1837:8:12",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 3033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1813:43:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3041,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1892:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1896:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1892:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3037,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3013,
																		"src": "1871:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																			"typeString": "struct Marketplace.NFT storage pointer"
																		}
																	},
																	"id": 3038,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1875:6:12",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2875,
																	"src": "1871:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 3036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1863:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3035,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1863:8:12",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1863:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1883:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1863:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1863:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3044,
												"nodeType": "ExpressionStatement",
												"src": "1863:39:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3051,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1952:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3457",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3457",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1944:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3049,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1944:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1944:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3053,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3028,
															"src": "1959:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 3054,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3013,
																"src": "1966:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																	"typeString": "struct Marketplace.NFT storage pointer"
																}
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1970:7:12",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2873,
															"src": "1966:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3046,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3004,
																	"src": "1917:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3045,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "1909:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1909:21:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1262",
																"typeString": "contract IERC721"
															}
														},
														"id": 3048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1931:12:12",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1227,
														"src": "1909:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1909:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3057,
												"nodeType": "ExpressionStatement",
												"src": "1909:69:12"
											},
											{
												"expression": {
													"id": 3062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3058,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "1985:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																"typeString": "struct Marketplace.NFT storage pointer"
															}
														},
														"id": 3060,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1989:5:12",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2877,
														"src": "1985:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3061,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3028,
														"src": "1997:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1985:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 3063,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:12"
											},
											{
												"expression": {
													"id": 3068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3064,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "2009:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																"typeString": "struct Marketplace.NFT storage pointer"
															}
														},
														"id": 3066,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2013:6:12",
														"memberName": "listed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2881,
														"src": "2009:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2022:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2009:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3069,
												"nodeType": "ExpressionStatement",
												"src": "2009:18:12"
											},
											{
												"expression": {
													"id": 3071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2036:11:12",
													"subExpression": {
														"id": 3070,
														"name": "_nftsSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "2036:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3072,
												"nodeType": "ExpressionStatement",
												"src": "2036:11:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3074,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3004,
															"src": "2067:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3075,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3013,
																"src": "2081:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																	"typeString": "struct Marketplace.NFT storage pointer"
																}
															},
															"id": 3076,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2085:7:12",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2873,
															"src": "2081:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3077,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3013,
																"src": "2094:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																	"typeString": "struct Marketplace.NFT storage pointer"
																}
															},
															"id": 3078,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2098:6:12",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2875,
															"src": "2094:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3079,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3028,
															"src": "2106:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 3080,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2113:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2117:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2113:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3073,
														"name": "NFTSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2906,
														"src": "2059:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,address,address,uint256)"
														}
													},
													"id": 3082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:64:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3083,
												"nodeType": "EmitStatement",
												"src": "2054:69:12"
											}
										]
									},
									"functionSelector": "4ddf4f8f",
									"id": 3085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3009,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3008,
												"name": "nonReentrant",
												"nameLocations": [
													"1668:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1363,
												"src": "1668:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1668:12:12"
										}
									],
									"name": "buyNft",
									"nameLocation": "1606:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "1621:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "1613:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1643:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "1635:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:40:12"
									},
									"returnParameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1681:0:12"
									},
									"scope": 3457,
									"src": "1597:532:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3180,
										"nodeType": "Block",
										"src": "2289:494:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3097,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3091,
																"src": "2304:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2313:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2304:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
															"id": 3100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2316:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															},
															"value": "Price must be at least 1 wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															}
														],
														"id": 3096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2296:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2296:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3102,
												"nodeType": "ExpressionStatement",
												"src": "2296:51:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3104,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2362:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2366:5:12",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2362:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3106,
																"name": "LISTING_FEE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2862,
																"src": "2375:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2362:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820657468657220666f72206c697374696e6720666565",
															"id": 3108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2388:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f",
																"typeString": "literal_string \"Not enough ether for listing fee\""
															},
															"value": "Not enough ether for listing fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f",
																"typeString": "literal_string \"Not enough ether for listing fee\""
															}
														],
														"id": 3103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2354:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3110,
												"nodeType": "ExpressionStatement",
												"src": "2354:69:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2467:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2471:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2467:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3119,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2487:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3457",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3457",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2479:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3117,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2479:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2479:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3121,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3089,
															"src": "2494:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3112,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3087,
																	"src": "2440:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3111,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "2432:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2432:21:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1262",
																"typeString": "contract IERC721"
															}
														},
														"id": 3114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2454:12:12",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1227,
														"src": "2432:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2432:71:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3123,
												"nodeType": "ExpressionStatement",
												"src": "2432:71:12"
											},
											{
												"assignments": [
													3126
												],
												"declarations": [
													{
														"constant": false,
														"id": 3126,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "2524:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 3180,
														"src": "2512:15:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
															"typeString": "struct Marketplace.NFT"
														},
														"typeName": {
															"id": 3125,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3124,
																"name": "NFT",
																"nameLocations": [
																	"2512:3:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2882,
																"src": "2512:3:12"
															},
															"referencedDeclaration": 2882,
															"src": "2512:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																"typeString": "struct Marketplace.NFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3130,
												"initialValue": {
													"baseExpression": {
														"id": 3127,
														"name": "_idToNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2869,
														"src": "2530:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
															"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
														}
													},
													"id": 3129,
													"indexExpression": {
														"id": 3128,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3089,
														"src": "2539:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2530:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$2882_storage",
														"typeString": "struct Marketplace.NFT storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2512:36:12"
											},
											{
												"expression": {
													"id": 3139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3131,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "2555:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																"typeString": "struct Marketplace.NFT storage pointer"
															}
														},
														"id": 3133,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2559:6:12",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2875,
														"src": "2555:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3136,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2576:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2580:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2576:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2568:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 3134,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2568:8:12",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 3138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2568:19:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2555:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 3140,
												"nodeType": "ExpressionStatement",
												"src": "2555:32:12"
											},
											{
												"expression": {
													"id": 3151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3141,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "2594:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																"typeString": "struct Marketplace.NFT storage pointer"
															}
														},
														"id": 3143,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2598:5:12",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2877,
														"src": "2594:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3148,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2622:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Marketplace_$3457",
																			"typeString": "contract Marketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Marketplace_$3457",
																			"typeString": "contract Marketplace"
																		}
																	],
																	"id": 3147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2614:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3146,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2614:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 3149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2614:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2606:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 3144,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2606:8:12",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 3150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2606:22:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2594:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 3152,
												"nodeType": "ExpressionStatement",
												"src": "2594:34:12"
											},
											{
												"expression": {
													"id": 3157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3153,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "2635:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																"typeString": "struct Marketplace.NFT storage pointer"
															}
														},
														"id": 3155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2639:6:12",
														"memberName": "listed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2881,
														"src": "2635:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2648:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2635:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3158,
												"nodeType": "ExpressionStatement",
												"src": "2635:17:12"
											},
											{
												"expression": {
													"id": 3163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3159,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "2659:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																"typeString": "struct Marketplace.NFT storage pointer"
															}
														},
														"id": 3161,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2663:5:12",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2879,
														"src": "2659:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3162,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3091,
														"src": "2671:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2659:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3164,
												"nodeType": "ExpressionStatement",
												"src": "2659:18:12"
											},
											{
												"expression": {
													"id": 3166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "2686:11:12",
													"subExpression": {
														"id": 3165,
														"name": "_nftsSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "2686:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3167,
												"nodeType": "ExpressionStatement",
												"src": "2686:11:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3169,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3087,
															"src": "2719:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3170,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3089,
															"src": "2733:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3171,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2743:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2747:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2743:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3175,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2763:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3457",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3457",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2755:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3173,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2755:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2755:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3177,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3091,
															"src": "2770:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3168,
														"name": "NFTListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2894,
														"src": "2709:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,address,address,uint256)"
														}
													},
													"id": 3178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2709:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3179,
												"nodeType": "EmitStatement",
												"src": "2704:73:12"
											}
										]
									},
									"functionSelector": "34f5b624",
									"id": 3181,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3094,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3093,
												"name": "nonReentrant",
												"nameLocations": [
													"2276:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1363,
												"src": "2276:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2276:12:12"
										}
									],
									"name": "resellNft",
									"nameLocation": "2195:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3087,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "2213:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "2205:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2235:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "2227:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2227:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3091,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "2253:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "2245:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2204:56:12"
									},
									"returnParameters": {
										"id": 3095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2289:0:12"
									},
									"scope": 3457,
									"src": "2186:597:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3249,
										"nodeType": "Block",
										"src": "2849:354:12",
										"statements": [
											{
												"assignments": [
													3189
												],
												"declarations": [
													{
														"constant": false,
														"id": 3189,
														"mutability": "mutable",
														"name": "nftCount",
														"nameLocation": "2864:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 3249,
														"src": "2856:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2856:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3191,
												"initialValue": {
													"id": 3190,
													"name": "_nftCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2859,
													"src": "2875:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2856:28:12"
											},
											{
												"assignments": [
													3193
												],
												"declarations": [
													{
														"constant": false,
														"id": 3193,
														"mutability": "mutable",
														"name": "unsoldNftsCount",
														"nameLocation": "2899:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 3249,
														"src": "2891:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3192,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2891:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3197,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3194,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3189,
														"src": "2917:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3195,
														"name": "_nftsSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "2928:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2917:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2891:46:12"
											},
											{
												"assignments": [
													3202
												],
												"declarations": [
													{
														"constant": false,
														"id": 3202,
														"mutability": "mutable",
														"name": "nfts",
														"nameLocation": "2959:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 3249,
														"src": "2946:17:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.NFT[]"
														},
														"typeName": {
															"baseType": {
																"id": 3200,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3199,
																	"name": "NFT",
																	"nameLocations": [
																		"2946:3:12"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2882,
																	"src": "2946:3:12"
																},
																"referencedDeclaration": 2882,
																"src": "2946:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																	"typeString": "struct Marketplace.NFT"
																}
															},
															"id": 3201,
															"nodeType": "ArrayTypeName",
															"src": "2946:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2882_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.NFT[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3209,
												"initialValue": {
													"arguments": [
														{
															"id": 3207,
															"name": "unsoldNftsCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3193,
															"src": "2976:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2966:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Marketplace.NFT memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3204,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3203,
																	"name": "NFT",
																	"nameLocations": [
																		"2970:3:12"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2882,
																	"src": "2970:3:12"
																},
																"referencedDeclaration": 2882,
																"src": "2970:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																	"typeString": "struct Marketplace.NFT"
																}
															},
															"id": 3205,
															"nodeType": "ArrayTypeName",
															"src": "2970:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2882_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.NFT[]"
															}
														}
													},
													"id": 3208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2966:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.NFT memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2946:46:12"
											},
											{
												"assignments": [
													3211
												],
												"declarations": [
													{
														"constant": false,
														"id": 3211,
														"mutability": "mutable",
														"name": "nftsIndex",
														"nameLocation": "3004:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 3249,
														"src": "2999:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3210,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2999:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3213,
												"initialValue": {
													"hexValue": "30",
													"id": 3212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3016:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2999:18:12"
											},
											{
												"body": {
													"id": 3245,
													"nodeType": "Block",
													"src": "3060:120:12",
													"statements": [
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"id": 3224,
																		"name": "_idToNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2869,
																		"src": "3073:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																		}
																	},
																	"id": 3228,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3225,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3215,
																			"src": "3082:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 3226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3086:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3082:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3073:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFT_$2882_storage",
																		"typeString": "struct Marketplace.NFT storage ref"
																	}
																},
																"id": 3229,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3089:6:12",
																"memberName": "listed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2881,
																"src": "3073:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3244,
															"nodeType": "IfStatement",
															"src": "3069:104:12",
															"trueBody": {
																"id": 3243,
																"nodeType": "Block",
																"src": "3097:76:12",
																"statements": [
																	{
																		"expression": {
																			"id": 3238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3230,
																					"name": "nfts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3202,
																					"src": "3108:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct Marketplace.NFT memory[] memory"
																					}
																				},
																				"id": 3232,
																				"indexExpression": {
																					"id": 3231,
																					"name": "nftsIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3211,
																					"src": "3113:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3108:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2882_memory_ptr",
																					"typeString": "struct Marketplace.NFT memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3233,
																					"name": "_idToNFT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2869,
																					"src": "3126:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																					}
																				},
																				"id": 3237,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3236,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3234,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3215,
																						"src": "3135:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3235,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3139:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3135:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3126:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2882_storage",
																					"typeString": "struct Marketplace.NFT storage ref"
																				}
																			},
																			"src": "3108:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NFT_$2882_memory_ptr",
																				"typeString": "struct Marketplace.NFT memory"
																			}
																		},
																		"id": 3239,
																		"nodeType": "ExpressionStatement",
																		"src": "3108:33:12"
																	},
																	{
																		"expression": {
																			"id": 3241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3152:11:12",
																			"subExpression": {
																				"id": 3240,
																				"name": "nftsIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3211,
																				"src": "3152:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3242,
																		"nodeType": "ExpressionStatement",
																		"src": "3152:11:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3218,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3215,
														"src": "3041:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3219,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3189,
														"src": "3045:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3041:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3246,
												"initializationExpression": {
													"assignments": [
														3215
													],
													"declarations": [
														{
															"constant": false,
															"id": 3215,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3034:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3246,
															"src": "3029:6:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3214,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3029:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3217,
													"initialValue": {
														"hexValue": "30",
														"id": 3216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3038:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3029:10:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3055:3:12",
														"subExpression": {
															"id": 3221,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3215,
															"src": "3055:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3223,
													"nodeType": "ExpressionStatement",
													"src": "3055:3:12"
												},
												"nodeType": "ForStatement",
												"src": "3024:156:12"
											},
											{
												"expression": {
													"id": 3247,
													"name": "nfts",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3202,
													"src": "3193:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.NFT memory[] memory"
													}
												},
												"functionReturnParameters": 3187,
												"id": 3248,
												"nodeType": "Return",
												"src": "3186:11:12"
											}
										]
									},
									"functionSelector": "8d6cb3fb",
									"id": 3250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getListedNfts",
									"nameLocation": "2798:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2811:2:12"
									},
									"returnParameters": {
										"id": 3187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3250,
												"src": "2835:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.NFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3184,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3183,
															"name": "NFT",
															"nameLocations": [
																"2835:3:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2882,
															"src": "2835:3:12"
														},
														"referencedDeclaration": 2882,
														"src": "2835:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
															"typeString": "struct Marketplace.NFT"
														}
													},
													"id": 3185,
													"nodeType": "ArrayTypeName",
													"src": "2835:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2882_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.NFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:14:12"
									},
									"scope": 3457,
									"src": "2789:414:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3345,
										"nodeType": "Block",
										"src": "3265:464:12",
										"statements": [
											{
												"assignments": [
													3258
												],
												"declarations": [
													{
														"constant": false,
														"id": 3258,
														"mutability": "mutable",
														"name": "nftCount",
														"nameLocation": "3277:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 3345,
														"src": "3272:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3257,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3272:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3260,
												"initialValue": {
													"id": 3259,
													"name": "_nftCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2859,
													"src": "3288:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3272:25:12"
											},
											{
												"assignments": [
													3262
												],
												"declarations": [
													{
														"constant": false,
														"id": 3262,
														"mutability": "mutable",
														"name": "myNftCount",
														"nameLocation": "3309:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 3345,
														"src": "3304:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3261,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3304:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3264,
												"initialValue": {
													"hexValue": "30",
													"id": 3263,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3322:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3304:19:12"
											},
											{
												"body": {
													"id": 3289,
													"nodeType": "Block",
													"src": "3366:90:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3275,
																			"name": "_idToNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2869,
																			"src": "3379:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																			}
																		},
																		"id": 3279,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3276,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3266,
																				"src": "3388:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3392:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3388:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3379:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFT_$2882_storage",
																			"typeString": "struct Marketplace.NFT storage ref"
																		}
																	},
																	"id": 3280,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3395:5:12",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2877,
																	"src": "3379:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3281,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3404:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3408:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3404:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3379:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3288,
															"nodeType": "IfStatement",
															"src": "3375:74:12",
															"trueBody": {
																"id": 3287,
																"nodeType": "Block",
																"src": "3416:33:12",
																"statements": [
																	{
																		"expression": {
																			"id": 3285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3427:12:12",
																			"subExpression": {
																				"id": 3284,
																				"name": "myNftCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3262,
																				"src": "3427:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3286,
																		"nodeType": "ExpressionStatement",
																		"src": "3427:12:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3269,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3266,
														"src": "3347:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3270,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3258,
														"src": "3351:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3347:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3290,
												"initializationExpression": {
													"assignments": [
														3266
													],
													"declarations": [
														{
															"constant": false,
															"id": 3266,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3340:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3290,
															"src": "3335:6:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3265,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3335:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3268,
													"initialValue": {
														"hexValue": "30",
														"id": 3267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3344:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3335:10:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3361:3:12",
														"subExpression": {
															"id": 3272,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3266,
															"src": "3361:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3274,
													"nodeType": "ExpressionStatement",
													"src": "3361:3:12"
												},
												"nodeType": "ForStatement",
												"src": "3330:126:12"
											},
											{
												"assignments": [
													3295
												],
												"declarations": [
													{
														"constant": false,
														"id": 3295,
														"mutability": "mutable",
														"name": "nfts",
														"nameLocation": "3477:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 3345,
														"src": "3464:17:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.NFT[]"
														},
														"typeName": {
															"baseType": {
																"id": 3293,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3292,
																	"name": "NFT",
																	"nameLocations": [
																		"3464:3:12"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2882,
																	"src": "3464:3:12"
																},
																"referencedDeclaration": 2882,
																"src": "3464:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																	"typeString": "struct Marketplace.NFT"
																}
															},
															"id": 3294,
															"nodeType": "ArrayTypeName",
															"src": "3464:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2882_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.NFT[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3302,
												"initialValue": {
													"arguments": [
														{
															"id": 3300,
															"name": "myNftCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3262,
															"src": "3494:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3484:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Marketplace.NFT memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3297,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3296,
																	"name": "NFT",
																	"nameLocations": [
																		"3488:3:12"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2882,
																	"src": "3488:3:12"
																},
																"referencedDeclaration": 2882,
																"src": "3488:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																	"typeString": "struct Marketplace.NFT"
																}
															},
															"id": 3298,
															"nodeType": "ArrayTypeName",
															"src": "3488:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2882_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.NFT[]"
															}
														}
													},
													"id": 3301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3484:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.NFT memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3464:41:12"
											},
											{
												"assignments": [
													3304
												],
												"declarations": [
													{
														"constant": false,
														"id": 3304,
														"mutability": "mutable",
														"name": "nftsIndex",
														"nameLocation": "3517:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 3345,
														"src": "3512:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3303,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3512:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3306,
												"initialValue": {
													"hexValue": "30",
													"id": 3305,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3529:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3512:18:12"
											},
											{
												"body": {
													"id": 3341,
													"nodeType": "Block",
													"src": "3573:133:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3317,
																			"name": "_idToNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2869,
																			"src": "3586:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																			}
																		},
																		"id": 3321,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3318,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3308,
																				"src": "3595:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3599:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3595:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3586:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFT_$2882_storage",
																			"typeString": "struct Marketplace.NFT storage ref"
																		}
																	},
																	"id": 3322,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3602:5:12",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2877,
																	"src": "3586:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3323,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3611:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3615:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3611:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3586:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3340,
															"nodeType": "IfStatement",
															"src": "3582:117:12",
															"trueBody": {
																"id": 3339,
																"nodeType": "Block",
																"src": "3623:76:12",
																"statements": [
																	{
																		"expression": {
																			"id": 3334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3326,
																					"name": "nfts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3295,
																					"src": "3634:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct Marketplace.NFT memory[] memory"
																					}
																				},
																				"id": 3328,
																				"indexExpression": {
																					"id": 3327,
																					"name": "nftsIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3304,
																					"src": "3639:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3634:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2882_memory_ptr",
																					"typeString": "struct Marketplace.NFT memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3329,
																					"name": "_idToNFT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2869,
																					"src": "3652:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																					}
																				},
																				"id": 3333,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3332,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3330,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3308,
																						"src": "3661:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3331,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3665:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3661:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3652:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2882_storage",
																					"typeString": "struct Marketplace.NFT storage ref"
																				}
																			},
																			"src": "3634:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NFT_$2882_memory_ptr",
																				"typeString": "struct Marketplace.NFT memory"
																			}
																		},
																		"id": 3335,
																		"nodeType": "ExpressionStatement",
																		"src": "3634:33:12"
																	},
																	{
																		"expression": {
																			"id": 3337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3678:11:12",
																			"subExpression": {
																				"id": 3336,
																				"name": "nftsIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3304,
																				"src": "3678:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3338,
																		"nodeType": "ExpressionStatement",
																		"src": "3678:11:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3311,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3308,
														"src": "3554:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3312,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3258,
														"src": "3558:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3554:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3342,
												"initializationExpression": {
													"assignments": [
														3308
													],
													"declarations": [
														{
															"constant": false,
															"id": 3308,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3547:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3342,
															"src": "3542:6:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3307,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3542:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3310,
													"initialValue": {
														"hexValue": "30",
														"id": 3309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3542:10:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3568:3:12",
														"subExpression": {
															"id": 3314,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3308,
															"src": "3568:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3316,
													"nodeType": "ExpressionStatement",
													"src": "3568:3:12"
												},
												"nodeType": "ForStatement",
												"src": "3537:169:12"
											},
											{
												"expression": {
													"id": 3343,
													"name": "nfts",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3295,
													"src": "3719:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.NFT memory[] memory"
													}
												},
												"functionReturnParameters": 3256,
												"id": 3344,
												"nodeType": "Return",
												"src": "3712:11:12"
											}
										]
									},
									"functionSelector": "047b07bf",
									"id": 3346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyNfts",
									"nameLocation": "3218:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3227:2:12"
									},
									"returnParameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "3251:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.NFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3253,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3252,
															"name": "NFT",
															"nameLocations": [
																"3251:3:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2882,
															"src": "3251:3:12"
														},
														"referencedDeclaration": 2882,
														"src": "3251:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
															"typeString": "struct Marketplace.NFT"
														}
													},
													"id": 3254,
													"nodeType": "ArrayTypeName",
													"src": "3251:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2882_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.NFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3250:14:12"
									},
									"scope": 3457,
									"src": "3209:520:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3455,
										"nodeType": "Block",
										"src": "3797:536:12",
										"statements": [
											{
												"assignments": [
													3354
												],
												"declarations": [
													{
														"constant": false,
														"id": 3354,
														"mutability": "mutable",
														"name": "nftCount",
														"nameLocation": "3809:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 3455,
														"src": "3804:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3353,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3804:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3356,
												"initialValue": {
													"id": 3355,
													"name": "_nftCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2859,
													"src": "3820:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3804:25:12"
											},
											{
												"assignments": [
													3358
												],
												"declarations": [
													{
														"constant": false,
														"id": 3358,
														"mutability": "mutable",
														"name": "myListedNftCount",
														"nameLocation": "3841:16:12",
														"nodeType": "VariableDeclaration",
														"scope": 3455,
														"src": "3836:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3357,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3836:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3360,
												"initialValue": {
													"hexValue": "30",
													"id": 3359,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3860:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3836:25:12"
											},
											{
												"body": {
													"id": 3392,
													"nodeType": "Block",
													"src": "3904:123:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 3379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3371,
																				"name": "_idToNFT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2869,
																				"src": "3917:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																				}
																			},
																			"id": 3375,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3372,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3362,
																					"src": "3926:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3930:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "3926:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3917:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NFT_$2882_storage",
																				"typeString": "struct Marketplace.NFT storage ref"
																			}
																		},
																		"id": 3376,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3933:6:12",
																		"memberName": "seller",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2875,
																		"src": "3917:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 3377,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3943:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3947:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3943:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3917:36:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3380,
																			"name": "_idToNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2869,
																			"src": "3957:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																			}
																		},
																		"id": 3384,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3381,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3362,
																				"src": "3966:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3970:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3966:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3957:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFT_$2882_storage",
																			"typeString": "struct Marketplace.NFT storage ref"
																		}
																	},
																	"id": 3385,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3973:6:12",
																	"memberName": "listed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2881,
																	"src": "3957:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3917:62:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3391,
															"nodeType": "IfStatement",
															"src": "3913:107:12",
															"trueBody": {
																"id": 3390,
																"nodeType": "Block",
																"src": "3981:39:12",
																"statements": [
																	{
																		"expression": {
																			"id": 3388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3992:18:12",
																			"subExpression": {
																				"id": 3387,
																				"name": "myListedNftCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3358,
																				"src": "3992:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3389,
																		"nodeType": "ExpressionStatement",
																		"src": "3992:18:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3365,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3362,
														"src": "3885:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3366,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3354,
														"src": "3889:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3885:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3393,
												"initializationExpression": {
													"assignments": [
														3362
													],
													"declarations": [
														{
															"constant": false,
															"id": 3362,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3878:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3393,
															"src": "3873:6:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3361,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3873:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3364,
													"initialValue": {
														"hexValue": "30",
														"id": 3363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3882:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3873:10:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3899:3:12",
														"subExpression": {
															"id": 3368,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3362,
															"src": "3899:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3370,
													"nodeType": "ExpressionStatement",
													"src": "3899:3:12"
												},
												"nodeType": "ForStatement",
												"src": "3868:159:12"
											},
											{
												"assignments": [
													3398
												],
												"declarations": [
													{
														"constant": false,
														"id": 3398,
														"mutability": "mutable",
														"name": "nfts",
														"nameLocation": "4048:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 3455,
														"src": "4035:17:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.NFT[]"
														},
														"typeName": {
															"baseType": {
																"id": 3396,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3395,
																	"name": "NFT",
																	"nameLocations": [
																		"4035:3:12"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2882,
																	"src": "4035:3:12"
																},
																"referencedDeclaration": 2882,
																"src": "4035:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																	"typeString": "struct Marketplace.NFT"
																}
															},
															"id": 3397,
															"nodeType": "ArrayTypeName",
															"src": "4035:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2882_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.NFT[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3405,
												"initialValue": {
													"arguments": [
														{
															"id": 3403,
															"name": "myListedNftCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3358,
															"src": "4065:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4055:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Marketplace.NFT memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3400,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3399,
																	"name": "NFT",
																	"nameLocations": [
																		"4059:3:12"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2882,
																	"src": "4059:3:12"
																},
																"referencedDeclaration": 2882,
																"src": "4059:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
																	"typeString": "struct Marketplace.NFT"
																}
															},
															"id": 3401,
															"nodeType": "ArrayTypeName",
															"src": "4059:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2882_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.NFT[]"
															}
														}
													},
													"id": 3404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4055:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.NFT memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4035:47:12"
											},
											{
												"assignments": [
													3407
												],
												"declarations": [
													{
														"constant": false,
														"id": 3407,
														"mutability": "mutable",
														"name": "nftsIndex",
														"nameLocation": "4094:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 3455,
														"src": "4089:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3406,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4089:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3409,
												"initialValue": {
													"hexValue": "30",
													"id": 3408,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4106:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4089:18:12"
											},
											{
												"body": {
													"id": 3451,
													"nodeType": "Block",
													"src": "4150:160:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 3428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3420,
																				"name": "_idToNFT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2869,
																				"src": "4163:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																				}
																			},
																			"id": 3424,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3421,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3411,
																					"src": "4172:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3422,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4176:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "4172:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4163:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NFT_$2882_storage",
																				"typeString": "struct Marketplace.NFT storage ref"
																			}
																		},
																		"id": 3425,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4179:6:12",
																		"memberName": "seller",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2875,
																		"src": "4163:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 3426,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4189:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4193:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4189:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "4163:36:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3429,
																			"name": "_idToNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2869,
																			"src": "4203:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																			}
																		},
																		"id": 3433,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3430,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3411,
																				"src": "4212:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4216:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "4212:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4203:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFT_$2882_storage",
																			"typeString": "struct Marketplace.NFT storage ref"
																		}
																	},
																	"id": 3434,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4219:6:12",
																	"memberName": "listed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2881,
																	"src": "4203:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4163:62:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3450,
															"nodeType": "IfStatement",
															"src": "4159:144:12",
															"trueBody": {
																"id": 3449,
																"nodeType": "Block",
																"src": "4227:76:12",
																"statements": [
																	{
																		"expression": {
																			"id": 3444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3436,
																					"name": "nfts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3398,
																					"src": "4238:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct Marketplace.NFT memory[] memory"
																					}
																				},
																				"id": 3438,
																				"indexExpression": {
																					"id": 3437,
																					"name": "nftsIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3407,
																					"src": "4243:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4238:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2882_memory_ptr",
																					"typeString": "struct Marketplace.NFT memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3439,
																					"name": "_idToNFT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2869,
																					"src": "4256:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2882_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																					}
																				},
																				"id": 3443,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3442,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3440,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3411,
																						"src": "4265:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3441,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4269:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4265:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4256:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2882_storage",
																					"typeString": "struct Marketplace.NFT storage ref"
																				}
																			},
																			"src": "4238:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NFT_$2882_memory_ptr",
																				"typeString": "struct Marketplace.NFT memory"
																			}
																		},
																		"id": 3445,
																		"nodeType": "ExpressionStatement",
																		"src": "4238:33:12"
																	},
																	{
																		"expression": {
																			"id": 3447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4282:11:12",
																			"subExpression": {
																				"id": 3446,
																				"name": "nftsIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3407,
																				"src": "4282:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3448,
																		"nodeType": "ExpressionStatement",
																		"src": "4282:11:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3414,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3411,
														"src": "4131:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3415,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3354,
														"src": "4135:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4131:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3452,
												"initializationExpression": {
													"assignments": [
														3411
													],
													"declarations": [
														{
															"constant": false,
															"id": 3411,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4124:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3452,
															"src": "4119:6:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3410,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4119:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3413,
													"initialValue": {
														"hexValue": "30",
														"id": 3412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4128:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4119:10:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4145:3:12",
														"subExpression": {
															"id": 3417,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3411,
															"src": "4145:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3419,
													"nodeType": "ExpressionStatement",
													"src": "4145:3:12"
												},
												"nodeType": "ForStatement",
												"src": "4114:196:12"
											},
											{
												"expression": {
													"id": 3453,
													"name": "nfts",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3398,
													"src": "4323:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.NFT memory[] memory"
													}
												},
												"functionReturnParameters": 3352,
												"id": 3454,
												"nodeType": "Return",
												"src": "4316:11:12"
											}
										]
									},
									"functionSelector": "1f4cc4db",
									"id": 3456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyListedNfts",
									"nameLocation": "3744:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3759:2:12"
									},
									"returnParameters": {
										"id": 3352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3456,
												"src": "3783:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_NFT_$2882_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.NFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3349,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3348,
															"name": "NFT",
															"nameLocations": [
																"3783:3:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2882,
															"src": "3783:3:12"
														},
														"referencedDeclaration": 2882,
														"src": "3783:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2882_storage_ptr",
															"typeString": "struct Marketplace.NFT"
														}
													},
													"id": 3350,
													"nodeType": "ArrayTypeName",
													"src": "3783:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2882_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.NFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3782:14:12"
									},
									"scope": 3457,
									"src": "3735:598:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3458,
							"src": "183:4153:12",
							"usedErrors": [
								1344
							],
							"usedEvents": [
								2894,
								2906
							]
						}
					],
					"src": "33:4305:12"
				},
				"id": 12
			}
		}
	}
}